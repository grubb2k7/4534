

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Feb 26 11:13:11 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataBANK0
    56  001012                     __pidataBANK0:
    57                           	opt stack 0
    58                           
    59                           ;initializer for main@F9238
    60  001012  A8                 	db	168
    61  001013  4F                 	db	79
    62                           
    63                           ;initializer for main@F9240
    64  001014  55                 	db	85
    65  001015  4D                 	db	77
    66  0000                     _INTCONbits	set	4082
    67  0000                     _IPR1bits	set	3999
    68  0000                     _LATB	set	3978
    69  0000                     _LATBbits	set	3978
    70  0000                     _OSCCON	set	4051
    71  0000                     _OSCCONbits	set	4051
    72  0000                     _OSCTUNEbits	set	3995
    73  0000                     _PIE1bits	set	3997
    74  0000                     _PIR1bits	set	3998
    75  0000                     _PORTBbits	set	3969
    76  0000                     _RCONbits	set	4048
    77  0000                     _RCREG1	set	4015
    78  0000                     _RCSTA1	set	4012
    79  0000                     _RCSTA1bits	set	4012
    80  0000                     _RCSTAbits	set	4012
    81  0000                     _SPBRG1	set	4016
    82  0000                     _SPBRGH1	set	3967
    83  0000                     _SSP1BUF	set	4041
    84  0000                     _SSP1CON2bits	set	4037
    85  0000                     _SSPADD	set	4040
    86  0000                     _SSPBUF	set	4041
    87  0000                     _SSPCON1	set	4038
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPCON2	set	4037
    90  0000                     _SSPCON2bits	set	4037
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _TMR0H	set	4055
    94  0000                     _TMR0L	set	4054
    95  0000                     _TMR1H	set	4047
    96  0000                     _TMR1L	set	4046
    97  0000                     _TRISB	set	3987
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TXSTA1	set	4013
   100  0000                     _TXSTA1bits	set	4013
   101                           
   102                           	psect	nvCOMRAM
   103  00002F                     __pnvCOMRAM:
   104                           	opt stack 0
   105  00002F                     _uc_ptr:
   106                           	opt stack 0
   107  00002F                     	ds	2
   108                           
   109                           	psect	nvBANK0
   110  0000A5                     __pnvBANK0:
   111                           	opt stack 0
   112  0000A5                     _ic_ptr:
   113                           	opt stack 0
   114  0000A5                     	ds	2
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  000E02                     __pcinit:
   120                           	opt stack 0
   121  000E02                     start_initialization:
   122                           	opt stack 0
   123  000E02                     __initialization:
   124                           	opt stack 0
   125                           
   126                           ; Clear objects allocated to BANK1 (216 bytes)
   127  000E02  EE01  F000         	lfsr	0,__pbssBANK1
   128  000E06  0ED8               	movlw	216
   129  000E08                     clear_0:
   130  000E08  6AEE               	clrf	postinc0,c
   131  000E0A  06E8               	decf	wreg,f,c
   132  000E0C  E1FD               	bnz	clear_0
   133                           
   134                           ; Clear objects allocated to COMRAM (2 bytes)
   135  000E0E  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   136  000E10  6A31               	clrf	__pbssCOMRAM& (0+255),c
   137                           
   138                           ; Initialize objects allocated to BANK0 (4 bytes)
   139                           ; load TBLPTR registers with __pidataBANK0
   140  000E12  0E12               	movlw	low __pidataBANK0
   141  000E14  6EF6               	movwf	tblptrl,c
   142  000E16  0E10               	movlw	high __pidataBANK0
   143  000E18  6EF7               	movwf	tblptrh,c
   144  000E1A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   145  000E1C  6EF8               	movwf	tblptru,c
   146  000E1E  EE00  F0A1         	lfsr	0,__pdataBANK0
   147  000E22  EE10 F004          	lfsr	1,4
   148  000E26                     copy_data0:
   149  000E26  0009               	tblrd		*+
   150  000E28  CFF5 FFEE          	movff	tablat,postinc0
   151  000E2C  50E5               	movf	postdec1,w,c
   152  000E2E  50E1               	movf	fsr1l,w,c
   153  000E30  E1FA               	bnz	copy_data0
   154  000E32                     end_of_initialization:
   155                           	opt stack 0
   156  000E32                     __end_of__initialization:
   157                           	opt stack 0
   158  000E32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  000E34  6EF8               	movwf	tblptru,c
   160  000E36  0100               	movlb	0
   161  000E38  EF07  F003         	goto	_main	;jump to C main() function
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           postdec1	equ	0xFE5
   169                           fsr1l	equ	0xFE1
   170                           
   171                           	psect	bssCOMRAM
   172  000031                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000031                     _MQ_Main_Willing_to_block:
   175                           	opt stack 0
   176  000031                     	ds	1
   177  000032                     _USART1_Status:
   178                           	opt stack 0
   179  000032                     	ds	1
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           tblptrl	equ	0xFF6
   183                           tablat	equ	0xFF5
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           postdec1	equ	0xFE5
   187                           fsr1l	equ	0xFE1
   188                           
   189                           	psect	dataBANK0
   190  0000A1                     __pdataBANK0:
   191                           	opt stack 0
   192  0000A1                     main@F9238:
   193                           	opt stack 0
   194  0000A1                     	ds	2
   195  0000A3                     main@F9240:
   196                           	opt stack 0
   197  0000A3                     	ds	2
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           
   207                           	psect	bssBANK1
   208  000100                     __pbssBANK1:
   209                           	opt stack 0
   210  000100                     _FromMainHigh_MQ:
   211                           	opt stack 0
   212  000100                     	ds	54
   213  000136                     _FromMainLow_MQ:
   214                           	opt stack 0
   215  000136                     	ds	54
   216  00016C                     _ToMainHigh_MQ:
   217                           	opt stack 0
   218  00016C                     	ds	54
   219  0001A2                     _ToMainLow_MQ:
   220                           	opt stack 0
   221  0001A2                     	ds	54
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           postdec1	equ	0xFE5
   229                           fsr1l	equ	0xFE1
   230                           
   231                           	psect	cstackBANK2
   232  000200                     __pcstackBANK2:
   233                           	opt stack 0
   234  000200                     main@t1thread_data:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238  000200                     	ds	2
   239  000202                     main@msgMotor:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x2
   243  000202                     	ds	2
   244  000204                     main@msgSensor:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  000204                     	ds	2
   249  000206                     main@uc:
   250                           	opt stack 0
   251                           
   252                           ; 5 bytes @ 0x6
   253  000206                     	ds	5
   254  00020B                     main@ic:
   255                           	opt stack 0
   256                           
   257                           ; 31 bytes @ 0xB
   258  00020B                     	ds	31
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	cstackBANK0
   269  000060                     __pcstackBANK0:
   270                           	opt stack 0
   271  000060                     ?_in_high_int:
   272                           	opt stack 0
   273  000060                     check_msg@qptr:
   274                           	opt stack 0
   275  000060                     WriteTimer0@timer0:
   276                           	opt stack 0
   277  000060                     i2memcpy@d1:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x0
   281  000060                     	ds	2
   282  000062                     ?_in_low_int:
   283                           	opt stack 0
   284  000062                     WriteTimer0@timer:
   285                           	opt stack 0
   286  000062                     i2memcpy@s1:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x2
   290  000062                     	ds	2
   291  000064                     i2memcpy@n:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x4
   295  000064                     	ds	2
   296  000066                     i2memcpy@d:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000066                     	ds	2
   301  000068                     i2memcpy@s:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x8
   305  000068                     	ds	2
   306  00006A                     recv_msg@qptr:
   307                           	opt stack 0
   308  00006A                     i2send_msg@qptr:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00006A                     	ds	2
   313  00006C                     recv_msg@maxlength:
   314                           	opt stack 0
   315  00006C                     i2send_msg@length:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0xC
   319  00006C                     	ds	1
   320  00006D                     i2send_msg@msgtype:
   321                           	opt stack 0
   322  00006D                     recv_msg@msgtype:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0xD
   326  00006D                     	ds	1
   327  00006E                     i2send_msg@data:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0xE
   331  00006E                     	ds	1
   332  00006F                     recv_msg@data:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0xF
   336  00006F                     	ds	1
   337  000070                     i2send_msg@tlength:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x10
   341  000070                     	ds	1
   342  000071                     ??_recv_msg:
   343                           
   344                           ; 0 bytes @ 0x11
   345  000071                     	ds	1
   346  000072                     i2send_msg@slot:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x12
   350  000072                     	ds	1
   351  000073                     recv_msg@slot:
   352                           	opt stack 0
   353  000073                     i2send_msg@qmsg:
   354                           	opt stack 0
   355                           
   356                           ; 2 bytes @ 0x13
   357  000073                     	ds	1
   358  000074                     recv_msg@tlength:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x14
   362  000074                     	ds	1
   363  000075                     ToMainHigh_sendmsg@msgtype:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x15
   367  000075                     	ds	1
   368  000076                     recv_msg@qmsg:
   369                           	opt stack 0
   370  000076                     ToMainHigh_sendmsg@data:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x16
   374  000076                     	ds	2
   375  000078                     ToMainHigh_sendmsg@length:
   376                           	opt stack 0
   377  000078                     FromMainHigh_recvmsg@msgtype:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x18
   381  000078                     	ds	2
   382  00007A                     FromMainHigh_recvmsg@data:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x1A
   386  00007A                     	ds	2
   387  00007C                     timer0_int_handler@length:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x1C
   391  00007C                     	ds	2
   392  00007E                     timer0_int_handler@msgtype:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x1E
   396  00007E                     	ds	2
   397  000080                     timer0_int_handler@val:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x20
   401  000080                     	ds	2
   402  000082                     ??_InterruptHandlerHigh:
   403                           
   404                           ; 0 bytes @ 0x22
   405  000082                     	ds	14
   406  000090                     ?_get_buffer:
   407                           	opt stack 0
   408  000090                     i2c_master_recv@slave_addr:
   409                           	opt stack 0
   410  000090                     init_queue@qptr:
   411                           	opt stack 0
   412  000090                     i2c_master_send@msg:
   413                           	opt stack 0
   414  000090                     init_i2c@ic:
   415                           	opt stack 0
   416  000090                     init_uart_recv@uc:
   417                           	opt stack 0
   418  000090                     init_timer1_lthread@tptr:
   419                           	opt stack 0
   420  000090                     Open1USART@spbrg:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x30
   424  000090                     	ds	1
   425  000091                     i2c_master_recv@length:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x31
   429  000091                     	ds	1
   430  000092                     ??_Open1USART:
   431  000092                     ??_i2c_master_send:
   432  000092                     ??_get_buffer:
   433  000092                     init_queue@i:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x32
   437  000092                     	ds	1
   438  000093                     
   439                           ; 0 bytes @ 0x33
   440  000093                     	ds	1
   441  000094                     i2c_master_send@length:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x34
   445  000094                     	ds	1
   446  000095                     Open1USART@config:
   447                           	opt stack 0
   448  000095                     get_buffer@ret_buf:
   449                           	opt stack 0
   450                           
   451                           ; 10 bytes @ 0x35
   452  000095                     	ds	10
   453  00009F                     get_buffer@i:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x3F
   457  00009F                     	ds	2
   458  0000A1                     tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           ; 0 bytes @ 0x41
   468                           
   469                           	psect	cstackCOMRAM
   470  000001                     __pcstackCOMRAM:
   471                           	opt stack 0
   472  000001                     ?_ReadTimer1:
   473                           	opt stack 0
   474  000001                     Read1USART@data:
   475                           	opt stack 0
   476  000001                     WriteTimer1@timer1:
   477                           	opt stack 0
   478  000001                     memcpy@d1:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x0
   482  000001                     	ds	2
   483  000003                     ReadTimer1@timer:
   484                           	opt stack 0
   485  000003                     WriteTimer1@timer:
   486                           	opt stack 0
   487  000003                     memcpy@s1:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491  000003                     	ds	2
   492  000005                     memcpy@n:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x4
   496  000005                     	ds	2
   497  000007                     memcpy@d:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x6
   501  000007                     	ds	2
   502  000009                     memcpy@s:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x8
   506  000009                     	ds	2
   507  00000B                     send_msg@qptr:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xA
   511  00000B                     	ds	2
   512  00000D                     send_msg@length:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0xC
   516  00000D                     	ds	1
   517  00000E                     send_msg@msgtype:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0xD
   521  00000E                     	ds	1
   522  00000F                     send_msg@data:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0xE
   526  00000F                     	ds	2
   527  000011                     ??_send_msg:
   528                           
   529                           ; 0 bytes @ 0x10
   530  000011                     	ds	1
   531  000012                     send_msg@tlength:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x11
   535  000012                     	ds	2
   536  000014                     send_msg@slot:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540  000014                     	ds	1
   541  000015                     send_msg@qmsg:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x14
   545  000015                     	ds	2
   546  000017                     ToMainLow_sendmsg@msgtype:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x16
   550  000017                     	ds	1
   551  000018                     ToMainLow_sendmsg@data:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x17
   555  000018                     	ds	2
   556  00001A                     ToMainLow_sendmsg@length:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x19
   560  00001A                     	ds	1
   561  00001B                     ??_uart_recv_int_handler:
   562  00001B                     timer1_int_handler@result:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x1A
   566  00001B                     	ds	2
   567  00001D                     ??_InterruptHandlerLow:
   568                           
   569                           ; 0 bytes @ 0x1C
   570  00001D                     	ds	17
   571  00002E                     ??_i2c_master_int_handler:
   572  00002E                     ??_check_msg:
   573  00002E                     ??i2_send_msg:
   574  00002E                     FromMainHigh_recvmsg@maxlength:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x2D
   578  00002E                     	ds	1
   579  00002F                     tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           postinc0	equ	0xFEE
   584                           wreg	equ	0xFE8
   585                           postdec1	equ	0xFE5
   586                           fsr1l	equ	0xFE1
   587                           
   588                           ; 0 bytes @ 0x2E
   589 ;;
   590 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   591 ;;
   592 ;; *************** function _main *****************
   593 ;; Defined at:
   594 ;;		line 186 in file "../src/main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  ic             31   11[BANK2 ] struct __i2c_comm
   599 ;;  msgbuffer      11    0        unsigned char [11]
   600 ;;  uc              5    6[BANK2 ] struct __uart_comm
   601 ;;  msgSensor       2    4[BANK2 ] unsigned char [2]
   602 ;;  msgMotor        2    2[BANK2 ] unsigned char [2]
   603 ;;  t1thread_dat    2    0[BANK2 ] struct __timer1_thread_s
   604 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   605 ;;  uthread_data    2    0        struct __uart_thread_str
   606 ;;  i               1    0        unsigned char 
   607 ;;  last_reg_rec    1    0        unsigned char 
   608 ;;  msgtype         1    0        unsigned char 
   609 ;;  length          1    0        char 
   610 ;;  c               1    0        unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;		None               void
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   621 ;;      Locals:         0       0       0      42       0       0       0       0       0       0       0       0       
      +0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Totals:         0       0       0      42       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;Total ram usage:       42 bytes
   625 ;; Hardware stack levels required when called:   12
   626 ;; This function calls:
   627 ;;		_Open1USART
   628 ;;		_enable_interrupts
   629 ;;		_get_buffer
   630 ;;		_i2c_configure_master
   631 ;;		_i2c_master_recv
   632 ;;		_i2c_master_send
   633 ;;		_init_i2c
   634 ;;		_init_queues
   635 ;;		_init_timer1_lthread
   636 ;;		_init_uart_recv
   637 ;;		_wait_till_idle
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text0
   644  00060E                     __ptext0:
   645                           	opt stack 0
   646  00060E                     _main:
   647                           	opt stack 19
   648                           
   649                           ;main.c: 187: char c;
   650                           ;main.c: 188: signed char length;
   651                           ;main.c: 189: unsigned char msgtype;
   652                           ;main.c: 190: unsigned char last_reg_recvd;
   653                           ;main.c: 191: uart_comm uc;
   654                           ;main.c: 192: i2c_comm ic;
   655                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   656                           ;main.c: 194: unsigned char i;
   657                           ;main.c: 195: uart_thread_struct uthread_data;
   658                           ;main.c: 196: timer1_thread_struct t1thread_data;
   659                           ;main.c: 197: timer0_thread_struct t0thread_data;
   660                           ;main.c: 200: OSCCON = 0xE0;
   661                           
   662                           ;incstack = 0
   663  00060E  0EE0               	movlw	224
   664  000610  6ED3               	movwf	4051,c	;volatile
   665                           
   666                           ;main.c: 201: OSCTUNEbits.PLLEN = 1;
   667  000612  8C9B               	bsf	3995,6,c	;volatile
   668                           
   669                           ;main.c: 208: init_uart_recv(&uc);
   670  000614  0102               	movlb	2	; () banked
   671  000616  0E02               	movlw	high main@uc
   672  000618  0100               	movlb	0	; () banked
   673  00061A  6F91               	movwf	(init_uart_recv@uc+1)& (0+255),b
   674  00061C  0102               	movlb	2	; () banked
   675  00061E  0E06               	movlw	low main@uc
   676  000620  0100               	movlb	0	; () banked
   677  000622  6F90               	movwf	init_uart_recv@uc& (0+255),b
   678  000624  ECAB  F007         	call	_init_uart_recv	;wreg free
   679                           
   680                           ;main.c: 211: init_i2c(&ic);
   681  000628  0102               	movlb	2	; () banked
   682  00062A  0E02               	movlw	high main@ic
   683  00062C  0100               	movlb	0	; () banked
   684  00062E  6F91               	movwf	(init_i2c@ic+1)& (0+255),b
   685  000630  0102               	movlb	2	; () banked
   686  000632  0E0B               	movlw	low main@ic
   687  000634  0100               	movlb	0	; () banked
   688  000636  6F90               	movwf	init_i2c@ic& (0+255),b
   689  000638  ECDB  F005         	call	_init_i2c	;wreg free
   690                           
   691                           ;main.c: 214: init_timer1_lthread(&t1thread_data);
   692  00063C  0102               	movlb	2	; () banked
   693  00063E  0E02               	movlw	high main@t1thread_data
   694  000640  0100               	movlb	0	; () banked
   695  000642  6F91               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   696  000644  0102               	movlb	2	; () banked
   697  000646  0E00               	movlw	low main@t1thread_data
   698  000648  0100               	movlb	0	; () banked
   699  00064A  6F90               	movwf	init_timer1_lthread@tptr& (0+255),b
   700  00064C  ECD6  F007         	call	_init_timer1_lthread	;wreg free
   701                           
   702                           ;main.c: 217: init_queues();
   703  000650  EC6F  F006         	call	_init_queues	;wreg free
   704                           
   705                           ;main.c: 221: TRISB = 0x0;
   706  000654  0E00               	movlw	0
   707  000656  6E93               	movwf	3987,c	;volatile
   708                           
   709                           ;main.c: 222: LATB = 0x0;
   710  000658  0E00               	movlw	0
   711  00065A  6E8A               	movwf	3978,c	;volatile
   712                           
   713                           ;main.c: 251: IPR1bits.TMR1IP = 0;
   714  00065C  909F               	bcf	3999,0,c	;volatile
   715                           
   716                           ;main.c: 253: IPR1bits.RCIP = 0;
   717  00065E  9A9F               	bcf	3999,5,c	;volatile
   718                           
   719                           ;main.c: 255: IPR1bits.SSPIP = 1;
   720  000660  869F               	bsf	3999,3,c	;volatile
   721                           
   722                           ;main.c: 264: i2c_configure_master();
   723  000662  EC1E  F007         	call	_i2c_configure_master	;wreg free
   724                           
   725                           ;main.c: 279: PIE1bits.SSPIE = 1;
   726  000666  869D               	bsf	3997,3,c	;volatile
   727                           
   728                           ;main.c: 287: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   729                           ;main.c: 288: 0b11111111 & 0b11101111, 0x19);
   730  000668  0E00               	movlw	0
   731  00066A  0100               	movlb	0	; () banked
   732  00066C  6F91               	movwf	(Open1USART@spbrg+1)& (0+255),b
   733  00066E  0E19               	movlw	25
   734  000670  0100               	movlb	0	; () banked
   735  000672  6F90               	movwf	Open1USART@spbrg& (0+255),b
   736  000674  0E6C               	movlw	108
   737  000676  EC6C  F005         	call	_Open1USART
   738                           
   739                           ;main.c: 297: enable_interrupts();
   740  00067A  EC02  F008         	call	_enable_interrupts	;wreg free
   741                           
   742                           ;main.c: 317: unsigned char msgMotor[] = {0xA8, 0x4F};
   743  00067E  C0A1  F202         	movff	main@F9238,main@msgMotor
   744  000682  C0A2  F203         	movff	main@F9238+1,main@msgMotor+1
   745                           
   746                           ;main.c: 318: unsigned char msgSensor[] = {0x55, 0x4D};
   747  000686  C0A3  F204         	movff	main@F9240,main@msgSensor
   748  00068A  C0A4  F205         	movff	main@F9240+1,main@msgSensor+1
   749  00068E                     l3118:
   750                           
   751                           ;main.c: 320: i2c_master_send(1, &msgMotor);
   752  00068E  0102               	movlb	2	; () banked
   753  000690  0E02               	movlw	high main@msgMotor
   754  000692  0100               	movlb	0	; () banked
   755  000694  6F91               	movwf	(i2c_master_send@msg+1)& (0+255),b
   756  000696  0102               	movlb	2	; () banked
   757  000698  0E02               	movlw	low main@msgMotor
   758  00069A  0100               	movlb	0	; () banked
   759  00069C  6F90               	movwf	i2c_master_send@msg& (0+255),b
   760  00069E  0E01               	movlw	1
   761  0006A0  ECC6  F001         	call	_i2c_master_send
   762                           
   763                           ;main.c: 321: wait_till_idle();
   764  0006A4  ECC9  F007         	call	_wait_till_idle	;wreg free
   765                           
   766                           ;main.c: 322: i2c_master_send(1, &msgSensor);
   767  0006A8  0102               	movlb	2	; () banked
   768  0006AA  0E02               	movlw	high main@msgSensor
   769  0006AC  0100               	movlb	0	; () banked
   770  0006AE  6F91               	movwf	(i2c_master_send@msg+1)& (0+255),b
   771  0006B0  0102               	movlb	2	; () banked
   772  0006B2  0E04               	movlw	low main@msgSensor
   773  0006B4  0100               	movlb	0	; () banked
   774  0006B6  6F90               	movwf	i2c_master_send@msg& (0+255),b
   775  0006B8  0E01               	movlw	1
   776  0006BA  ECC6  F001         	call	_i2c_master_send
   777                           
   778                           ;main.c: 323: wait_till_idle();
   779  0006BE  ECC9  F007         	call	_wait_till_idle	;wreg free
   780                           
   781                           ;main.c: 324: i2c_master_recv(1, msgMotor[1]);
   782  0006C2  C203  F090         	movff	main@msgMotor+1,i2c_master_recv@slave_addr
   783  0006C6  0E01               	movlw	1
   784  0006C8  EC4F  F004         	call	_i2c_master_recv
   785                           
   786                           ;main.c: 325: wait_till_idle();
   787  0006CC  ECC9  F007         	call	_wait_till_idle	;wreg free
   788                           
   789                           ;main.c: 326: msgMotor[0] = get_buffer()[0];
   790  0006D0  ECE8  F004         	call	_get_buffer	;wreg free
   791  0006D4  0100               	movlb	0	; () banked
   792  0006D6  C090  FFD9         	movff	?_get_buffer,fsr2l
   793  0006DA  0100               	movlb	0	; () banked
   794  0006DC  C091  FFDA         	movff	?_get_buffer+1,fsr2h
   795  0006E0  50DF               	movf	indf2,w,c
   796  0006E2  0102               	movlb	2	; () banked
   797  0006E4  6F02               	movwf	main@msgMotor& (0+255),b
   798                           
   799                           ; BSR set to: 2
   800                           ;main.c: 327: i2c_master_recv(1, msgSensor[1]);
   801  0006E6  C205  F090         	movff	main@msgSensor+1,i2c_master_recv@slave_addr
   802  0006EA  0E01               	movlw	1
   803  0006EC  EC4F  F004         	call	_i2c_master_recv
   804                           
   805                           ;main.c: 328: wait_till_idle();
   806  0006F0  ECC9  F007         	call	_wait_till_idle	;wreg free
   807                           
   808                           ;main.c: 329: msgSensor[0] = get_buffer()[0];
   809  0006F4  ECE8  F004         	call	_get_buffer	;wreg free
   810  0006F8  0100               	movlb	0	; () banked
   811  0006FA  C090  FFD9         	movff	?_get_buffer,fsr2l
   812  0006FE  0100               	movlb	0	; () banked
   813  000700  C091  FFDA         	movff	?_get_buffer+1,fsr2h
   814  000704  50DF               	movf	indf2,w,c
   815  000706  0102               	movlb	2	; () banked
   816  000708  6F04               	movwf	main@msgSensor& (0+255),b
   817  00070A  D7C1               	goto	l3118
   818  00070C                     __end_of_main:
   819                           	opt stack 0
   820                           tblptru	equ	0xFF8
   821                           tblptrh	equ	0xFF7
   822                           tblptrl	equ	0xFF6
   823                           tablat	equ	0xFF5
   824                           postinc0	equ	0xFEE
   825                           wreg	equ	0xFE8
   826                           postdec1	equ	0xFE5
   827                           fsr1l	equ	0xFE1
   828                           indf2	equ	0xFDF
   829                           fsr2h	equ	0xFDA
   830                           fsr2l	equ	0xFD9
   831                           
   832 ;; *************** function _wait_till_idle *****************
   833 ;; Defined at:
   834 ;;		line 169 in file "../src/my_i2c.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;		None               void
   841 ;; Registers used:
   842 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:   10
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text1
   863  000F92                     __ptext1:
   864                           	opt stack 0
   865  000F92                     _wait_till_idle:
   866                           	opt stack 20
   867  000F92                     l3012:
   868  000F92  0100               	movlb	0	; () banked
   869  000F94  EE20 F00D          	lfsr	2,13
   870  000F98  0100               	movlb	0	; () banked
   871  000F9A  51A5               	movf	_ic_ptr& (0+255),w,b
   872  000F9C  26D9               	addwf	fsr2l,f,c
   873  000F9E  0100               	movlb	0	; () banked
   874  000FA0  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
   875  000FA2  22DA               	addwfc	fsr2h,f,c
   876  000FA4  0E04               	movlw	4
   877  000FA6  62DF               	cpfseq	indf2,c
   878  000FA8  D7F4               	goto	l3012
   879  000FAA  0012               	return	
   880  000FAC                     __end_of_wait_till_idle:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           indf2	equ	0xFDF
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           
   894 ;; *************** function _init_uart_recv *****************
   895 ;; Defined at:
   896 ;;		line 49 in file "../src/my_uart.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  uc              2   48[BANK0 ] PTR struct __uart_comm
   899 ;;		 -> main@uc(5), 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:   10
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text2
   926  000F56                     __ptext2:
   927                           	opt stack 0
   928  000F56                     _init_uart_recv:
   929                           	opt stack 20
   930                           
   931                           ;my_uart.c: 50: uc_ptr = uc;
   932                           
   933                           ; BSR set to: 0
   934                           ;incstack = 0
   935  000F56  0100               	movlb	0	; () banked
   936  000F58  C091  F030         	movff	init_uart_recv@uc+1,_uc_ptr+1
   937  000F5C  0100               	movlb	0	; () banked
   938  000F5E  C090  F02F         	movff	init_uart_recv@uc,_uc_ptr
   939                           
   940                           ; BSR set to: 0
   941                           ;my_uart.c: 51: uc_ptr->buflen = 0;
   942  000F62  EE20 F004          	lfsr	2,4
   943  000F66  502F               	movf	_uc_ptr,w,c
   944  000F68  26D9               	addwf	fsr2l,f,c
   945  000F6A  5030               	movf	_uc_ptr+1,w,c
   946  000F6C  22DA               	addwfc	fsr2h,f,c
   947  000F6E  0E00               	movlw	0
   948  000F70  6EDF               	movwf	indf2,c
   949                           
   950                           ; BSR set to: 0
   951  000F72  0012               	return	
   952  000F74                     __end_of_init_uart_recv:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           postinc0	equ	0xFEE
   959                           wreg	equ	0xFE8
   960                           postdec1	equ	0xFE5
   961                           fsr1l	equ	0xFE1
   962                           indf2	equ	0xFDF
   963                           fsr2h	equ	0xFDA
   964                           fsr2l	equ	0xFD9
   965                           
   966 ;; *************** function _init_timer1_lthread *****************
   967 ;; Defined at:
   968 ;;		line 6 in file "../src/timer1_thread.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  tptr            2   48[BANK0 ] PTR struct __timer1_thre
   971 ;;		 -> main@t1thread_data(2), 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;Total ram usage:        2 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:   10
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text3
   998  000FAC                     __ptext3:
   999                           	opt stack 0
  1000  000FAC                     _init_timer1_lthread:
  1001                           	opt stack 20
  1002                           
  1003                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;incstack = 0
  1007  000FAC  C090  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  1008  000FB0  C091  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  1009  000FB4  0E00               	movlw	0
  1010  000FB6  6EDE               	movwf	postinc2,c
  1011  000FB8  0E00               	movlw	0
  1012  000FBA  6EDD               	movwf	postdec2,c
  1013  000FBC  0012               	return	
  1014  000FBE                     __end_of_init_timer1_lthread:
  1015                           	opt stack 0
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           postdec1	equ	0xFE5
  1023                           fsr1l	equ	0xFE1
  1024                           indf2	equ	0xFDF
  1025                           postinc2	equ	0xFDE
  1026                           postdec2	equ	0xFDD
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           
  1030 ;; *************** function _init_queues *****************
  1031 ;; Defined at:
  1032 ;;		line 194 in file "../src/messages.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:   11
  1053 ;; This function calls:
  1054 ;;		_init_queue
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  000CDE                     __ptext4:
  1062                           	opt stack 0
  1063  000CDE                     _init_queues:
  1064                           	opt stack 19
  1065                           
  1066                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1067                           
  1068                           ;incstack = 0
  1069  000CDE  0E00               	movlw	0
  1070  000CE0  6E31               	movwf	_MQ_Main_Willing_to_block,c
  1071                           
  1072                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1073  000CE2  0101               	movlb	1	; () banked
  1074  000CE4  0E01               	movlw	high _ToMainLow_MQ
  1075  000CE6  0100               	movlb	0	; () banked
  1076  000CE8  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  1077  000CEA  0101               	movlb	1	; () banked
  1078  000CEC  0EA2               	movlw	low _ToMainLow_MQ
  1079  000CEE  0100               	movlb	0	; () banked
  1080  000CF0  6F90               	movwf	init_queue@qptr& (0+255),b
  1081  000CF2  EC0E  F006         	call	_init_queue	;wreg free
  1082                           
  1083                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1084  000CF6  0101               	movlb	1	; () banked
  1085  000CF8  0E01               	movlw	high _ToMainHigh_MQ
  1086  000CFA  0100               	movlb	0	; () banked
  1087  000CFC  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  1088  000CFE  0101               	movlb	1	; () banked
  1089  000D00  0E6C               	movlw	low _ToMainHigh_MQ
  1090  000D02  0100               	movlb	0	; () banked
  1091  000D04  6F90               	movwf	init_queue@qptr& (0+255),b
  1092  000D06  EC0E  F006         	call	_init_queue	;wreg free
  1093                           
  1094                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1095  000D0A  0101               	movlb	1	; () banked
  1096  000D0C  0E01               	movlw	high _FromMainLow_MQ
  1097  000D0E  0100               	movlb	0	; () banked
  1098  000D10  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  1099  000D12  0101               	movlb	1	; () banked
  1100  000D14  0E36               	movlw	low _FromMainLow_MQ
  1101  000D16  0100               	movlb	0	; () banked
  1102  000D18  6F90               	movwf	init_queue@qptr& (0+255),b
  1103  000D1A  EC0E  F006         	call	_init_queue	;wreg free
  1104                           
  1105                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1106  000D1E  0101               	movlb	1	; () banked
  1107  000D20  0E01               	movlw	high _FromMainHigh_MQ
  1108  000D22  0100               	movlb	0	; () banked
  1109  000D24  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  1110  000D26  0101               	movlb	1	; () banked
  1111  000D28  0E00               	movlw	low _FromMainHigh_MQ
  1112  000D2A  0100               	movlb	0	; () banked
  1113  000D2C  6F90               	movwf	init_queue@qptr& (0+255),b
  1114  000D2E  EC0E  F006         	call	_init_queue	;wreg free
  1115  000D32  0012               	return	
  1116  000D34                     __end_of_init_queues:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           indf2	equ	0xFDF
  1127                           postinc2	equ	0xFDE
  1128                           postdec2	equ	0xFDD
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           
  1132 ;; *************** function _init_queue *****************
  1133 ;; Defined at:
  1134 ;;		line 14 in file "../src/messages.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  1137 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  i               1   50[BANK0 ] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;		None               void
  1142 ;; Registers used:
  1143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;Total ram usage:        3 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:   10
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_init_queues
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text5
  1164  000C1C                     __ptext5:
  1165                           	opt stack 0
  1166  000C1C                     _init_queue:
  1167                           	opt stack 19
  1168                           
  1169                           ;messages.c: 15: unsigned char i;
  1170                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1171                           
  1172                           ;incstack = 0
  1173  000C1C  0100               	movlb	0	; () banked
  1174  000C1E  EE20 F034          	lfsr	2,52
  1175  000C22  0100               	movlb	0	; () banked
  1176  000C24  5190               	movf	init_queue@qptr& (0+255),w,b
  1177  000C26  26D9               	addwf	fsr2l,f,c
  1178  000C28  0100               	movlb	0	; () banked
  1179  000C2A  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  1180  000C2C  22DA               	addwfc	fsr2h,f,c
  1181  000C2E  0E00               	movlw	0
  1182  000C30  6EDF               	movwf	indf2,c
  1183                           
  1184                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1185  000C32  0100               	movlb	0	; () banked
  1186  000C34  EE20 F035          	lfsr	2,53
  1187  000C38  0100               	movlb	0	; () banked
  1188  000C3A  5190               	movf	init_queue@qptr& (0+255),w,b
  1189  000C3C  26D9               	addwf	fsr2l,f,c
  1190  000C3E  0100               	movlb	0	; () banked
  1191  000C40  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  1192  000C42  22DA               	addwfc	fsr2h,f,c
  1193  000C44  0E00               	movlw	0
  1194  000C46  6EDF               	movwf	indf2,c
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1198  000C48  0E00               	movlw	0
  1199  000C4A  0100               	movlb	0	; () banked
  1200  000C4C  6F92               	movwf	init_queue@i& (0+255),b
  1201                           
  1202                           ; BSR set to: 0
  1203  000C4E  0E03               	movlw	3
  1204  000C50  0100               	movlb	0	; () banked
  1205  000C52  6592               	cpfsgt	init_queue@i& (0+255),b
  1206  000C54  D001               	goto	l2722
  1207  000C56  0012               	return	
  1208  000C58                     l2722:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;messages.c: 20: qptr->queue[i].full = 0;
  1212  000C58  0100               	movlb	0	; () banked
  1213  000C5A  5192               	movf	init_queue@i& (0+255),w,b
  1214  000C5C  0D0D               	mullw	13
  1215  000C5E  50F3               	movf	prodl,w,c
  1216  000C60  0100               	movlb	0	; () banked
  1217  000C62  2590               	addwf	init_queue@qptr& (0+255),w,b
  1218  000C64  6ED9               	movwf	fsr2l,c
  1219  000C66  50F4               	movf	prodh,w,c
  1220  000C68  0100               	movlb	0	; () banked
  1221  000C6A  2191               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1222  000C6C  6EDA               	movwf	fsr2h,c
  1223  000C6E  0E00               	movlw	0
  1224  000C70  6EDF               	movwf	indf2,c
  1225                           
  1226                           ; BSR set to: 0
  1227  000C72  0100               	movlb	0	; () banked
  1228  000C74  2B92               	incf	init_queue@i& (0+255),f,b
  1229                           
  1230                           ; BSR set to: 0
  1231  000C76  0E03               	movlw	3
  1232  000C78  0100               	movlb	0	; () banked
  1233  000C7A  6592               	cpfsgt	init_queue@i& (0+255),b
  1234  000C7C  D7ED               	goto	l2722
  1235  000C7E  0012               	return	
  1236  000C80                     __end_of_init_queue:
  1237                           	opt stack 0
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           prodh	equ	0xFF4
  1243                           prodl	equ	0xFF3
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           indf2	equ	0xFDF
  1249                           postinc2	equ	0xFDE
  1250                           postdec2	equ	0xFDD
  1251                           fsr2h	equ	0xFDA
  1252                           fsr2l	equ	0xFD9
  1253                           
  1254 ;; *************** function _init_i2c *****************
  1255 ;; Defined at:
  1256 ;;		line 398 in file "../src/my_i2c.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  ic              2   48[BANK0 ] PTR struct __i2c_comm
  1259 ;;		 -> main@ic(31), 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;		None               void
  1264 ;; Registers used:
  1265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1275 ;;Total ram usage:        2 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:   10
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text6
  1286  000BB6                     __ptext6:
  1287                           	opt stack 0
  1288  000BB6                     _init_i2c:
  1289                           	opt stack 20
  1290                           
  1291                           ;my_i2c.c: 399: ic_ptr = ic;
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;incstack = 0
  1295  000BB6  0100               	movlb	0	; () banked
  1296  000BB8  C091  F0A6         	movff	init_i2c@ic+1,_ic_ptr+1
  1297  000BBC  0100               	movlb	0	; () banked
  1298  000BBE  C090  F0A5         	movff	init_i2c@ic,_ic_ptr
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;my_i2c.c: 400: ic_ptr->buflen = 0;
  1302  000BC2  0100               	movlb	0	; () banked
  1303  000BC4  EE20 F00A          	lfsr	2,10
  1304  000BC8  0100               	movlb	0	; () banked
  1305  000BCA  51A5               	movf	_ic_ptr& (0+255),w,b
  1306  000BCC  26D9               	addwf	fsr2l,f,c
  1307  000BCE  0100               	movlb	0	; () banked
  1308  000BD0  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1309  000BD2  22DA               	addwfc	fsr2h,f,c
  1310  000BD4  0E00               	movlw	0
  1311  000BD6  6EDF               	movwf	indf2,c
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;my_i2c.c: 401: ic_ptr->event_count = 0;
  1315  000BD8  0100               	movlb	0	; () banked
  1316  000BDA  EE20 F00C          	lfsr	2,12
  1317  000BDE  0100               	movlb	0	; () banked
  1318  000BE0  51A5               	movf	_ic_ptr& (0+255),w,b
  1319  000BE2  26D9               	addwf	fsr2l,f,c
  1320  000BE4  0100               	movlb	0	; () banked
  1321  000BE6  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1322  000BE8  22DA               	addwfc	fsr2h,f,c
  1323  000BEA  0E00               	movlw	0
  1324  000BEC  6EDF               	movwf	indf2,c
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;my_i2c.c: 402: ic_ptr->status = 0x5;
  1328  000BEE  0100               	movlb	0	; () banked
  1329  000BF0  EE20 F00D          	lfsr	2,13
  1330  000BF4  0100               	movlb	0	; () banked
  1331  000BF6  51A5               	movf	_ic_ptr& (0+255),w,b
  1332  000BF8  26D9               	addwf	fsr2l,f,c
  1333  000BFA  0100               	movlb	0	; () banked
  1334  000BFC  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1335  000BFE  22DA               	addwfc	fsr2h,f,c
  1336  000C00  0E05               	movlw	5
  1337  000C02  6EDF               	movwf	indf2,c
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;my_i2c.c: 403: ic_ptr->error_count = 0;
  1341  000C04  0100               	movlb	0	; () banked
  1342  000C06  EE20 F00F          	lfsr	2,15
  1343  000C0A  0100               	movlb	0	; () banked
  1344  000C0C  51A5               	movf	_ic_ptr& (0+255),w,b
  1345  000C0E  26D9               	addwf	fsr2l,f,c
  1346  000C10  0100               	movlb	0	; () banked
  1347  000C12  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1348  000C14  22DA               	addwfc	fsr2h,f,c
  1349  000C16  0E00               	movlw	0
  1350  000C18  6EDF               	movwf	indf2,c
  1351                           
  1352                           ; BSR set to: 0
  1353  000C1A  0012               	return	
  1354  000C1C                     __end_of_init_i2c:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           prodh	equ	0xFF4
  1361                           prodl	equ	0xFF3
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           postdec1	equ	0xFE5
  1365                           fsr1l	equ	0xFE1
  1366                           indf2	equ	0xFDF
  1367                           postinc2	equ	0xFDE
  1368                           postdec2	equ	0xFDD
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           
  1372 ;; *************** function _i2c_master_send *****************
  1373 ;; Defined at:
  1374 ;;		line 52 in file "../src/my_i2c.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  length          1    wreg     unsigned char 
  1377 ;;  msg             2   48[BANK0 ] PTR unsigned char 
  1378 ;;		 -> main@msgSensor(2), main@msgMotor(2), 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  length          1   52[BANK0 ] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      unsigned char 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;Total ram usage:        5 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:   10
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405  00038C                     __ptext7:
  1406                           	opt stack 0
  1407  00038C                     _i2c_master_send:
  1408                           	opt stack 20
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;incstack = 0
  1412                           ;i2c_master_send@length stored from wreg
  1413  00038C  0100               	movlb	0	; () banked
  1414  00038E  6F94               	movwf	i2c_master_send@length& (0+255),b
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;my_i2c.c: 53: if(length > 10 || length <= 0) return -2;
  1418  000390  0E0B               	movlw	11
  1419  000392  0100               	movlb	0	; () banked
  1420  000394  5D94               	subwf	i2c_master_send@length& (0+255),w,b
  1421  000396  B0D8               	btfsc	status,0,c
  1422  000398  0012               	return	
  1423                           
  1424                           ; BSR set to: 0
  1425  00039A  0100               	movlb	0	; () banked
  1426  00039C  6794               	tstfsz	i2c_master_send@length& (0+255),b
  1427  00039E  D001               	goto	l2990
  1428  0003A0  0012               	return	
  1429  0003A2                     l2990:
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;my_i2c.c: 56: if(ic_ptr->status != 0x4) return -1;
  1433  0003A2  0100               	movlb	0	; () banked
  1434  0003A4  EE20 F00D          	lfsr	2,13
  1435  0003A8  0100               	movlb	0	; () banked
  1436  0003AA  51A5               	movf	_ic_ptr& (0+255),w,b
  1437  0003AC  26D9               	addwf	fsr2l,f,c
  1438  0003AE  0100               	movlb	0	; () banked
  1439  0003B0  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1440  0003B2  22DA               	addwfc	fsr2h,f,c
  1441  0003B4  50DF               	movf	indf2,w,c
  1442  0003B6  0A04               	xorlw	4
  1443  0003B8  A4D8               	btfss	status,2,c
  1444  0003BA  0012               	return	
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;my_i2c.c: 58: ic_ptr->slave_addr = msg[length] << 1;
  1448                           
  1449                           ; BSR set to: 0
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;	Return value of _i2c_master_send is never used
  1453  0003BC  0100               	movlb	0	; () banked
  1454  0003BE  EE20 F01C          	lfsr	2,28
  1455  0003C2  0100               	movlb	0	; () banked
  1456  0003C4  51A5               	movf	_ic_ptr& (0+255),w,b
  1457  0003C6  26D9               	addwf	fsr2l,f,c
  1458  0003C8  0100               	movlb	0	; () banked
  1459  0003CA  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1460  0003CC  22DA               	addwfc	fsr2h,f,c
  1461  0003CE  0100               	movlb	0	; () banked
  1462  0003D0  5194               	movf	i2c_master_send@length& (0+255),w,b
  1463  0003D2  0D01               	mullw	1
  1464  0003D4  50F3               	movf	prodl,w,c
  1465  0003D6  0100               	movlb	0	; () banked
  1466  0003D8  2590               	addwf	i2c_master_send@msg& (0+255),w,b
  1467  0003DA  6EE1               	movwf	fsr1l,c
  1468  0003DC  50F4               	movf	prodh,w,c
  1469  0003DE  0100               	movlb	0	; () banked
  1470  0003E0  2191               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  1471  0003E2  6EE2               	movwf	fsr1h,c
  1472  0003E4  50E7               	movf	indf1,w,c
  1473  0003E6  0100               	movlb	0	; () banked
  1474  0003E8  6F92               	movwf	??_i2c_master_send& (0+255),b
  1475  0003EA  0100               	movlb	0	; () banked
  1476  0003EC  90D8               	bcf	status,0,c
  1477  0003EE  3592               	rlcf	??_i2c_master_send& (0+255),w,b
  1478  0003F0  6EDF               	movwf	indf2,c
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;my_i2c.c: 60: for(ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen+
      +                          +) {
  1482  0003F2  0100               	movlb	0	; () banked
  1483  0003F4  EE20 F01A          	lfsr	2,26
  1484  0003F8  0100               	movlb	0	; () banked
  1485  0003FA  51A5               	movf	_ic_ptr& (0+255),w,b
  1486  0003FC  26D9               	addwf	fsr2l,f,c
  1487  0003FE  0100               	movlb	0	; () banked
  1488  000400  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1489  000402  22DA               	addwfc	fsr2h,f,c
  1490  000404  0E00               	movlw	0
  1491  000406  6EDF               	movwf	indf2,c
  1492  000408  D03E               	goto	l3002
  1493  00040A                     l2998:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;my_i2c.c: 61: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1497  00040A  0100               	movlb	0	; () banked
  1498  00040C  EE20 F01A          	lfsr	2,26
  1499  000410  0100               	movlb	0	; () banked
  1500  000412  51A5               	movf	_ic_ptr& (0+255),w,b
  1501  000414  26D9               	addwf	fsr2l,f,c
  1502  000416  0100               	movlb	0	; () banked
  1503  000418  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1504  00041A  22DA               	addwfc	fsr2h,f,c
  1505  00041C  50DF               	movf	indf2,w,c
  1506  00041E  0100               	movlb	0	; () banked
  1507  000420  6F92               	movwf	??_i2c_master_send& (0+255),b
  1508  000422  0100               	movlb	0	; () banked
  1509  000424  5192               	movf	??_i2c_master_send& (0+255),w,b
  1510  000426  0D01               	mullw	1
  1511  000428  50F3               	movf	prodl,w,c
  1512  00042A  0100               	movlb	0	; () banked
  1513  00042C  2590               	addwf	i2c_master_send@msg& (0+255),w,b
  1514  00042E  6ED9               	movwf	fsr2l,c
  1515  000430  50F4               	movf	prodh,w,c
  1516  000432  0100               	movlb	0	; () banked
  1517  000434  2191               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  1518  000436  6EDA               	movwf	fsr2h,c
  1519  000438  0100               	movlb	0	; () banked
  1520  00043A  EE10 F01A          	lfsr	1,26
  1521  00043E  0100               	movlb	0	; () banked
  1522  000440  51A5               	movf	_ic_ptr& (0+255),w,b
  1523  000442  26E1               	addwf	fsr1l,f,c
  1524  000444  0100               	movlb	0	; () banked
  1525  000446  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1526  000448  22E2               	addwfc	fsr1h,f,c
  1527  00044A  50E7               	movf	indf1,w,c
  1528  00044C  0100               	movlb	0	; () banked
  1529  00044E  6F93               	movwf	(??_i2c_master_send+1)& (0+255),b
  1530  000450  0100               	movlb	0	; () banked
  1531  000452  5193               	movf	(??_i2c_master_send+1)& (0+255),w,b
  1532  000454  0D01               	mullw	1
  1533  000456  0E10               	movlw	16
  1534  000458  26F3               	addwf	prodl,f,c
  1535  00045A  0E00               	movlw	0
  1536  00045C  22F4               	addwfc	prodh,f,c
  1537  00045E  50F3               	movf	prodl,w,c
  1538  000460  0100               	movlb	0	; () banked
  1539  000462  25A5               	addwf	_ic_ptr& (0+255),w,b
  1540  000464  6EE1               	movwf	fsr1l,c
  1541  000466  50F4               	movf	prodh,w,c
  1542  000468  0100               	movlb	0	; () banked
  1543  00046A  21A6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1544  00046C  6EE2               	movwf	fsr1h,c
  1545  00046E  CFDF FFE7          	movff	indf2,indf1
  1546                           
  1547                           ; BSR set to: 0
  1548  000472  0100               	movlb	0	; () banked
  1549  000474  EE20 F01A          	lfsr	2,26
  1550  000478  0100               	movlb	0	; () banked
  1551  00047A  51A5               	movf	_ic_ptr& (0+255),w,b
  1552  00047C  26D9               	addwf	fsr2l,f,c
  1553  00047E  0100               	movlb	0	; () banked
  1554  000480  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1555  000482  22DA               	addwfc	fsr2h,f,c
  1556  000484  2ADF               	incf	indf2,f,c
  1557  000486                     l3002:
  1558                           
  1559                           ; BSR set to: 0
  1560  000486  0100               	movlb	0	; () banked
  1561  000488  EE20 F01A          	lfsr	2,26
  1562  00048C  0100               	movlb	0	; () banked
  1563  00048E  51A5               	movf	_ic_ptr& (0+255),w,b
  1564  000490  26D9               	addwf	fsr2l,f,c
  1565  000492  0100               	movlb	0	; () banked
  1566  000494  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1567  000496  22DA               	addwfc	fsr2h,f,c
  1568  000498  50DF               	movf	indf2,w,c
  1569  00049A  0100               	movlb	0	; () banked
  1570  00049C  6F92               	movwf	??_i2c_master_send& (0+255),b
  1571  00049E  0100               	movlb	0	; () banked
  1572  0004A0  5194               	movf	i2c_master_send@length& (0+255),w,b
  1573  0004A2  0100               	movlb	0	; () banked
  1574  0004A4  5D92               	subwf	??_i2c_master_send& (0+255),w,b
  1575  0004A6  A0D8               	btfss	status,0,c
  1576  0004A8  D7B0               	goto	l2998
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;my_i2c.c: 62: }
  1580                           ;my_i2c.c: 64: ic_ptr->msg_trans_type = 0x0;
  1581                           
  1582                           ; BSR set to: 0
  1583  0004AA  0100               	movlb	0	; () banked
  1584  0004AC  EE20 F01D          	lfsr	2,29
  1585  0004B0  0100               	movlb	0	; () banked
  1586  0004B2  51A5               	movf	_ic_ptr& (0+255),w,b
  1587  0004B4  26D9               	addwf	fsr2l,f,c
  1588  0004B6  0100               	movlb	0	; () banked
  1589  0004B8  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1590  0004BA  22DA               	addwfc	fsr2h,f,c
  1591  0004BC  0E00               	movlw	0
  1592  0004BE  6EDF               	movwf	indf2,c
  1593                           
  1594                           ;my_i2c.c: 65: ic_ptr->status = 0x1;
  1595  0004C0  0100               	movlb	0	; () banked
  1596  0004C2  EE20 F00D          	lfsr	2,13
  1597  0004C6  0100               	movlb	0	; () banked
  1598  0004C8  51A5               	movf	_ic_ptr& (0+255),w,b
  1599  0004CA  26D9               	addwf	fsr2l,f,c
  1600  0004CC  0100               	movlb	0	; () banked
  1601  0004CE  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1602  0004D0  22DA               	addwfc	fsr2h,f,c
  1603  0004D2  0E01               	movlw	1
  1604  0004D4  6EDF               	movwf	indf2,c
  1605                           
  1606                           ;my_i2c.c: 66: ic_ptr->outbufind = 0;
  1607  0004D6  0100               	movlb	0	; () banked
  1608  0004D8  EE20 F01B          	lfsr	2,27
  1609  0004DC  0100               	movlb	0	; () banked
  1610  0004DE  51A5               	movf	_ic_ptr& (0+255),w,b
  1611  0004E0  26D9               	addwf	fsr2l,f,c
  1612  0004E2  0100               	movlb	0	; () banked
  1613  0004E4  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1614  0004E6  22DA               	addwfc	fsr2h,f,c
  1615  0004E8  0E00               	movlw	0
  1616  0004EA  6EDF               	movwf	indf2,c
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;my_i2c.c: 68: SSP1CON2bits.SEN = 1;
  1620  0004EC  80C5               	bsf	4037,0,c	;volatile
  1621  0004EE  0012               	return	
  1622  0004F0                     __end_of_i2c_master_send:
  1623                           	opt stack 0
  1624                           tblptru	equ	0xFF8
  1625                           tblptrh	equ	0xFF7
  1626                           tblptrl	equ	0xFF6
  1627                           tablat	equ	0xFF5
  1628                           prodh	equ	0xFF4
  1629                           prodl	equ	0xFF3
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           indf1	equ	0xFE7
  1633                           postdec1	equ	0xFE5
  1634                           fsr1h	equ	0xFE2
  1635                           fsr1l	equ	0xFE1
  1636                           indf2	equ	0xFDF
  1637                           postinc2	equ	0xFDE
  1638                           postdec2	equ	0xFDD
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           
  1643 ;; *************** function _i2c_master_recv *****************
  1644 ;; Defined at:
  1645 ;;		line 86 in file "../src/my_i2c.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  length          1    wreg     unsigned char 
  1648 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  length          1   49[BANK0 ] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      unsigned char 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1660 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;Total ram usage:        2 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:   10
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text8
  1675  00089E                     __ptext8:
  1676                           	opt stack 0
  1677  00089E                     _i2c_master_recv:
  1678                           	opt stack 20
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;incstack = 0
  1682                           ;i2c_master_recv@length stored from wreg
  1683  00089E  0100               	movlb	0	; () banked
  1684  0008A0  6F91               	movwf	i2c_master_recv@length& (0+255),b
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;my_i2c.c: 87: if(length <= 0) return -2;
  1688  0008A2  0100               	movlb	0	; () banked
  1689  0008A4  6791               	tstfsz	i2c_master_recv@length& (0+255),b
  1690  0008A6  D001               	goto	l3018
  1691  0008A8  0012               	return	
  1692  0008AA                     l3018:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;my_i2c.c: 88: if(ic_ptr->status != 0x4) return -1;
  1696  0008AA  0100               	movlb	0	; () banked
  1697  0008AC  EE20 F00D          	lfsr	2,13
  1698  0008B0  0100               	movlb	0	; () banked
  1699  0008B2  51A5               	movf	_ic_ptr& (0+255),w,b
  1700  0008B4  26D9               	addwf	fsr2l,f,c
  1701  0008B6  0100               	movlb	0	; () banked
  1702  0008B8  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1703  0008BA  22DA               	addwfc	fsr2h,f,c
  1704  0008BC  50DF               	movf	indf2,w,c
  1705  0008BE  0A04               	xorlw	4
  1706  0008C0  A4D8               	btfss	status,2,c
  1707  0008C2  0012               	return	
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;my_i2c.c: 90: ic_ptr->slave_addr = (slave_addr << 1) | 0x01;
  1711                           
  1712                           ; BSR set to: 0
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;	Return value of _i2c_master_recv is never used
  1716  0008C4  0100               	movlb	0	; () banked
  1717  0008C6  EE20 F01C          	lfsr	2,28
  1718  0008CA  0100               	movlb	0	; () banked
  1719  0008CC  51A5               	movf	_ic_ptr& (0+255),w,b
  1720  0008CE  26D9               	addwf	fsr2l,f,c
  1721  0008D0  0100               	movlb	0	; () banked
  1722  0008D2  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1723  0008D4  22DA               	addwfc	fsr2h,f,c
  1724  0008D6  80D8               	bsf	status,0,c
  1725  0008D8  0100               	movlb	0	; () banked
  1726  0008DA  3590               	rlcf	i2c_master_recv@slave_addr& (0+255),w,b
  1727  0008DC  6EDF               	movwf	indf2,c
  1728                           
  1729                           ;my_i2c.c: 91: ic_ptr->buflen = length;
  1730  0008DE  0100               	movlb	0	; () banked
  1731  0008E0  EE20 F00A          	lfsr	2,10
  1732  0008E4  0100               	movlb	0	; () banked
  1733  0008E6  51A5               	movf	_ic_ptr& (0+255),w,b
  1734  0008E8  26D9               	addwf	fsr2l,f,c
  1735  0008EA  0100               	movlb	0	; () banked
  1736  0008EC  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1737  0008EE  22DA               	addwfc	fsr2h,f,c
  1738  0008F0  0100               	movlb	0	; () banked
  1739  0008F2  C091  FFDF         	movff	i2c_master_recv@length,indf2
  1740                           
  1741                           ;my_i2c.c: 92: ic_ptr->bufind = 0xFF;
  1742  0008F6  0100               	movlb	0	; () banked
  1743  0008F8  EE20 F00B          	lfsr	2,11
  1744  0008FC  0100               	movlb	0	; () banked
  1745  0008FE  51A5               	movf	_ic_ptr& (0+255),w,b
  1746  000900  26D9               	addwf	fsr2l,f,c
  1747  000902  0100               	movlb	0	; () banked
  1748  000904  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1749  000906  22DA               	addwfc	fsr2h,f,c
  1750  000908  0EFF               	movlw	255
  1751  00090A  6EDF               	movwf	indf2,c
  1752                           
  1753                           ;my_i2c.c: 93: ic_ptr->msg_trans_type = 0x1;
  1754  00090C  0100               	movlb	0	; () banked
  1755  00090E  EE20 F01D          	lfsr	2,29
  1756  000912  0100               	movlb	0	; () banked
  1757  000914  51A5               	movf	_ic_ptr& (0+255),w,b
  1758  000916  26D9               	addwf	fsr2l,f,c
  1759  000918  0100               	movlb	0	; () banked
  1760  00091A  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1761  00091C  22DA               	addwfc	fsr2h,f,c
  1762  00091E  0E01               	movlw	1
  1763  000920  6EDF               	movwf	indf2,c
  1764                           
  1765                           ;my_i2c.c: 94: ic_ptr->status = 0x1;
  1766  000922  0100               	movlb	0	; () banked
  1767  000924  EE20 F00D          	lfsr	2,13
  1768  000928  0100               	movlb	0	; () banked
  1769  00092A  51A5               	movf	_ic_ptr& (0+255),w,b
  1770  00092C  26D9               	addwf	fsr2l,f,c
  1771  00092E  0100               	movlb	0	; () banked
  1772  000930  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1773  000932  22DA               	addwfc	fsr2h,f,c
  1774  000934  0E01               	movlw	1
  1775  000936  6EDF               	movwf	indf2,c
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;my_i2c.c: 95: SSP1CON2bits.SEN = 1;
  1779  000938  80C5               	bsf	4037,0,c	;volatile
  1780  00093A  0012               	return	
  1781  00093C                     __end_of_i2c_master_recv:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           prodh	equ	0xFF4
  1788                           prodl	equ	0xFF3
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           indf1	equ	0xFE7
  1792                           postdec1	equ	0xFE5
  1793                           fsr1h	equ	0xFE2
  1794                           fsr1l	equ	0xFE1
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           postdec2	equ	0xFDD
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _i2c_configure_master *****************
  1803 ;; Defined at:
  1804 ;;		line 15 in file "../src/my_i2c.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:   10
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text9
  1833  000E3C                     __ptext9:
  1834                           	opt stack 0
  1835  000E3C                     _i2c_configure_master:
  1836                           	opt stack 20
  1837                           
  1838                           ;my_i2c.c: 17: ic_ptr->status = 0x4;
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;incstack = 0
  1842  000E3C  0100               	movlb	0	; () banked
  1843  000E3E  EE20 F00D          	lfsr	2,13
  1844  000E42  0100               	movlb	0	; () banked
  1845  000E44  51A5               	movf	_ic_ptr& (0+255),w,b
  1846  000E46  26D9               	addwf	fsr2l,f,c
  1847  000E48  0100               	movlb	0	; () banked
  1848  000E4A  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  1849  000E4C  22DA               	addwfc	fsr2h,f,c
  1850  000E4E  0E04               	movlw	4
  1851  000E50  6EDF               	movwf	indf2,c
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;my_i2c.c: 18: LATBbits.LATB4 = 0;
  1855  000E52  988A               	bcf	3978,4,c	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;my_i2c.c: 19: LATBbits.LATB5 = 0;
  1859  000E54  9A8A               	bcf	3978,5,c	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;my_i2c.c: 21: TRISBbits.TRISB5 = 1;
  1863  000E56  8A93               	bsf	3987,5,c	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;my_i2c.c: 22: TRISBbits.TRISB4 = 1;
  1867  000E58  8893               	bsf	3987,4,c	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;my_i2c.c: 24: TRISBbits.TRISB0 = 0;
  1871  000E5A  9093               	bcf	3987,0,c	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;my_i2c.c: 25: LATBbits.LATB0 = 0;
  1875  000E5C  908A               	bcf	3978,0,c	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;my_i2c.c: 28: SSPCON1 = 0;
  1879  000E5E  0E00               	movlw	0
  1880  000E60  6EC6               	movwf	4038,c	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;my_i2c.c: 29: SSPSTAT = 0;
  1884  000E62  0E00               	movlw	0
  1885  000E64  6EC7               	movwf	4039,c	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;my_i2c.c: 30: SSPADD = 0;
  1889  000E66  0E00               	movlw	0
  1890  000E68  6EC8               	movwf	4040,c	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;my_i2c.c: 32: SSPCON1 |= 0b00001000;
  1894  000E6A  86C6               	bsf	4038,3,c	;volatile
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;my_i2c.c: 33: SSPSTAT |= 0b10000000;
  1898  000E6C  8EC7               	bsf	4039,7,c	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;my_i2c.c: 34: SSPADD |= 0x77;
  1902  000E6E  0E77               	movlw	119
  1903  000E70  12C8               	iorwf	4040,f,c	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;my_i2c.c: 36: SSPCON1bits.SSPEN = 1;
  1907  000E72  8AC6               	bsf	4038,5,c	;volatile
  1908                           
  1909                           ; BSR set to: 0
  1910  000E74  0012               	return	
  1911  000E76                     __end_of_i2c_configure_master:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           prodh	equ	0xFF4
  1918                           prodl	equ	0xFF3
  1919                           postinc0	equ	0xFEE
  1920                           wreg	equ	0xFE8
  1921                           indf1	equ	0xFE7
  1922                           postdec1	equ	0xFE5
  1923                           fsr1h	equ	0xFE2
  1924                           fsr1l	equ	0xFE1
  1925                           indf2	equ	0xFDF
  1926                           postinc2	equ	0xFDE
  1927                           postdec2	equ	0xFDD
  1928                           fsr2h	equ	0xFDA
  1929                           fsr2l	equ	0xFD9
  1930                           status	equ	0xFD8
  1931                           
  1932 ;; *************** function _get_buffer *****************
  1933 ;; Defined at:
  1934 ;;		line 174 in file "../src/my_i2c.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  ret_buf        10   53[BANK0 ] unsigned char [10]
  1939 ;;  i               2   63[BANK0 ] int 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2   48[BANK0 ] PTR unsigned char 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;Total ram usage:       17 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:   10
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text10
  1964  0009D0                     __ptext10:
  1965                           	opt stack 0
  1966  0009D0                     _get_buffer:
  1967                           	opt stack 20
  1968                           
  1969                           ;my_i2c.c: 175: unsigned char ret_buf[10];
  1970                           ;my_i2c.c: 176: int i;
  1971                           ;my_i2c.c: 177: for(i = 0; i < ic_ptr->buflen; i++){
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;incstack = 0
  1975  0009D0  0E00               	movlw	0
  1976  0009D2  0100               	movlb	0	; () banked
  1977  0009D4  6FA0               	movwf	(get_buffer@i+1)& (0+255),b
  1978  0009D6  0E00               	movlw	0
  1979  0009D8  0100               	movlb	0	; () banked
  1980  0009DA  6F9F               	movwf	get_buffer@i& (0+255),b
  1981  0009DC  D019               	goto	l3034
  1982  0009DE                     l3030:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;my_i2c.c: 178: ret_buf[i] = ic_ptr->buffer[i];
  1986  0009DE  0100               	movlb	0	; () banked
  1987  0009E0  519F               	movf	get_buffer@i& (0+255),w,b
  1988  0009E2  0100               	movlb	0	; () banked
  1989  0009E4  25A5               	addwf	_ic_ptr& (0+255),w,b
  1990  0009E6  6ED9               	movwf	fsr2l,c
  1991  0009E8  0100               	movlb	0	; () banked
  1992  0009EA  51A0               	movf	(get_buffer@i+1)& (0+255),w,b
  1993  0009EC  0100               	movlb	0	; () banked
  1994  0009EE  21A6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1995  0009F0  6EDA               	movwf	fsr2h,c
  1996  0009F2  0100               	movlb	0	; () banked
  1997  0009F4  0E95               	movlw	low get_buffer@ret_buf
  1998  0009F6  0100               	movlb	0	; () banked
  1999  0009F8  259F               	addwf	get_buffer@i& (0+255),w,b
  2000  0009FA  6EE1               	movwf	fsr1l,c
  2001  0009FC  0100               	movlb	0	; () banked
  2002  0009FE  0E00               	movlw	high get_buffer@ret_buf
  2003  000A00  0100               	movlb	0	; () banked
  2004  000A02  21A0               	addwfc	(get_buffer@i+1)& (0+255),w,b
  2005  000A04  6EE2               	movwf	fsr1h,c
  2006  000A06  CFDF FFE7          	movff	indf2,indf1
  2007                           
  2008                           ; BSR set to: 0
  2009  000A0A  0100               	movlb	0	; () banked
  2010  000A0C  4B9F               	infsnz	get_buffer@i& (0+255),f,b
  2011  000A0E  2BA0               	incf	(get_buffer@i+1)& (0+255),f,b
  2012  000A10                     l3034:
  2013                           
  2014                           ; BSR set to: 0
  2015  000A10  0100               	movlb	0	; () banked
  2016  000A12  EE20 F00A          	lfsr	2,10
  2017  000A16  0100               	movlb	0	; () banked
  2018  000A18  51A5               	movf	_ic_ptr& (0+255),w,b
  2019  000A1A  26D9               	addwf	fsr2l,f,c
  2020  000A1C  0100               	movlb	0	; () banked
  2021  000A1E  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  2022  000A20  22DA               	addwfc	fsr2h,f,c
  2023  000A22  50DF               	movf	indf2,w,c
  2024  000A24  0100               	movlb	0	; () banked
  2025  000A26  6F92               	movwf	??_get_buffer& (0+255),b
  2026  000A28  6B93               	clrf	(??_get_buffer+1)& (0+255),b
  2027  000A2A  0100               	movlb	0	; () banked
  2028  000A2C  51A0               	movf	(get_buffer@i+1)& (0+255),w,b
  2029  000A2E  0A80               	xorlw	128
  2030  000A30  0100               	movlb	0	; () banked
  2031  000A32  6F94               	movwf	(??_get_buffer+2)& (0+255),b
  2032  000A34  5192               	movf	??_get_buffer& (0+255),w,b
  2033  000A36  0100               	movlb	0	; () banked
  2034  000A38  5D9F               	subwf	get_buffer@i& (0+255),w,b
  2035  000A3A  0100               	movlb	0	; () banked
  2036  000A3C  5193               	movf	(??_get_buffer+1)& (0+255),w,b
  2037  000A3E  0A80               	xorlw	128
  2038  000A40  0100               	movlb	0	; () banked
  2039  000A42  5994               	subwfb	(??_get_buffer+2)& (0+255),w,b
  2040  000A44  A0D8               	btfss	status,0,c
  2041  000A46  D7CB               	goto	l3030
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;my_i2c.c: 179: }
  2045                           ;my_i2c.c: 180: return &ret_buf;
  2046                           
  2047                           ; BSR set to: 0
  2048  000A48  0100               	movlb	0	; () banked
  2049  000A4A  0E00               	movlw	high get_buffer@ret_buf
  2050  000A4C  0100               	movlb	0	; () banked
  2051  000A4E  6F91               	movwf	(?_get_buffer+1)& (0+255),b
  2052  000A50  0100               	movlb	0	; () banked
  2053  000A52  0E95               	movlw	low get_buffer@ret_buf
  2054  000A54  0100               	movlb	0	; () banked
  2055  000A56  6F90               	movwf	?_get_buffer& (0+255),b
  2056  000A58  0012               	return	
  2057  000A5A                     __end_of_get_buffer:
  2058                           	opt stack 0
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           prodh	equ	0xFF4
  2064                           prodl	equ	0xFF3
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           indf1	equ	0xFE7
  2068                           postdec1	equ	0xFE5
  2069                           fsr1h	equ	0xFE2
  2070                           fsr1l	equ	0xFE1
  2071                           indf2	equ	0xFDF
  2072                           postinc2	equ	0xFDE
  2073                           postdec2	equ	0xFDD
  2074                           fsr2h	equ	0xFDA
  2075                           fsr2l	equ	0xFD9
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _enable_interrupts *****************
  2079 ;; Defined at:
  2080 ;;		line 14 in file "../src/interrupts.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;		None               void
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:   10
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text11
  2109  001004                     __ptext11:
  2110                           	opt stack 0
  2111  001004                     _enable_interrupts:
  2112                           	opt stack 20
  2113                           
  2114                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;incstack = 0
  2118  001004  8ED0               	bsf	4048,7,c	;volatile
  2119                           
  2120                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2121  001006  8EF2               	bsf	intcon,7,c	;volatile
  2122                           
  2123                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2124  001008  8CF2               	bsf	intcon,6,c	;volatile
  2125  00100A  0012               	return	
  2126  00100C                     __end_of_enable_interrupts:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           indf1	equ	0xFE7
  2138                           postdec1	equ	0xFE5
  2139                           fsr1h	equ	0xFE2
  2140                           fsr1l	equ	0xFE1
  2141                           indf2	equ	0xFDF
  2142                           postinc2	equ	0xFDE
  2143                           postdec2	equ	0xFDD
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function _Open1USART *****************
  2149 ;; Defined at:
  2150 ;;		line 124 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1open.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  config          1    wreg     unsigned char 
  2153 ;;  spbrg           2   48[BANK0 ] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  config          1   53[BANK0 ] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:   10
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text12
  2180  000AD8                     __ptext12:
  2181                           	opt stack 0
  2182  000AD8                     _Open1USART:
  2183                           	opt stack 20
  2184                           
  2185                           ;incstack = 0
  2186                           ;Open1USART@config stored from wreg
  2187  000AD8  0100               	movlb	0	; () banked
  2188  000ADA  6F95               	movwf	Open1USART@config& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191  000ADC  0E00               	movlw	0
  2192  000ADE  6EAD               	movwf	4013,c	;volatile
  2193  000AE0  0E00               	movlw	0
  2194  000AE2  6EAC               	movwf	4012,c	;volatile
  2195                           
  2196                           ; BSR set to: 0
  2197  000AE4  0100               	movlb	0	; () banked
  2198  000AE6  B195               	btfsc	Open1USART@config& (0+255),0,b
  2199                           
  2200                           ; BSR set to: 0
  2201  000AE8  88AD               	bsf	4013,4,c	;volatile
  2202                           
  2203                           ; BSR set to: 0
  2204                           
  2205                           ; BSR set to: 0
  2206  000AEA  0100               	movlb	0	; () banked
  2207  000AEC  A395               	btfss	Open1USART@config& (0+255),1,b
  2208  000AEE  D002               	goto	l2956
  2209                           
  2210                           ; BSR set to: 0
  2211  000AF0  8CAD               	bsf	4013,6,c	;volatile
  2212  000AF2  8CAC               	bsf	4012,6,c	;volatile
  2213  000AF4                     l2956:
  2214                           
  2215                           ; BSR set to: 0
  2216  000AF4  0100               	movlb	0	; () banked
  2217  000AF6  B595               	btfsc	Open1USART@config& (0+255),2,b
  2218                           
  2219                           ; BSR set to: 0
  2220  000AF8  8EAD               	bsf	4013,7,c	;volatile
  2221                           
  2222                           ; BSR set to: 0
  2223                           
  2224                           ; BSR set to: 0
  2225  000AFA  0100               	movlb	0	; () banked
  2226  000AFC  A795               	btfss	Open1USART@config& (0+255),3,b
  2227  000AFE  D002               	goto	l438
  2228                           
  2229                           ; BSR set to: 0
  2230  000B00  88AC               	bsf	4012,4,c	;volatile
  2231  000B02  D001               	goto	l2964
  2232  000B04                     l438:
  2233                           
  2234                           ; BSR set to: 0
  2235  000B04  8AAC               	bsf	4012,5,c	;volatile
  2236  000B06                     l2964:
  2237                           
  2238                           ; BSR set to: 0
  2239  000B06  0100               	movlb	0	; () banked
  2240  000B08  B995               	btfsc	Open1USART@config& (0+255),4,b
  2241                           
  2242                           ; BSR set to: 0
  2243  000B0A  84AD               	bsf	4013,2,c	;volatile
  2244                           
  2245                           ; BSR set to: 0
  2246                           
  2247                           ; BSR set to: 0
  2248  000B0C  0100               	movlb	0	; () banked
  2249  000B0E  BB95               	btfsc	Open1USART@config& (0+255),5,b
  2250                           
  2251                           ; BSR set to: 0
  2252  000B10  86AC               	bsf	4012,3,c	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           
  2256                           ; BSR set to: 0
  2257  000B12  0100               	movlb	0	; () banked
  2258  000B14  AD95               	btfss	Open1USART@config& (0+255),6,b
  2259  000B16  D002               	goto	l442
  2260                           
  2261                           ; BSR set to: 0
  2262  000B18  8A9D               	bsf	3997,5,c	;volatile
  2263  000B1A  D001               	goto	l2976
  2264  000B1C                     l442:
  2265                           
  2266                           ; BSR set to: 0
  2267  000B1C  9A9D               	bcf	3997,5,c	;volatile
  2268  000B1E                     l2976:
  2269                           
  2270                           ; BSR set to: 0
  2271  000B1E  0100               	movlb	0	; () banked
  2272  000B20  AF95               	btfss	Open1USART@config& (0+255),7,b
  2273  000B22  D002               	goto	l444
  2274                           
  2275                           ; BSR set to: 0
  2276  000B24  889D               	bsf	3997,4,c	;volatile
  2277  000B26  D001               	goto	l445
  2278  000B28                     l444:
  2279                           
  2280                           ; BSR set to: 0
  2281  000B28  989D               	bcf	3997,4,c	;volatile
  2282  000B2A                     l445:
  2283                           
  2284                           ; BSR set to: 0
  2285  000B2A  C090  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  2286                           
  2287                           ; BSR set to: 0
  2288  000B2E  0100               	movlb	0	; () banked
  2289  000B30  C091  F092         	movff	Open1USART@spbrg+1,??_Open1USART
  2290  000B34  C092  F093         	movff	??_Open1USART,??_Open1USART+1
  2291  000B38  0100               	movlb	0	; () banked
  2292  000B3A  6B94               	clrf	(??_Open1USART+2)& (0+255),b
  2293  000B3C  0100               	movlb	0	; () banked
  2294  000B3E  5193               	movf	(??_Open1USART+1)& (0+255),w,b
  2295  000B40  6E7F               	movwf	3967,c	;volatile
  2296                           
  2297                           ; BSR set to: 0
  2298  000B42  8AAD               	bsf	4013,5,c	;volatile
  2299                           
  2300                           ; BSR set to: 0
  2301  000B44  8EAC               	bsf	4012,7,c	;volatile
  2302                           
  2303                           ; BSR set to: 0
  2304  000B46  0012               	return	
  2305  000B48                     __end_of_Open1USART:
  2306                           	opt stack 0
  2307                           tblptru	equ	0xFF8
  2308                           tblptrh	equ	0xFF7
  2309                           tblptrl	equ	0xFF6
  2310                           tablat	equ	0xFF5
  2311                           prodh	equ	0xFF4
  2312                           prodl	equ	0xFF3
  2313                           intcon	equ	0xFF2
  2314                           postinc0	equ	0xFEE
  2315                           wreg	equ	0xFE8
  2316                           indf1	equ	0xFE7
  2317                           postdec1	equ	0xFE5
  2318                           fsr1h	equ	0xFE2
  2319                           fsr1l	equ	0xFE1
  2320                           indf2	equ	0xFDF
  2321                           postinc2	equ	0xFDE
  2322                           postdec2	equ	0xFDD
  2323                           fsr2h	equ	0xFDA
  2324                           fsr2l	equ	0xFD9
  2325                           status	equ	0xFD8
  2326                           
  2327 ;; *************** function _InterruptHandlerLow *****************
  2328 ;; Defined at:
  2329 ;;		line 121 in file "../src/interrupts.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;		None               void
  2336 ;; Registers used:
  2337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2345 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;Total ram usage:       17 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    9
  2350 ;; This function calls:
  2351 ;;		_timer1_int_handler
  2352 ;;		_uart_recv_int_handler
  2353 ;; This function is called by:
  2354 ;;		Interrupt level 1
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	intcodelo
  2359  000018                     __pintcodelo:
  2360                           	opt stack 0
  2361  000018                     _InterruptHandlerLow:
  2362                           	opt stack 19
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;incstack = 0
  2366  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  2367  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  2368  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  2369  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  2370  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  2371  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  2372  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  2373  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  2374  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  2375  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  2376  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  2377  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  2378  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  2379  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  2380  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  2381  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  2382  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  2383                           
  2384                           ;interrupts.c: 123: if (PIR1bits.TMR1IF) {
  2385  00005C  A09E               	btfss	3998,0,c	;volatile
  2386  00005E  D003               	goto	i1l3078
  2387                           
  2388                           ;interrupts.c: 124: PIR1bits.TMR1IF = 0;
  2389  000060  909E               	bcf	3998,0,c	;volatile
  2390                           
  2391                           ;interrupts.c: 125: timer1_int_handler();
  2392  000062  EC83  F007         	call	_timer1_int_handler	;wreg free
  2393  000066                     i1l3078:
  2394                           
  2395                           ;interrupts.c: 126: }
  2396                           ;interrupts.c: 129: if (PIR1bits.RCIF) {
  2397  000066  AA9E               	btfss	3998,5,c	;volatile
  2398  000068  D003               	goto	i1l47
  2399                           
  2400                           ;interrupts.c: 130: PIR1bits.RCIF = 0;
  2401  00006A  9A9E               	bcf	3998,5,c	;volatile
  2402                           
  2403                           ;interrupts.c: 131: uart_recv_int_handler();
  2404  00006C  EC9E  F004         	call	_uart_recv_int_handler	;wreg free
  2405  000070                     i1l47:
  2406  000070  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2407  000074  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2408  000078  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2409  00007C  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2410  000080  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2411  000084  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2412  000088  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2413  00008C  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2414  000090  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2415  000094  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2416  000098  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2417  00009C  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2418  0000A0  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2419  0000A4  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2420  0000A8  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2421  0000AC  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  2422  0000B0  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  2423  0000B4  0010               	retfie	
  2424  0000B6                     __end_of_InterruptHandlerLow:
  2425                           	opt stack 0
  2426                           pclatu	equ	0xFFB
  2427                           pclath	equ	0xFFA
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           intcon	equ	0xFF2
  2435                           postinc0	equ	0xFEE
  2436                           fsr0h	equ	0xFEA
  2437                           fsr0l	equ	0xFE9
  2438                           wreg	equ	0xFE8
  2439                           indf1	equ	0xFE7
  2440                           postdec1	equ	0xFE5
  2441                           fsr1h	equ	0xFE2
  2442                           fsr1l	equ	0xFE1
  2443                           bsr	equ	0xFE0
  2444                           indf2	equ	0xFDF
  2445                           postinc2	equ	0xFDE
  2446                           postdec2	equ	0xFDD
  2447                           fsr2h	equ	0xFDA
  2448                           fsr2l	equ	0xFD9
  2449                           status	equ	0xFD8
  2450                           
  2451 ;; *************** function _uart_recv_int_handler *****************
  2452 ;; Defined at:
  2453 ;;		line 11 in file "../src/my_uart.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;		None
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;		None               void
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;Total ram usage:        1 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    8
  2474 ;; This function calls:
  2475 ;;		_Read1USART
  2476 ;;		_ToMainLow_sendmsg
  2477 ;; This function is called by:
  2478 ;;		_InterruptHandlerLow
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text14
  2483  00093C                     __ptext14:
  2484                           	opt stack 0
  2485  00093C                     _uart_recv_int_handler:
  2486                           	opt stack 19
  2487                           
  2488                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  2489                           
  2490                           ;incstack = 0
  2491  00093C  AA9E               	btfss	3998,5,c	;volatile
  2492  00093E  D03A               	goto	i1l2886
  2493                           
  2494                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  2495  000940  EE20 F004          	lfsr	2,4
  2496  000944  502F               	movf	_uc_ptr,w,c
  2497  000946  26D9               	addwf	fsr2l,f,c
  2498  000948  5030               	movf	_uc_ptr+1,w,c
  2499  00094A  22DA               	addwfc	fsr2h,f,c
  2500  00094C  50DF               	movf	indf2,w,c
  2501  00094E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  2502  000950  501B               	movf	??_uart_recv_int_handler,w,c
  2503  000952  0D01               	mullw	1
  2504  000954  50F3               	movf	prodl,w,c
  2505  000956  242F               	addwf	_uc_ptr,w,c
  2506  000958  6ED9               	movwf	fsr2l,c
  2507  00095A  50F4               	movf	prodh,w,c
  2508  00095C  2030               	addwfc	_uc_ptr+1,w,c
  2509  00095E  6EDA               	movwf	fsr2h,c
  2510  000960  ECBA  F007         	call	_Read1USART	;wreg free
  2511  000964  6EDF               	movwf	indf2,c
  2512                           
  2513                           ;my_uart.c: 25: uc_ptr->buflen++;
  2514  000966  EE20 F004          	lfsr	2,4
  2515  00096A  502F               	movf	_uc_ptr,w,c
  2516  00096C  26D9               	addwf	fsr2l,f,c
  2517  00096E  5030               	movf	_uc_ptr+1,w,c
  2518  000970  22DA               	addwfc	fsr2h,f,c
  2519  000972  2ADF               	incf	indf2,f,c
  2520                           
  2521                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  2522  000974  EE20 F004          	lfsr	2,4
  2523  000978  502F               	movf	_uc_ptr,w,c
  2524  00097A  26D9               	addwf	fsr2l,f,c
  2525  00097C  5030               	movf	_uc_ptr+1,w,c
  2526  00097E  22DA               	addwfc	fsr2h,f,c
  2527  000980  0E04               	movlw	4
  2528  000982  62DF               	cpfseq	indf2,c
  2529  000984  D017               	goto	i1l2886
  2530                           
  2531                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  2532  000986  0E1F               	movlw	31
  2533  000988  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2534  00098A  C030  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  2535  00098E  C02F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  2536  000992  EE20 F004          	lfsr	2,4
  2537  000996  502F               	movf	_uc_ptr,w,c
  2538  000998  26D9               	addwf	fsr2l,f,c
  2539  00099A  5030               	movf	_uc_ptr+1,w,c
  2540  00099C  22DA               	addwfc	fsr2h,f,c
  2541  00099E  50DF               	movf	indf2,w,c
  2542  0009A0  EC99  F007         	call	_ToMainLow_sendmsg
  2543                           
  2544                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  2545  0009A4  EE20 F004          	lfsr	2,4
  2546  0009A8  502F               	movf	_uc_ptr,w,c
  2547  0009AA  26D9               	addwf	fsr2l,f,c
  2548  0009AC  5030               	movf	_uc_ptr+1,w,c
  2549  0009AE  22DA               	addwfc	fsr2h,f,c
  2550  0009B0  0E00               	movlw	0
  2551  0009B2  6EDF               	movwf	indf2,c
  2552  0009B4                     i1l2886:
  2553                           
  2554                           ;my_uart.c: 30: }
  2555                           ;my_uart.c: 31: }
  2556                           ;my_uart.c: 36: if (USART1_Status.OVERRUN_ERROR == 1) {
  2557  0009B4  A632               	btfss	_USART1_Status,3,c
  2558  0009B6  0012               	return	
  2559                           
  2560                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  2561  0009B8  98AC               	bcf	4012,4,c	;volatile
  2562                           
  2563                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  2564  0009BA  88AC               	bsf	4012,4,c	;volatile
  2565                           
  2566                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  2567  0009BC  0E1E               	movlw	30
  2568  0009BE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2569  0009C0  0E00               	movlw	0
  2570  0009C2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  2571  0009C4  0E00               	movlw	0
  2572  0009C6  6E18               	movwf	ToMainLow_sendmsg@data,c
  2573  0009C8  0E00               	movlw	0
  2574  0009CA  EC99  F007         	call	_ToMainLow_sendmsg
  2575  0009CE  0012               	return	
  2576  0009D0                     __end_of_uart_recv_int_handler:
  2577                           	opt stack 0
  2578                           pclatu	equ	0xFFB
  2579                           pclath	equ	0xFFA
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           indf1	equ	0xFE7
  2592                           postdec1	equ	0xFE5
  2593                           fsr1h	equ	0xFE2
  2594                           fsr1l	equ	0xFE1
  2595                           bsr	equ	0xFE0
  2596                           indf2	equ	0xFDF
  2597                           postinc2	equ	0xFDE
  2598                           postdec2	equ	0xFDD
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function _Read1USART *****************
  2604 ;; Defined at:
  2605 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1read.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  data            1    0[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      unsigned char 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    5
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_uart_recv_int_handler
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text15
  2634  000F74                     __ptext15:
  2635                           	opt stack 0
  2636  000F74                     _Read1USART:
  2637                           	opt stack 21
  2638                           
  2639                           ;incstack = 0
  2640  000F74  0EF2               	movlw	242
  2641  000F76  1632               	andwf	_USART1_Status,f,c
  2642  000F78  ACAC               	btfss	4012,6,c	;volatile
  2643  000F7A  D003               	goto	i1l455
  2644  000F7C  9032               	bcf	_USART1_Status,0,c
  2645  000F7E  B0AC               	btfsc	4012,0,c	;volatile
  2646  000F80  8032               	bsf	_USART1_Status,0,c
  2647  000F82                     i1l455:
  2648  000F82  B4AC               	btfsc	4012,2,c	;volatile
  2649  000F84  8432               	bsf	_USART1_Status,2,c
  2650  000F86  B2AC               	btfsc	4012,1,c	;volatile
  2651  000F88  8632               	bsf	_USART1_Status,3,c
  2652  000F8A  CFAF F001          	movff	4015,Read1USART@data	;volatile
  2653  000F8E  5001               	movf	Read1USART@data,w,c
  2654  000F90  0012               	return	
  2655  000F92                     __end_of_Read1USART:
  2656                           	opt stack 0
  2657                           pclatu	equ	0xFFB
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           indf1	equ	0xFE7
  2671                           postdec1	equ	0xFE5
  2672                           fsr1h	equ	0xFE2
  2673                           fsr1l	equ	0xFE1
  2674                           bsr	equ	0xFE0
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _timer1_int_handler *****************
  2683 ;; Defined at:
  2684 ;;		line 36 in file "../src/user_interrupts.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  result          2   26[COMRAM] unsigned int 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;		None               void
  2691 ;; Registers used:
  2692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;Total ram usage:        2 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    8
  2705 ;; This function calls:
  2706 ;;		_ReadTimer1
  2707 ;;		_ToMainLow_sendmsg
  2708 ;;		_WriteTimer1
  2709 ;; This function is called by:
  2710 ;;		_InterruptHandlerLow
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text16
  2715  000F06                     __ptext16:
  2716                           	opt stack 0
  2717  000F06                     _timer1_int_handler:
  2718                           	opt stack 19
  2719                           
  2720                           ;user_interrupts.c: 37: unsigned int result;
  2721                           ;user_interrupts.c: 44: result = ReadTimer1();
  2722                           
  2723                           ;incstack = 0
  2724  000F06  ECE8  F007         	call	_ReadTimer1	;wreg free
  2725  000F0A  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  2726  000F0E  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  2727                           
  2728                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  2729  000F12  0E0B               	movlw	11
  2730  000F14  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2731  000F16  0E00               	movlw	0
  2732  000F18  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  2733  000F1A  0E00               	movlw	0
  2734  000F1C  6E18               	movwf	ToMainLow_sendmsg@data,c
  2735  000F1E  0E00               	movlw	0
  2736  000F20  EC99  F007         	call	_ToMainLow_sendmsg
  2737                           
  2738                           ;user_interrupts.c: 48: WriteTimer1(0);
  2739  000F24  0E00               	movlw	0
  2740  000F26  6E02               	movwf	WriteTimer1@timer1+1,c
  2741  000F28  0E00               	movlw	0
  2742  000F2A  6E01               	movwf	WriteTimer1@timer1,c
  2743  000F2C  ECDF  F007         	call	_WriteTimer1	;wreg free
  2744  000F30  0012               	return	
  2745  000F32                     __end_of_timer1_int_handler:
  2746                           	opt stack 0
  2747                           pclatu	equ	0xFFB
  2748                           pclath	equ	0xFFA
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           postinc0	equ	0xFEE
  2757                           fsr0h	equ	0xFEA
  2758                           fsr0l	equ	0xFE9
  2759                           wreg	equ	0xFE8
  2760                           indf1	equ	0xFE7
  2761                           postdec1	equ	0xFE5
  2762                           fsr1h	equ	0xFE2
  2763                           fsr1l	equ	0xFE1
  2764                           bsr	equ	0xFE0
  2765                           indf2	equ	0xFDF
  2766                           postinc2	equ	0xFDE
  2767                           postdec2	equ	0xFDD
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _WriteTimer1 *****************
  2773 ;; Defined at:
  2774 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  timer1          2    0[COMRAM] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  timer           2    2[COMRAM] struct Timers
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;Total ram usage:        4 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    5
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_timer1_int_handler
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text17
  2803  000FBE                     __ptext17:
  2804                           	opt stack 0
  2805  000FBE                     _WriteTimer1:
  2806                           	opt stack 21
  2807                           
  2808                           ;incstack = 0
  2809  000FBE  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2810  000FC2  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2811  000FC6  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2812  000FCA  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2813  000FCE  0012               	return	
  2814  000FD0                     __end_of_WriteTimer1:
  2815                           	opt stack 0
  2816                           pclatu	equ	0xFFB
  2817                           pclath	equ	0xFFA
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           fsr0h	equ	0xFEA
  2827                           fsr0l	equ	0xFE9
  2828                           wreg	equ	0xFE8
  2829                           indf1	equ	0xFE7
  2830                           postdec1	equ	0xFE5
  2831                           fsr1h	equ	0xFE2
  2832                           fsr1l	equ	0xFE1
  2833                           bsr	equ	0xFE0
  2834                           indf2	equ	0xFDF
  2835                           postinc2	equ	0xFDE
  2836                           postdec2	equ	0xFDD
  2837                           fsr2h	equ	0xFDA
  2838                           fsr2l	equ	0xFD9
  2839                           status	equ	0xFD8
  2840                           
  2841 ;; *************** function _ToMainLow_sendmsg *****************
  2842 ;; Defined at:
  2843 ;;		line 103 in file "../src/messages.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  length          1    wreg     unsigned char 
  2846 ;;  msgtype         1   22[COMRAM] unsigned char 
  2847 ;;  data            2   23[COMRAM] PTR void 
  2848 ;;		 -> NULL(0), main@uc(5), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  length          1   25[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      char 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    7
  2867 ;; This function calls:
  2868 ;;		_send_msg
  2869 ;; This function is called by:
  2870 ;;		_uart_recv_int_handler
  2871 ;;		_timer1_int_handler
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text18
  2876  000F32                     __ptext18:
  2877                           	opt stack 0
  2878  000F32                     _ToMainLow_sendmsg:
  2879                           	opt stack 19
  2880                           
  2881                           ;incstack = 0
  2882                           ;ToMainLow_sendmsg@length stored from wreg
  2883  000F32  6E1A               	movwf	ToMainLow_sendmsg@length,c
  2884                           
  2885                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2886                           ;	Return value of _ToMainLow_sendmsg is never used
  2887  000F34  0101               	movlb	1	; () banked
  2888  000F36  0E01               	movlw	high _ToMainLow_MQ
  2889  000F38  6E0C               	movwf	send_msg@qptr+1,c
  2890  000F3A  0101               	movlb	1	; () banked
  2891  000F3C  0EA2               	movlw	low _ToMainLow_MQ
  2892  000F3E  6E0B               	movwf	send_msg@qptr,c
  2893  000F40  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  2894  000F44  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2895  000F48  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2896  000F4C  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  2897  000F50  ECFA  F003         	call	_send_msg	;wreg free
  2898  000F54  0012               	return	
  2899  000F56                     __end_of_ToMainLow_sendmsg:
  2900                           	opt stack 0
  2901                           pclatu	equ	0xFFB
  2902                           pclath	equ	0xFFA
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           intcon	equ	0xFF2
  2910                           postinc0	equ	0xFEE
  2911                           fsr0h	equ	0xFEA
  2912                           fsr0l	equ	0xFE9
  2913                           wreg	equ	0xFE8
  2914                           indf1	equ	0xFE7
  2915                           postdec1	equ	0xFE5
  2916                           fsr1h	equ	0xFE2
  2917                           fsr1l	equ	0xFE1
  2918                           bsr	equ	0xFE0
  2919                           indf2	equ	0xFDF
  2920                           postinc2	equ	0xFDE
  2921                           postdec2	equ	0xFDD
  2922                           fsr2h	equ	0xFDA
  2923                           fsr2l	equ	0xFD9
  2924                           status	equ	0xFD8
  2925                           
  2926 ;; *************** function _send_msg *****************
  2927 ;; Defined at:
  2928 ;;		line 24 in file "../src/messages.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  2931 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2932 ;;  length          1   12[COMRAM] unsigned char 
  2933 ;;  msgtype         1   13[COMRAM] unsigned char 
  2934 ;;  data            2   14[COMRAM] PTR void 
  2935 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  2936 ;;		 -> main@uc(5), 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  2939 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2940 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2941 ;;  tlength         2   17[COMRAM] unsigned int 
  2942 ;;  slot            1   19[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      char 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;Total ram usage:       12 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    6
  2959 ;; This function calls:
  2960 ;;		_memcpy
  2961 ;; This function is called by:
  2962 ;;		_ToMainLow_sendmsg
  2963 ;;		_FromMainLow_sendmsg
  2964 ;;		_FromMainHigh_sendmsg
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text19
  2969  0007F4                     __ptext19:
  2970                           	opt stack 0
  2971  0007F4                     _send_msg:
  2972                           	opt stack 19
  2973                           
  2974                           ;messages.c: 25: unsigned char slot;
  2975                           ;messages.c: 27: msg *qmsg;
  2976                           ;messages.c: 28: size_t tlength = length;
  2977                           
  2978                           ;incstack = 0
  2979  0007F4  C00D  F012         	movff	send_msg@length,send_msg@tlength
  2980  0007F8  6A13               	clrf	send_msg@tlength+1,c
  2981                           
  2982                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2983  0007FA  EE20 F034          	lfsr	2,52
  2984  0007FE  500B               	movf	send_msg@qptr,w,c
  2985  000800  26D9               	addwf	fsr2l,f,c
  2986  000802  500C               	movf	send_msg@qptr+1,w,c
  2987  000804  22DA               	addwfc	fsr2h,f,c
  2988  000806  50DF               	movf	indf2,w,c
  2989  000808  6E14               	movwf	send_msg@slot,c
  2990                           
  2991                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2992  00080A  5014               	movf	send_msg@slot,w,c
  2993  00080C  0D0D               	mullw	13
  2994  00080E  50F3               	movf	prodl,w,c
  2995  000810  240B               	addwf	send_msg@qptr,w,c
  2996  000812  6E15               	movwf	send_msg@qmsg,c
  2997  000814  50F4               	movf	prodh,w,c
  2998  000816  200C               	addwfc	send_msg@qptr+1,w,c
  2999  000818  6E16               	movwf	send_msg@qmsg+1,c
  3000                           
  3001                           ;messages.c: 41: if (qmsg->full != 0) {
  3002  00081A  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  3003  00081E  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3004  000822  50DF               	movf	indf2,w,c
  3005  000824  B4D8               	btfsc	status,2,c
  3006  000826  D002               	goto	i1l2626
  3007                           
  3008                           ;messages.c: 42: return (-1);
  3009  000828  0EFF               	movlw	255
  3010  00082A  0012               	return	
  3011  00082C                     i1l2626:
  3012                           
  3013                           ;messages.c: 43: }
  3014                           ;messages.c: 46: qmsg->length = length;
  3015  00082C  EE20 F001          	lfsr	2,1
  3016  000830  5015               	movf	send_msg@qmsg,w,c
  3017  000832  26D9               	addwf	fsr2l,f,c
  3018  000834  5016               	movf	send_msg@qmsg+1,w,c
  3019  000836  22DA               	addwfc	fsr2h,f,c
  3020  000838  C00D  FFDF         	movff	send_msg@length,indf2
  3021                           
  3022                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3023  00083C  EE20 F002          	lfsr	2,2
  3024  000840  5015               	movf	send_msg@qmsg,w,c
  3025  000842  26D9               	addwf	fsr2l,f,c
  3026  000844  5016               	movf	send_msg@qmsg+1,w,c
  3027  000846  22DA               	addwfc	fsr2h,f,c
  3028  000848  C00E  FFDF         	movff	send_msg@msgtype,indf2
  3029                           
  3030                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3031  00084C  0E03               	movlw	3
  3032  00084E  2415               	addwf	send_msg@qmsg,w,c
  3033  000850  6E01               	movwf	memcpy@d1,c
  3034  000852  0E00               	movlw	0
  3035  000854  2016               	addwfc	send_msg@qmsg+1,w,c
  3036  000856  6E02               	movwf	memcpy@d1+1,c
  3037  000858  C010  F004         	movff	send_msg@data+1,memcpy@s1+1
  3038  00085C  C00F  F003         	movff	send_msg@data,memcpy@s1
  3039  000860  C012  F005         	movff	send_msg@tlength,memcpy@n
  3040  000864  C013  F006         	movff	send_msg@tlength+1,memcpy@n+1
  3041  000868  ECC2  F006         	call	_memcpy	;wreg free
  3042                           
  3043                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3044  00086C  EE20 F034          	lfsr	2,52
  3045  000870  500B               	movf	send_msg@qptr,w,c
  3046  000872  26D9               	addwf	fsr2l,f,c
  3047  000874  500C               	movf	send_msg@qptr+1,w,c
  3048  000876  22DA               	addwfc	fsr2h,f,c
  3049  000878  EE10 F034          	lfsr	1,52
  3050  00087C  500B               	movf	send_msg@qptr,w,c
  3051  00087E  26E1               	addwf	fsr1l,f,c
  3052  000880  500C               	movf	send_msg@qptr+1,w,c
  3053  000882  22E2               	addwfc	fsr1h,f,c
  3054  000884  50E7               	movf	indf1,w,c
  3055  000886  6E11               	movwf	??_send_msg& (0+255),c
  3056  000888  2811               	incf	??_send_msg,w,c
  3057  00088A  0B03               	andlw	3
  3058  00088C  6EDF               	movwf	indf2,c
  3059                           
  3060                           ;messages.c: 59: qmsg->full = 1;
  3061  00088E  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  3062  000892  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3063  000896  0E01               	movlw	1
  3064  000898  6EDF               	movwf	indf2,c
  3065                           
  3066                           ;messages.c: 60: return (1);
  3067  00089A  0E01               	movlw	1
  3068  00089C  0012               	return	
  3069  00089E                     __end_of_send_msg:
  3070                           	opt stack 0
  3071                           pclatu	equ	0xFFB
  3072                           pclath	equ	0xFFA
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           fsr0h	equ	0xFEA
  3082                           fsr0l	equ	0xFE9
  3083                           wreg	equ	0xFE8
  3084                           indf1	equ	0xFE7
  3085                           postdec1	equ	0xFE5
  3086                           fsr1h	equ	0xFE2
  3087                           fsr1l	equ	0xFE1
  3088                           bsr	equ	0xFE0
  3089                           indf2	equ	0xFDF
  3090                           postinc2	equ	0xFDE
  3091                           postdec2	equ	0xFDD
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8
  3095                           
  3096 ;; *************** function _memcpy *****************
  3097 ;; Defined at:
  3098 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  d1              2    0[COMRAM] PTR void 
  3101 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3102 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3103 ;;		 -> ToMainLow_MQ(54), 
  3104 ;;  s1              2    2[COMRAM] PTR const void 
  3105 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3106 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3107 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3108 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  3109 ;;		 -> main@uc(5), 
  3110 ;;  n               2    4[COMRAM] unsigned int 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3113 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3114 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3115 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3116 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  3117 ;;		 -> main@uc(5), 
  3118 ;;  d               2    6[COMRAM] PTR unsigned char 
  3119 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3120 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3121 ;;		 -> ToMainLow_MQ(54), 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    0[COMRAM] PTR void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;Total ram usage:       10 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    5
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_send_msg
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text20
  3146  000D84                     __ptext20:
  3147                           	opt stack 0
  3148  000D84                     _memcpy:
  3149                           	opt stack 19
  3150                           
  3151                           ;incstack = 0
  3152  000D84  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3153  000D88  C003  F009         	movff	memcpy@s1,memcpy@s
  3154  000D8C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3155  000D90  C001  F007         	movff	memcpy@d1,memcpy@d
  3156  000D94  D00E               	goto	i1l2598
  3157  000D96                     i1l2592:
  3158  000D96  C009  FFD9         	movff	memcpy@s,fsr2l
  3159  000D9A  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3160  000D9E  C007  FFE1         	movff	memcpy@d,fsr1l
  3161  000DA2  C008  FFE2         	movff	memcpy@d+1,fsr1h
  3162  000DA6  CFDF FFE7          	movff	indf2,indf1
  3163  000DAA  4A09               	infsnz	memcpy@s,f,c
  3164  000DAC  2A0A               	incf	memcpy@s+1,f,c
  3165  000DAE  4A07               	infsnz	memcpy@d,f,c
  3166  000DB0  2A08               	incf	memcpy@d+1,f,c
  3167  000DB2                     i1l2598:
  3168  000DB2  0605               	decf	memcpy@n,f,c
  3169  000DB4  A0D8               	btfss	status,0,c
  3170  000DB6  0606               	decf	memcpy@n+1,f,c
  3171  000DB8  2805               	incf	memcpy@n& (0+255),w,c
  3172  000DBA  B4D8               	btfsc	status,2,c
  3173  000DBC  2806               	incf	(memcpy@n+1)& (0+255),w,c
  3174  000DBE  B4D8               	btfsc	status,2,c
  3175                           
  3176                           ;	Return value of _memcpy is never used
  3177  000DC0  0012               	return	
  3178  000DC2  D7E9               	goto	i1l2592
  3179  000DC4                     __end_of_memcpy:
  3180                           	opt stack 0
  3181                           pclatu	equ	0xFFB
  3182                           pclath	equ	0xFFA
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           prodh	equ	0xFF4
  3188                           prodl	equ	0xFF3
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           fsr0h	equ	0xFEA
  3192                           fsr0l	equ	0xFE9
  3193                           wreg	equ	0xFE8
  3194                           indf1	equ	0xFE7
  3195                           postdec1	equ	0xFE5
  3196                           fsr1h	equ	0xFE2
  3197                           fsr1l	equ	0xFE1
  3198                           bsr	equ	0xFE0
  3199                           indf2	equ	0xFDF
  3200                           postinc2	equ	0xFDE
  3201                           postdec2	equ	0xFDD
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _ReadTimer1 *****************
  3207 ;; Defined at:
  3208 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  timer           2    2[COMRAM] struct Timers
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    0[COMRAM] unsigned int 
  3215 ;; Registers used:
  3216 ;;		None
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;Total ram usage:        4 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    5
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_timer1_int_handler
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text21
  3237  000FD0                     __ptext21:
  3238                           	opt stack 0
  3239  000FD0                     _ReadTimer1:
  3240                           	opt stack 21
  3241                           
  3242                           ;incstack = 0
  3243  000FD0  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  3244  000FD4  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  3245  000FD8  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  3246  000FDC  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  3247  000FE0  0012               	return	
  3248  000FE2                     __end_of_ReadTimer1:
  3249                           	opt stack 0
  3250                           pclatu	equ	0xFFB
  3251                           pclath	equ	0xFFA
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           fsr0h	equ	0xFEA
  3261                           fsr0l	equ	0xFE9
  3262                           wreg	equ	0xFE8
  3263                           indf1	equ	0xFE7
  3264                           postdec1	equ	0xFE5
  3265                           fsr1h	equ	0xFE2
  3266                           fsr1l	equ	0xFE1
  3267                           bsr	equ	0xFE0
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _InterruptHandlerHigh *****************
  3276 ;; Defined at:
  3277 ;;		line 83 in file "../src/interrupts.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;Total ram usage:       14 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    4
  3298 ;; This function calls:
  3299 ;;		_SleepIfOkay
  3300 ;;		_i2c_master_int_handler
  3301 ;;		_timer0_int_handler
  3302 ;; This function is called by:
  3303 ;;		Interrupt level 2
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	intcode
  3308  000008                     __pintcode:
  3309                           	opt stack 0
  3310  000008                     _InterruptHandlerHigh:
  3311                           	opt stack 19
  3312                           
  3313                           ;incstack = 0
  3314  000008  CFFA F082          	movff	pclath,??_InterruptHandlerHigh
  3315  00000C  CFFB F083          	movff	pclatu,??_InterruptHandlerHigh+1
  3316  000010  CFE9 F084          	movff	fsr0l,??_InterruptHandlerHigh+2
  3317  000014  EF2D  F005         	goto	int_func
  3318                           pclatu	equ	0xFFB
  3319                           pclath	equ	0xFFA
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           indf1	equ	0xFE7
  3332                           postdec1	equ	0xFE5
  3333                           fsr1h	equ	0xFE2
  3334                           fsr1l	equ	0xFE1
  3335                           bsr	equ	0xFE0
  3336                           indf2	equ	0xFDF
  3337                           postinc2	equ	0xFDE
  3338                           postdec2	equ	0xFDD
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343                           	psect	intcode_body
  3344  000A5A                     __pintcode_body:
  3345                           	opt stack 19
  3346  000A5A                     int_func:
  3347                           	opt stack 19
  3348  000A5A  CFEA F085          	movff	fsr0h,??_InterruptHandlerHigh+3
  3349  000A5E  CFE1 F086          	movff	fsr1l,??_InterruptHandlerHigh+4
  3350  000A62  CFE2 F087          	movff	fsr1h,??_InterruptHandlerHigh+5
  3351  000A66  CFD9 F088          	movff	fsr2l,??_InterruptHandlerHigh+6
  3352  000A6A  CFDA F089          	movff	fsr2h,??_InterruptHandlerHigh+7
  3353  000A6E  CFF3 F08A          	movff	prodl,??_InterruptHandlerHigh+8
  3354  000A72  CFF4 F08B          	movff	prodh,??_InterruptHandlerHigh+9
  3355  000A76  CFF6 F08C          	movff	tblptrl,??_InterruptHandlerHigh+10
  3356  000A7A  CFF7 F08D          	movff	tblptrh,??_InterruptHandlerHigh+11
  3357  000A7E  CFF8 F08E          	movff	tblptru,??_InterruptHandlerHigh+12
  3358  000A82  CFF5 F08F          	movff	tablat,??_InterruptHandlerHigh+13
  3359                           
  3360                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  3361  000A86  A69E               	btfss	3998,3,c	;volatile
  3362  000A88  D003               	goto	i2l3064
  3363                           
  3364                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  3365  000A8A  969E               	bcf	3998,3,c	;volatile
  3366                           
  3367                           ;interrupts.c: 92: i2c_master_int_handler();
  3368  000A8C  EC5D  F000         	call	_i2c_master_int_handler	;wreg free
  3369  000A90                     i2l3064:
  3370                           
  3371                           ;interrupts.c: 93: }
  3372                           ;interrupts.c: 95: if (INTCONbits.TMR0IF) {
  3373  000A90  A4F2               	btfss	intcon,2,c	;volatile
  3374  000A92  D003               	goto	i2l3070
  3375                           
  3376                           ;interrupts.c: 96: INTCONbits.TMR0IF = 0;
  3377  000A94  94F2               	bcf	intcon,2,c	;volatile
  3378                           
  3379                           ;interrupts.c: 98: timer0_int_handler();
  3380  000A96  ECA4  F005         	call	_timer0_int_handler	;wreg free
  3381  000A9A                     i2l3070:
  3382                           
  3383                           ;interrupts.c: 99: }
  3384                           ;interrupts.c: 108: SleepIfOkay();
  3385  000A9A  EC40  F006         	call	_SleepIfOkay	;wreg free
  3386  000A9E  C08F  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  3387  000AA2  C08E  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  3388  000AA6  C08D  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  3389  000AAA  C08C  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  3390  000AAE  C08B  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  3391  000AB2  C08A  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  3392  000AB6  C089  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  3393  000ABA  C088  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  3394  000ABE  C087  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  3395  000AC2  C086  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  3396  000AC6  C085  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  3397  000ACA  C084  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  3398  000ACE  C083  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  3399  000AD2  C082  FFFA         	movff	??_InterruptHandlerHigh,pclath
  3400  000AD6  0011               	retfie		f
  3401  000AD8                     __end_of_InterruptHandlerHigh:
  3402                           	opt stack 0
  3403                           pclatu	equ	0xFFB
  3404                           pclath	equ	0xFFA
  3405                           tblptru	equ	0xFF8
  3406                           tblptrh	equ	0xFF7
  3407                           tblptrl	equ	0xFF6
  3408                           tablat	equ	0xFF5
  3409                           prodh	equ	0xFF4
  3410                           prodl	equ	0xFF3
  3411                           intcon	equ	0xFF2
  3412                           postinc0	equ	0xFEE
  3413                           fsr0h	equ	0xFEA
  3414                           fsr0l	equ	0xFE9
  3415                           wreg	equ	0xFE8
  3416                           indf1	equ	0xFE7
  3417                           postdec1	equ	0xFE5
  3418                           fsr1h	equ	0xFE2
  3419                           fsr1l	equ	0xFE1
  3420                           bsr	equ	0xFE0
  3421                           indf2	equ	0xFDF
  3422                           postinc2	equ	0xFDE
  3423                           postdec2	equ	0xFDD
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _timer0_int_handler *****************
  3429 ;; Defined at:
  3430 ;;		line 16 in file "../src/user_interrupts.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  val             2   32[BANK0 ] unsigned int 
  3435 ;;  msgtype         2   30[BANK0 ] int 
  3436 ;;  length          2   28[BANK0 ] int 
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3447 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3449 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3450 ;;Total ram usage:        6 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    3
  3453 ;; This function calls:
  3454 ;;		_FromMainHigh_recvmsg
  3455 ;;		_ToMainHigh_sendmsg
  3456 ;;		_WriteTimer0
  3457 ;; This function is called by:
  3458 ;;		_InterruptHandlerHigh
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text23
  3463  000B48                     __ptext23:
  3464                           	opt stack 0
  3465  000B48                     _timer0_int_handler:
  3466                           	opt stack 19
  3467                           
  3468                           ;user_interrupts.c: 17: unsigned int val;
  3469                           ;user_interrupts.c: 18: int length, msgtype;
  3470                           ;user_interrupts.c: 25: WriteTimer0(0);
  3471                           
  3472                           ;incstack = 0
  3473  000B48  0E00               	movlw	0
  3474  000B4A  0100               	movlb	0	; () banked
  3475  000B4C  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  3476  000B4E  0E00               	movlw	0
  3477  000B50  0100               	movlb	0	; () banked
  3478  000B52  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  3479  000B54  ECF1  F007         	call	_WriteTimer0	;wreg free
  3480                           
  3481                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  3482  000B58  0100               	movlb	0	; () banked
  3483  000B5A  0E00               	movlw	high timer0_int_handler@msgtype
  3484  000B5C  0100               	movlb	0	; () banked
  3485  000B5E  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  3486  000B60  0100               	movlb	0	; () banked
  3487  000B62  0E7E               	movlw	low timer0_int_handler@msgtype
  3488  000B64  0100               	movlb	0	; () banked
  3489  000B66  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  3490  000B68  0100               	movlb	0	; () banked
  3491  000B6A  0E00               	movlw	high timer0_int_handler@val
  3492  000B6C  0100               	movlb	0	; () banked
  3493  000B6E  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  3494  000B70  0100               	movlb	0	; () banked
  3495  000B72  0E80               	movlw	low timer0_int_handler@val
  3496  000B74  0100               	movlb	0	; () banked
  3497  000B76  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  3498  000B78  0E02               	movlw	2
  3499  000B7A  EC3B  F007         	call	_FromMainHigh_recvmsg
  3500  000B7E  0100               	movlb	0	; () banked
  3501  000B80  6F7C               	movwf	timer0_int_handler@length& (0+255),b
  3502  000B82  0100               	movlb	0	; () banked
  3503  000B84  6B7D               	clrf	(timer0_int_handler@length+1)& (0+255),b
  3504  000B86  0100               	movlb	0	; () banked
  3505  000B88  BF7C               	btfsc	timer0_int_handler@length& (0+255),7,b
  3506  000B8A  077D               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  3510  000B8C  0100               	movlb	0	; () banked
  3511  000B8E  517C               	movf	timer0_int_handler@length& (0+255),w,b
  3512  000B90  0A02               	xorlw	2
  3513  000B92  117D               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  3514  000B94  A4D8               	btfss	status,2,c
  3515  000B96  0012               	return	
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  3519  000B98  0E0A               	movlw	10
  3520  000B9A  0100               	movlb	0	; () banked
  3521  000B9C  6F75               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3522  000B9E  0100               	movlb	0	; () banked
  3523  000BA0  0E00               	movlw	high timer0_int_handler@val
  3524  000BA2  0100               	movlb	0	; () banked
  3525  000BA4  6F77               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3526  000BA6  0100               	movlb	0	; () banked
  3527  000BA8  0E80               	movlw	low timer0_int_handler@val
  3528  000BAA  0100               	movlb	0	; () banked
  3529  000BAC  6F76               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3530  000BAE  0E02               	movlw	2
  3531  000BB0  EC55  F007         	call	_ToMainHigh_sendmsg
  3532  000BB4  0012               	return	
  3533  000BB6                     __end_of_timer0_int_handler:
  3534                           	opt stack 0
  3535                           pclatu	equ	0xFFB
  3536                           pclath	equ	0xFFA
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           fsr0h	equ	0xFEA
  3546                           fsr0l	equ	0xFE9
  3547                           wreg	equ	0xFE8
  3548                           indf1	equ	0xFE7
  3549                           postdec1	equ	0xFE5
  3550                           fsr1h	equ	0xFE2
  3551                           fsr1l	equ	0xFE1
  3552                           bsr	equ	0xFE0
  3553                           indf2	equ	0xFDF
  3554                           postinc2	equ	0xFDE
  3555                           postdec2	equ	0xFDD
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _WriteTimer0 *****************
  3561 ;; Defined at:
  3562 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  timer0          2    0[BANK0 ] unsigned int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  timer           2    2[BANK0 ] struct Timers
  3567 ;; Return value:  Size  Location     Type
  3568 ;;		None               void
  3569 ;; Registers used:
  3570 ;;		None
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;Total ram usage:        4 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_timer0_int_handler
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text24
  3590  000FE2                     __ptext24:
  3591                           	opt stack 0
  3592  000FE2                     _WriteTimer0:
  3593                           	opt stack 21
  3594                           
  3595                           ;incstack = 0
  3596  000FE2  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3597  000FE6  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3598  000FEA  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3599  000FEE  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3600  000FF2  0012               	return	
  3601  000FF4                     __end_of_WriteTimer0:
  3602                           	opt stack 0
  3603                           pclatu	equ	0xFFB
  3604                           pclath	equ	0xFFA
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           postinc0	equ	0xFEE
  3613                           fsr0h	equ	0xFEA
  3614                           fsr0l	equ	0xFE9
  3615                           wreg	equ	0xFE8
  3616                           indf1	equ	0xFE7
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           bsr	equ	0xFE0
  3621                           indf2	equ	0xFDF
  3622                           postinc2	equ	0xFDE
  3623                           postdec2	equ	0xFDD
  3624                           fsr2h	equ	0xFDA
  3625                           fsr2l	equ	0xFD9
  3626                           status	equ	0xFD8
  3627                           
  3628 ;; *************** function _ToMainHigh_sendmsg *****************
  3629 ;; Defined at:
  3630 ;;		line 126 in file "../src/messages.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  length          1    wreg     unsigned char 
  3633 ;;  msgtype         1   21[BANK0 ] unsigned char 
  3634 ;;  data            2   22[BANK0 ] PTR void 
  3635 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  length          1   24[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      char 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3647 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;Total ram usage:        4 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		i2_send_msg
  3656 ;; This function is called by:
  3657 ;;		_timer0_int_handler
  3658 ;;		_i2c_int_handler
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text25
  3663  000EAA                     __ptext25:
  3664                           	opt stack 0
  3665  000EAA                     _ToMainHigh_sendmsg:
  3666                           	opt stack 19
  3667                           
  3668                           ;incstack = 0
  3669                           ;ToMainHigh_sendmsg@length stored from wreg
  3670  000EAA  0100               	movlb	0	; () banked
  3671  000EAC  6F78               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3675                           ;	Return value of _ToMainHigh_sendmsg is never used
  3676  000EAE  0101               	movlb	1	; () banked
  3677  000EB0  0E01               	movlw	high _ToMainHigh_MQ
  3678  000EB2  0100               	movlb	0	; () banked
  3679  000EB4  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  3680  000EB6  0101               	movlb	1	; () banked
  3681  000EB8  0E6C               	movlw	low _ToMainHigh_MQ
  3682  000EBA  0100               	movlb	0	; () banked
  3683  000EBC  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  3684  000EBE  C078  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  3685  000EC2  C075  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  3686  000EC6  0100               	movlb	0	; () banked
  3687  000EC8  C077  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  3688  000ECC  0100               	movlb	0	; () banked
  3689  000ECE  C076  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  3690  000ED2  EC86  F003         	call	i2_send_msg	;wreg free
  3691  000ED6  0012               	return	
  3692  000ED8                     __end_of_ToMainHigh_sendmsg:
  3693                           	opt stack 0
  3694                           pclatu	equ	0xFFB
  3695                           pclath	equ	0xFFA
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           postinc0	equ	0xFEE
  3704                           fsr0h	equ	0xFEA
  3705                           fsr0l	equ	0xFE9
  3706                           wreg	equ	0xFE8
  3707                           indf1	equ	0xFE7
  3708                           postdec1	equ	0xFE5
  3709                           fsr1h	equ	0xFE2
  3710                           fsr1l	equ	0xFE1
  3711                           bsr	equ	0xFE0
  3712                           indf2	equ	0xFDF
  3713                           postinc2	equ	0xFDE
  3714                           postdec2	equ	0xFDD
  3715                           fsr2h	equ	0xFDA
  3716                           fsr2l	equ	0xFD9
  3717                           status	equ	0xFD8
  3718                           
  3719 ;; *************** function i2_send_msg *****************
  3720 ;; Defined at:
  3721 ;;		line 24 in file "../src/messages.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  3724 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3725 ;;  length          1   12[BANK0 ] unsigned char 
  3726 ;;  msgtype         1   13[BANK0 ] unsigned char 
  3727 ;;  data            2   14[BANK0 ] PTR void 
  3728 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  3729 ;;		 -> main@uc(5), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  send_msg        2   19[BANK0 ] PTR struct __msg
  3732 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3733 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3734 ;;  send_msg        2   16[BANK0 ] unsigned int 
  3735 ;;  send_msg        1   18[BANK0 ] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      char 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3745 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3748 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;Total ram usage:       12 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    1
  3752 ;; This function calls:
  3753 ;;		i2_memcpy
  3754 ;; This function is called by:
  3755 ;;		_ToMainHigh_sendmsg
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text26
  3760  00070C                     __ptext26:
  3761                           	opt stack 0
  3762  00070C                     i2_send_msg:
  3763                           	opt stack 19
  3764                           
  3765                           ;messages.c: 25: unsigned char slot;
  3766                           ;messages.c: 27: msg *qmsg;
  3767                           ;messages.c: 28: size_t tlength = length;
  3768                           
  3769                           ;incstack = 0
  3770  00070C  0100               	movlb	0	; () banked
  3771  00070E  C06C  F070         	movff	i2send_msg@length,i2send_msg@tlength
  3772  000712  0100               	movlb	0	; () banked
  3773  000714  6B71               	clrf	(i2send_msg@tlength+1)& (0+255),b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3777  000716  0100               	movlb	0	; () banked
  3778  000718  EE20 F034          	lfsr	2,52
  3779  00071C  0100               	movlb	0	; () banked
  3780  00071E  516A               	movf	i2send_msg@qptr& (0+255),w,b
  3781  000720  26D9               	addwf	fsr2l,f,c
  3782  000722  0100               	movlb	0	; () banked
  3783  000724  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3784  000726  22DA               	addwfc	fsr2h,f,c
  3785  000728  50DF               	movf	indf2,w,c
  3786  00072A  0100               	movlb	0	; () banked
  3787  00072C  6F72               	movwf	i2send_msg@slot& (0+255),b
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3791  00072E  0100               	movlb	0	; () banked
  3792  000730  5172               	movf	i2send_msg@slot& (0+255),w,b
  3793  000732  0D0D               	mullw	13
  3794  000734  50F3               	movf	prodl,w,c
  3795  000736  0100               	movlb	0	; () banked
  3796  000738  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  3797  00073A  0100               	movlb	0	; () banked
  3798  00073C  6F73               	movwf	i2send_msg@qmsg& (0+255),b
  3799  00073E  50F4               	movf	prodh,w,c
  3800  000740  0100               	movlb	0	; () banked
  3801  000742  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  3802  000744  0100               	movlb	0	; () banked
  3803  000746  6F74               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;messages.c: 41: if (qmsg->full != 0) {
  3807  000748  C073  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3808  00074C  C074  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3809  000750  50DF               	movf	indf2,w,c
  3810  000752  B4D8               	btfsc	status,2,c
  3811  000754  D002               	goto	i2l2682
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;messages.c: 42: return (-1);
  3815  000756  0EFF               	movlw	255
  3816  000758  0012               	return	
  3817  00075A                     i2l2682:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;messages.c: 43: }
  3821                           ;messages.c: 46: qmsg->length = length;
  3822  00075A  0100               	movlb	0	; () banked
  3823  00075C  EE20 F001          	lfsr	2,1
  3824  000760  0100               	movlb	0	; () banked
  3825  000762  5173               	movf	i2send_msg@qmsg& (0+255),w,b
  3826  000764  26D9               	addwf	fsr2l,f,c
  3827  000766  0100               	movlb	0	; () banked
  3828  000768  5174               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3829  00076A  22DA               	addwfc	fsr2h,f,c
  3830  00076C  0100               	movlb	0	; () banked
  3831  00076E  C06C  FFDF         	movff	i2send_msg@length,indf2
  3832                           
  3833                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3834  000772  0100               	movlb	0	; () banked
  3835  000774  EE20 F002          	lfsr	2,2
  3836  000778  0100               	movlb	0	; () banked
  3837  00077A  5173               	movf	i2send_msg@qmsg& (0+255),w,b
  3838  00077C  26D9               	addwf	fsr2l,f,c
  3839  00077E  0100               	movlb	0	; () banked
  3840  000780  5174               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3841  000782  22DA               	addwfc	fsr2h,f,c
  3842  000784  0100               	movlb	0	; () banked
  3843  000786  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3847  00078A  0E03               	movlw	3
  3848  00078C  0100               	movlb	0	; () banked
  3849  00078E  2573               	addwf	i2send_msg@qmsg& (0+255),w,b
  3850  000790  0100               	movlb	0	; () banked
  3851  000792  6F60               	movwf	i2memcpy@d1& (0+255),b
  3852  000794  0E00               	movlw	0
  3853  000796  0100               	movlb	0	; () banked
  3854  000798  2174               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  3855  00079A  0100               	movlb	0	; () banked
  3856  00079C  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  3857  00079E  0100               	movlb	0	; () banked
  3858  0007A0  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  3859  0007A4  0100               	movlb	0	; () banked
  3860  0007A6  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  3861  0007AA  C070  F064         	movff	i2send_msg@tlength,i2memcpy@n
  3862  0007AE  C071  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  3863  0007B2  EC9A  F006         	call	i2_memcpy	;wreg free
  3864                           
  3865                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3866  0007B6  0100               	movlb	0	; () banked
  3867  0007B8  EE20 F034          	lfsr	2,52
  3868  0007BC  0100               	movlb	0	; () banked
  3869  0007BE  516A               	movf	i2send_msg@qptr& (0+255),w,b
  3870  0007C0  26D9               	addwf	fsr2l,f,c
  3871  0007C2  0100               	movlb	0	; () banked
  3872  0007C4  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3873  0007C6  22DA               	addwfc	fsr2h,f,c
  3874  0007C8  0100               	movlb	0	; () banked
  3875  0007CA  EE10 F034          	lfsr	1,52
  3876  0007CE  0100               	movlb	0	; () banked
  3877  0007D0  516A               	movf	i2send_msg@qptr& (0+255),w,b
  3878  0007D2  26E1               	addwf	fsr1l,f,c
  3879  0007D4  0100               	movlb	0	; () banked
  3880  0007D6  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3881  0007D8  22E2               	addwfc	fsr1h,f,c
  3882  0007DA  50E7               	movf	indf1,w,c
  3883  0007DC  6E2E               	movwf	??i2_send_msg& (0+255),c
  3884  0007DE  282E               	incf	??i2_send_msg,w,c
  3885  0007E0  0B03               	andlw	3
  3886  0007E2  6EDF               	movwf	indf2,c
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;messages.c: 59: qmsg->full = 1;
  3890  0007E4  C073  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3891  0007E8  C074  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3892  0007EC  0E01               	movlw	1
  3893  0007EE  6EDF               	movwf	indf2,c
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;messages.c: 60: return (1);
  3897  0007F0  0E01               	movlw	1
  3898  0007F2  0012               	return	
  3899  0007F4                     __end_ofi2_send_msg:
  3900                           	opt stack 0
  3901                           pclatu	equ	0xFFB
  3902                           pclath	equ	0xFFA
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           postinc0	equ	0xFEE
  3911                           fsr0h	equ	0xFEA
  3912                           fsr0l	equ	0xFE9
  3913                           wreg	equ	0xFE8
  3914                           indf1	equ	0xFE7
  3915                           postdec1	equ	0xFE5
  3916                           fsr1h	equ	0xFE2
  3917                           fsr1l	equ	0xFE1
  3918                           bsr	equ	0xFE0
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _FromMainHigh_recvmsg *****************
  3927 ;; Defined at:
  3928 ;;		line 183 in file "../src/messages.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  maxlength       1    wreg     unsigned char 
  3931 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  3932 ;;		 -> timer0_int_handler@msgtype(2), 
  3933 ;;  data            2   26[BANK0 ] PTR void 
  3934 ;;		 -> timer0_int_handler@val(2), 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  maxlength       1   45[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      char 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;Total ram usage:        5 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    2
  3953 ;; This function calls:
  3954 ;;		_recv_msg
  3955 ;; This function is called by:
  3956 ;;		_timer0_int_handler
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text27
  3961  000E76                     __ptext27:
  3962                           	opt stack 0
  3963  000E76                     _FromMainHigh_recvmsg:
  3964                           	opt stack 19
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;incstack = 0
  3968                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  3969  000E76  6E2E               	movwf	FromMainHigh_recvmsg@maxlength,c
  3970                           
  3971                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  3972  000E78  0101               	movlb	1	; () banked
  3973  000E7A  0E01               	movlw	high _FromMainHigh_MQ
  3974  000E7C  0100               	movlb	0	; () banked
  3975  000E7E  6F6B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3976  000E80  0101               	movlb	1	; () banked
  3977  000E82  0E00               	movlw	low _FromMainHigh_MQ
  3978  000E84  0100               	movlb	0	; () banked
  3979  000E86  6F6A               	movwf	recv_msg@qptr& (0+255),b
  3980  000E88  C02E  F06C         	movff	FromMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3981  000E8C  0100               	movlb	0	; () banked
  3982  000E8E  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3983  000E92  0100               	movlb	0	; () banked
  3984  000E94  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3985  000E98  0100               	movlb	0	; () banked
  3986  000E9A  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,recv_msg@data+1
  3987  000E9E  0100               	movlb	0	; () banked
  3988  000EA0  C07A  F06F         	movff	FromMainHigh_recvmsg@data,recv_msg@data
  3989  000EA4  EC78  F002         	call	_recv_msg	;wreg free
  3990  000EA8  0012               	return	
  3991  000EAA                     __end_of_FromMainHigh_recvmsg:
  3992                           	opt stack 0
  3993                           pclatu	equ	0xFFB
  3994                           pclath	equ	0xFFA
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           prodh	equ	0xFF4
  4000                           prodl	equ	0xFF3
  4001                           intcon	equ	0xFF2
  4002                           postinc0	equ	0xFEE
  4003                           fsr0h	equ	0xFEA
  4004                           fsr0l	equ	0xFE9
  4005                           wreg	equ	0xFE8
  4006                           indf1	equ	0xFE7
  4007                           postdec1	equ	0xFE5
  4008                           fsr1h	equ	0xFE2
  4009                           fsr1l	equ	0xFE1
  4010                           bsr	equ	0xFE0
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function _recv_msg *****************
  4019 ;; Defined at:
  4020 ;;		line 63 in file "../src/messages.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  4023 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4024 ;;  maxlength       1   12[BANK0 ] unsigned char 
  4025 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  4026 ;;		 -> timer0_int_handler@msgtype(2), 
  4027 ;;  data            2   15[BANK0 ] PTR void 
  4028 ;;		 -> timer0_int_handler@val(2), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  qmsg            2   22[BANK0 ] PTR struct __msg
  4031 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4032 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4033 ;;  tlength         2   20[BANK0 ] unsigned int 
  4034 ;;  slot            1   19[BANK0 ] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      char 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4044 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;Total ram usage:       14 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:    1
  4051 ;; This function calls:
  4052 ;;		i2_memcpy
  4053 ;; This function is called by:
  4054 ;;		_FromMainHigh_recvmsg
  4055 ;;		_ToMainLow_recvmsg
  4056 ;;		_ToMainHigh_recvmsg
  4057 ;;		_FromMainLow_recvmsg
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text28
  4062  0004F0                     __ptext28:
  4063                           	opt stack 0
  4064  0004F0                     _recv_msg:
  4065                           	opt stack 19
  4066                           
  4067                           ;messages.c: 64: unsigned char slot;
  4068                           ;messages.c: 68: msg *qmsg;
  4069                           ;messages.c: 69: size_t tlength;
  4070                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4071                           
  4072                           ;incstack = 0
  4073  0004F0  0100               	movlb	0	; () banked
  4074  0004F2  EE20 F035          	lfsr	2,53
  4075  0004F6  0100               	movlb	0	; () banked
  4076  0004F8  516A               	movf	recv_msg@qptr& (0+255),w,b
  4077  0004FA  26D9               	addwf	fsr2l,f,c
  4078  0004FC  0100               	movlb	0	; () banked
  4079  0004FE  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4080  000500  22DA               	addwfc	fsr2h,f,c
  4081  000502  50DF               	movf	indf2,w,c
  4082  000504  0100               	movlb	0	; () banked
  4083  000506  6F73               	movwf	recv_msg@slot& (0+255),b
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4087  000508  0100               	movlb	0	; () banked
  4088  00050A  5173               	movf	recv_msg@slot& (0+255),w,b
  4089  00050C  0D0D               	mullw	13
  4090  00050E  50F3               	movf	prodl,w,c
  4091  000510  0100               	movlb	0	; () banked
  4092  000512  256A               	addwf	recv_msg@qptr& (0+255),w,b
  4093  000514  0100               	movlb	0	; () banked
  4094  000516  6F76               	movwf	recv_msg@qmsg& (0+255),b
  4095  000518  50F4               	movf	prodh,w,c
  4096  00051A  0100               	movlb	0	; () banked
  4097  00051C  216B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4098  00051E  0100               	movlb	0	; () banked
  4099  000520  6F77               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;messages.c: 74: if (qmsg->full == 1) {
  4103  000522  0E01               	movlw	1
  4104  000524  C076  FFD9         	movff	recv_msg@qmsg,fsr2l
  4105  000528  C077  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4106  00052C  62DF               	cpfseq	indf2,c
  4107  00052E  D06D               	goto	i2l2666
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4111  000530  0100               	movlb	0	; () banked
  4112  000532  EE20 F001          	lfsr	2,1
  4113  000536  0100               	movlb	0	; () banked
  4114  000538  5176               	movf	recv_msg@qmsg& (0+255),w,b
  4115  00053A  26D9               	addwf	fsr2l,f,c
  4116  00053C  0100               	movlb	0	; () banked
  4117  00053E  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4118  000540  22DA               	addwfc	fsr2h,f,c
  4119  000542  50DF               	movf	indf2,w,c
  4120  000544  0100               	movlb	0	; () banked
  4121  000546  5D6C               	subwf	recv_msg@maxlength& (0+255),w,b
  4122  000548  B0D8               	btfsc	status,0,c
  4123  00054A  D002               	goto	i2l2650
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;messages.c: 77: return (-3);
  4127  00054C  0EFD               	movlw	253
  4128  00054E  0012               	return	
  4129  000550                     i2l2650:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;messages.c: 78: }
  4133                           ;messages.c: 80: tlength = qmsg->length;
  4134  000550  0100               	movlb	0	; () banked
  4135  000552  EE20 F001          	lfsr	2,1
  4136  000556  0100               	movlb	0	; () banked
  4137  000558  5176               	movf	recv_msg@qmsg& (0+255),w,b
  4138  00055A  26D9               	addwf	fsr2l,f,c
  4139  00055C  0100               	movlb	0	; () banked
  4140  00055E  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4141  000560  22DA               	addwfc	fsr2h,f,c
  4142  000562  50DF               	movf	indf2,w,c
  4143  000564  0100               	movlb	0	; () banked
  4144  000566  6F71               	movwf	??_recv_msg& (0+255),b
  4145  000568  0100               	movlb	0	; () banked
  4146  00056A  5171               	movf	??_recv_msg& (0+255),w,b
  4147  00056C  0100               	movlb	0	; () banked
  4148  00056E  6F74               	movwf	recv_msg@tlength& (0+255),b
  4149  000570  0100               	movlb	0	; () banked
  4150  000572  6B75               	clrf	(recv_msg@tlength+1)& (0+255),b
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4154  000574  0100               	movlb	0	; () banked
  4155  000576  C070  F061         	movff	recv_msg@data+1,i2memcpy@d1+1
  4156  00057A  0100               	movlb	0	; () banked
  4157  00057C  C06F  F060         	movff	recv_msg@data,i2memcpy@d1
  4158  000580  0E03               	movlw	3
  4159  000582  0100               	movlb	0	; () banked
  4160  000584  2576               	addwf	recv_msg@qmsg& (0+255),w,b
  4161  000586  0100               	movlb	0	; () banked
  4162  000588  6F71               	movwf	??_recv_msg& (0+255),b
  4163  00058A  0E00               	movlw	0
  4164  00058C  0100               	movlb	0	; () banked
  4165  00058E  2177               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4166  000590  0100               	movlb	0	; () banked
  4167  000592  6F72               	movwf	(??_recv_msg+1)& (0+255),b
  4168  000594  C071  F062         	movff	??_recv_msg,i2memcpy@s1
  4169  000598  C072  F063         	movff	??_recv_msg+1,i2memcpy@s1+1
  4170  00059C  C074  F064         	movff	recv_msg@tlength,i2memcpy@n
  4171  0005A0  C075  F065         	movff	recv_msg@tlength+1,i2memcpy@n+1
  4172  0005A4  EC9A  F006         	call	i2_memcpy	;wreg free
  4173                           
  4174                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4175  0005A8  0100               	movlb	0	; () banked
  4176  0005AA  EE20 F035          	lfsr	2,53
  4177  0005AE  0100               	movlb	0	; () banked
  4178  0005B0  516A               	movf	recv_msg@qptr& (0+255),w,b
  4179  0005B2  26D9               	addwf	fsr2l,f,c
  4180  0005B4  0100               	movlb	0	; () banked
  4181  0005B6  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4182  0005B8  22DA               	addwfc	fsr2h,f,c
  4183  0005BA  0100               	movlb	0	; () banked
  4184  0005BC  EE10 F035          	lfsr	1,53
  4185  0005C0  0100               	movlb	0	; () banked
  4186  0005C2  516A               	movf	recv_msg@qptr& (0+255),w,b
  4187  0005C4  26E1               	addwf	fsr1l,f,c
  4188  0005C6  0100               	movlb	0	; () banked
  4189  0005C8  516B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4190  0005CA  22E2               	addwfc	fsr1h,f,c
  4191  0005CC  50E7               	movf	indf1,w,c
  4192  0005CE  0100               	movlb	0	; () banked
  4193  0005D0  6F71               	movwf	??_recv_msg& (0+255),b
  4194  0005D2  0100               	movlb	0	; () banked
  4195  0005D4  2971               	incf	??_recv_msg& (0+255),w,b
  4196  0005D6  0B03               	andlw	3
  4197  0005D8  6EDF               	movwf	indf2,c
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4201  0005DA  0100               	movlb	0	; () banked
  4202  0005DC  EE20 F002          	lfsr	2,2
  4203  0005E0  0100               	movlb	0	; () banked
  4204  0005E2  5176               	movf	recv_msg@qmsg& (0+255),w,b
  4205  0005E4  26D9               	addwf	fsr2l,f,c
  4206  0005E6  0100               	movlb	0	; () banked
  4207  0005E8  5177               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4208  0005EA  22DA               	addwfc	fsr2h,f,c
  4209  0005EC  C06D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4210  0005F0  C06E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4211  0005F4  CFDF FFE7          	movff	indf2,indf1
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;messages.c: 91: qmsg->full = 0;
  4215  0005F8  C076  FFD9         	movff	recv_msg@qmsg,fsr2l
  4216  0005FC  C077  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4217  000600  0E00               	movlw	0
  4218  000602  6EDF               	movwf	indf2,c
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;messages.c: 92: return (tlength);
  4222  000604  0100               	movlb	0	; () banked
  4223  000606  5174               	movf	recv_msg@tlength& (0+255),w,b
  4224  000608  0012               	return	
  4225  00060A                     i2l2666:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;messages.c: 94: return (-4);
  4229  00060A  0EFC               	movlw	252
  4230  00060C  0012               	return	
  4231  00060E                     __end_of_recv_msg:
  4232                           	opt stack 0
  4233                           pclatu	equ	0xFFB
  4234                           pclath	equ	0xFFA
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           intcon	equ	0xFF2
  4242                           postinc0	equ	0xFEE
  4243                           fsr0h	equ	0xFEA
  4244                           fsr0l	equ	0xFE9
  4245                           wreg	equ	0xFE8
  4246                           indf1	equ	0xFE7
  4247                           postdec1	equ	0xFE5
  4248                           fsr1h	equ	0xFE2
  4249                           fsr1l	equ	0xFE1
  4250                           bsr	equ	0xFE0
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function i2_memcpy *****************
  4259 ;; Defined at:
  4260 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  d1              2    0[BANK0 ] PTR void 
  4263 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4264 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4265 ;;		 -> ToMainLow_MQ(54), 
  4266 ;;  s1              2    2[BANK0 ] PTR const void 
  4267 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4268 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4269 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4270 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  4271 ;;		 -> main@uc(5), 
  4272 ;;  n               2    4[BANK0 ] unsigned int 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  4275 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4276 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4277 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4278 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  4279 ;;		 -> main@uc(5), 
  4280 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  4281 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4282 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4283 ;;		 -> ToMainLow_MQ(54), 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2    0[BANK0 ] PTR void 
  4286 ;; Registers used:
  4287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4294 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;Total ram usage:       10 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_recv_msg
  4303 ;;		i2_send_msg
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text29
  4308  000D34                     __ptext29:
  4309                           	opt stack 0
  4310  000D34                     i2_memcpy:
  4311                           	opt stack 19
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;incstack = 0
  4315  000D34  0100               	movlb	0	; () banked
  4316  000D36  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  4317  000D3A  0100               	movlb	0	; () banked
  4318  000D3C  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  4319  000D40  0100               	movlb	0	; () banked
  4320  000D42  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  4321  000D46  0100               	movlb	0	; () banked
  4322  000D48  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  4323  000D4C  D010               	goto	i2l2608
  4324  000D4E                     i2l2602:
  4325                           
  4326                           ; BSR set to: 0
  4327  000D4E  C068  FFD9         	movff	i2memcpy@s,fsr2l
  4328  000D52  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  4329  000D56  C066  FFE1         	movff	i2memcpy@d,fsr1l
  4330  000D5A  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  4331  000D5E  CFDF FFE7          	movff	indf2,indf1
  4332                           
  4333                           ; BSR set to: 0
  4334  000D62  0100               	movlb	0	; () banked
  4335  000D64  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  4336  000D66  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  4337                           
  4338                           ; BSR set to: 0
  4339  000D68  0100               	movlb	0	; () banked
  4340  000D6A  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  4341  000D6C  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  4342  000D6E                     i2l2608:
  4343                           
  4344                           ; BSR set to: 0
  4345  000D6E  0100               	movlb	0	; () banked
  4346  000D70  0764               	decf	i2memcpy@n& (0+255),f,b
  4347  000D72  A0D8               	btfss	status,0,c
  4348  000D74  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  4349  000D76  0100               	movlb	0	; () banked
  4350  000D78  2964               	incf	i2memcpy@n& (0+255),w,b
  4351  000D7A  B4D8               	btfsc	status,2,c
  4352  000D7C  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  4353  000D7E  B4D8               	btfsc	status,2,c
  4354                           
  4355                           ; BSR set to: 0
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;	Return value of i2_memcpy is never used
  4359  000D80  0012               	return	
  4360  000D82  D7E5               	goto	i2l2602
  4361  000D84                     __end_ofi2_memcpy:
  4362                           	opt stack 0
  4363                           pclatu	equ	0xFFB
  4364                           pclath	equ	0xFFA
  4365                           tblptru	equ	0xFF8
  4366                           tblptrh	equ	0xFF7
  4367                           tblptrl	equ	0xFF6
  4368                           tablat	equ	0xFF5
  4369                           prodh	equ	0xFF4
  4370                           prodl	equ	0xFF3
  4371                           intcon	equ	0xFF2
  4372                           postinc0	equ	0xFEE
  4373                           fsr0h	equ	0xFEA
  4374                           fsr0l	equ	0xFE9
  4375                           wreg	equ	0xFE8
  4376                           indf1	equ	0xFE7
  4377                           postdec1	equ	0xFE5
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           bsr	equ	0xFE0
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _i2c_master_int_handler *****************
  4389 ;; Defined at:
  4390 ;;		line 99 in file "../src/my_i2c.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;		None               void
  4397 ;; Registers used:
  4398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;Total ram usage:        1 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_InterruptHandlerHigh
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text30
  4418  0000BA                     __ptext30:
  4419                           	opt stack 0
  4420  0000BA                     _i2c_master_int_handler:
  4421                           	opt stack 22
  4422                           
  4423                           ;my_i2c.c: 100: switch(ic_ptr->status) {
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;incstack = 0
  4427  0000BA  D14E               	goto	i2l2836
  4428  0000BC                     i2l231:
  4429  0000BC  B0C5               	btfsc	4037,0,c	;volatile
  4430  0000BE  D7FE               	goto	i2l231
  4431                           
  4432                           ;my_i2c.c: 105: if(ic_ptr->msg_trans_type == 0x0) {
  4433  0000C0  0100               	movlb	0	; () banked
  4434  0000C2  EE20 F01D          	lfsr	2,29
  4435  0000C6  0100               	movlb	0	; () banked
  4436  0000C8  51A5               	movf	_ic_ptr& (0+255),w,b
  4437  0000CA  26D9               	addwf	fsr2l,f,c
  4438  0000CC  0100               	movlb	0	; () banked
  4439  0000CE  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4440  0000D0  22DA               	addwfc	fsr2h,f,c
  4441  0000D2  50DF               	movf	indf2,w,c
  4442  0000D4  A4D8               	btfss	status,2,c
  4443  0000D6  D00B               	goto	i2l2784
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;my_i2c.c: 106: ic_ptr->status = 0x3;
  4447  0000D8  0100               	movlb	0	; () banked
  4448  0000DA  EE20 F00D          	lfsr	2,13
  4449  0000DE  0100               	movlb	0	; () banked
  4450  0000E0  51A5               	movf	_ic_ptr& (0+255),w,b
  4451  0000E2  26D9               	addwf	fsr2l,f,c
  4452  0000E4  0100               	movlb	0	; () banked
  4453  0000E6  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4454  0000E8  22DA               	addwfc	fsr2h,f,c
  4455  0000EA  0E03               	movlw	3
  4456  0000EC  D016               	goto	L1
  4457  0000EE                     i2l2784:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;my_i2c.c: 108: else if(ic_ptr->msg_trans_type == 0x1) {
  4461  0000EE  0100               	movlb	0	; () banked
  4462  0000F0  EE20 F01D          	lfsr	2,29
  4463  0000F4  0100               	movlb	0	; () banked
  4464  0000F6  51A5               	movf	_ic_ptr& (0+255),w,b
  4465  0000F8  26D9               	addwf	fsr2l,f,c
  4466  0000FA  0100               	movlb	0	; () banked
  4467  0000FC  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4468  0000FE  22DA               	addwfc	fsr2h,f,c
  4469  000100  0E01               	movlw	1
  4470  000102  62DF               	cpfseq	indf2,c
  4471  000104  D00B               	goto	i2l235
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;my_i2c.c: 109: ic_ptr->status = 0x7;
  4475  000106  0100               	movlb	0	; () banked
  4476  000108  EE20 F00D          	lfsr	2,13
  4477  00010C  0100               	movlb	0	; () banked
  4478  00010E  51A5               	movf	_ic_ptr& (0+255),w,b
  4479  000110  26D9               	addwf	fsr2l,f,c
  4480  000112  0100               	movlb	0	; () banked
  4481  000114  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4482  000116  22DA               	addwfc	fsr2h,f,c
  4483  000118  0E07               	movlw	7
  4484  00011A                     L1:
  4485  00011A  6EDF               	movwf	indf2,c
  4486  00011C                     i2l235:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;my_i2c.c: 110: }
  4490                           ;my_i2c.c: 112: SSP1BUF = ic_ptr->slave_addr;
  4491  00011C  0100               	movlb	0	; () banked
  4492  00011E  EE20 F01C          	lfsr	2,28
  4493  000122  0100               	movlb	0	; () banked
  4494  000124  51A5               	movf	_ic_ptr& (0+255),w,b
  4495  000126  26D9               	addwf	fsr2l,f,c
  4496  000128  0100               	movlb	0	; () banked
  4497  00012A  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4498  00012C  22DA               	addwfc	fsr2h,f,c
  4499  00012E  50DF               	movf	indf2,w,c
  4500  000130  6EC9               	movwf	4041,c	;volatile
  4501                           
  4502                           ;my_i2c.c: 113: break;
  4503  000132  0012               	return	
  4504  000134                     i2l2788:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;my_i2c.c: 117: ic_ptr->status = 0x4;
  4508  000134  0100               	movlb	0	; () banked
  4509  000136  EE20 F00D          	lfsr	2,13
  4510  00013A  0100               	movlb	0	; () banked
  4511  00013C  51A5               	movf	_ic_ptr& (0+255),w,b
  4512  00013E  26D9               	addwf	fsr2l,f,c
  4513  000140  0100               	movlb	0	; () banked
  4514  000142  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4515  000144  22DA               	addwfc	fsr2h,f,c
  4516  000146  0E04               	movlw	4
  4517  000148  6EDF               	movwf	indf2,c
  4518                           
  4519                           ;my_i2c.c: 118: break;
  4520  00014A  0012               	return	
  4521  00014C                     i2l240:
  4522  00014C  BCC5               	btfsc	4037,6,c	;volatile
  4523  00014E  D7FE               	goto	i2l240
  4524                           
  4525                           ;my_i2c.c: 122: if(ic_ptr->outbufind < ic_ptr->outbuflen) {
  4526  000150  0100               	movlb	0	; () banked
  4527  000152  EE20 F01B          	lfsr	2,27
  4528  000156  0100               	movlb	0	; () banked
  4529  000158  51A5               	movf	_ic_ptr& (0+255),w,b
  4530  00015A  26D9               	addwf	fsr2l,f,c
  4531  00015C  0100               	movlb	0	; () banked
  4532  00015E  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4533  000160  22DA               	addwfc	fsr2h,f,c
  4534  000162  50DF               	movf	indf2,w,c
  4535  000164  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4536  000166  0100               	movlb	0	; () banked
  4537  000168  EE20 F01A          	lfsr	2,26
  4538  00016C  0100               	movlb	0	; () banked
  4539  00016E  51A5               	movf	_ic_ptr& (0+255),w,b
  4540  000170  26D9               	addwf	fsr2l,f,c
  4541  000172  0100               	movlb	0	; () banked
  4542  000174  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4543  000176  22DA               	addwfc	fsr2h,f,c
  4544  000178  50DF               	movf	indf2,w,c
  4545  00017A  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4546  00017C  B0D8               	btfsc	status,0,c
  4547  00017E  D026               	goto	i2l2796
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;my_i2c.c: 123: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4551  000180  0100               	movlb	0	; () banked
  4552  000182  EE20 F01B          	lfsr	2,27
  4553  000186  0100               	movlb	0	; () banked
  4554  000188  51A5               	movf	_ic_ptr& (0+255),w,b
  4555  00018A  26D9               	addwf	fsr2l,f,c
  4556  00018C  0100               	movlb	0	; () banked
  4557  00018E  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4558  000190  22DA               	addwfc	fsr2h,f,c
  4559  000192  50DF               	movf	indf2,w,c
  4560  000194  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4561  000196  502E               	movf	??_i2c_master_int_handler,w,c
  4562  000198  0D01               	mullw	1
  4563  00019A  0E10               	movlw	16
  4564  00019C  26F3               	addwf	prodl,f,c
  4565  00019E  0E00               	movlw	0
  4566  0001A0  22F4               	addwfc	prodh,f,c
  4567  0001A2  50F3               	movf	prodl,w,c
  4568  0001A4  0100               	movlb	0	; () banked
  4569  0001A6  25A5               	addwf	_ic_ptr& (0+255),w,b
  4570  0001A8  6ED9               	movwf	fsr2l,c
  4571  0001AA  50F4               	movf	prodh,w,c
  4572  0001AC  0100               	movlb	0	; () banked
  4573  0001AE  21A6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4574  0001B0  6EDA               	movwf	fsr2h,c
  4575  0001B2  50DF               	movf	indf2,w,c
  4576  0001B4  6EC9               	movwf	4041,c	;volatile
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;my_i2c.c: 124: ic_ptr->outbufind++;
  4580  0001B6  0100               	movlb	0	; () banked
  4581  0001B8  EE20 F01B          	lfsr	2,27
  4582  0001BC  0100               	movlb	0	; () banked
  4583  0001BE  51A5               	movf	_ic_ptr& (0+255),w,b
  4584  0001C0  26D9               	addwf	fsr2l,f,c
  4585  0001C2  0100               	movlb	0	; () banked
  4586  0001C4  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4587  0001C6  22DA               	addwfc	fsr2h,f,c
  4588  0001C8  2ADF               	incf	indf2,f,c
  4589                           
  4590                           ;my_i2c.c: 125: }
  4591  0001CA  0012               	return	
  4592  0001CC                     i2l2796:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;my_i2c.c: 126: else if(ic_ptr->outbufind == ic_ptr->outbuflen) {
  4596  0001CC  0100               	movlb	0	; () banked
  4597  0001CE  EE20 F01B          	lfsr	2,27
  4598  0001D2  0100               	movlb	0	; () banked
  4599  0001D4  51A5               	movf	_ic_ptr& (0+255),w,b
  4600  0001D6  26D9               	addwf	fsr2l,f,c
  4601  0001D8  0100               	movlb	0	; () banked
  4602  0001DA  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4603  0001DC  22DA               	addwfc	fsr2h,f,c
  4604  0001DE  0100               	movlb	0	; () banked
  4605  0001E0  EE10 F01A          	lfsr	1,26
  4606  0001E4  0100               	movlb	0	; () banked
  4607  0001E6  51A5               	movf	_ic_ptr& (0+255),w,b
  4608  0001E8  26E1               	addwf	fsr1l,f,c
  4609  0001EA  0100               	movlb	0	; () banked
  4610  0001EC  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4611  0001EE  22E2               	addwfc	fsr1h,f,c
  4612  0001F0  50E7               	movf	indf1,w,c
  4613  0001F2  62DF               	cpfseq	indf2,c
  4614  0001F4  0012               	return	
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;my_i2c.c: 127: ic_ptr->status = 0x2;
  4618  0001F6  0100               	movlb	0	; () banked
  4619  0001F8  EE20 F00D          	lfsr	2,13
  4620  0001FC  0100               	movlb	0	; () banked
  4621  0001FE  51A5               	movf	_ic_ptr& (0+255),w,b
  4622  000200  26D9               	addwf	fsr2l,f,c
  4623  000202  0100               	movlb	0	; () banked
  4624  000204  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4625  000206  22DA               	addwfc	fsr2h,f,c
  4626  000208  0E02               	movlw	2
  4627  00020A  6EDF               	movwf	indf2,c
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;my_i2c.c: 128: SSP1CON2bits.PEN = 1;
  4631  00020C  84C5               	bsf	4037,2,c	;volatile
  4632  00020E  0012               	return	
  4633  000210                     i2l2802:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;my_i2c.c: 133: ic_ptr->status = 0x7;
  4637  000210  0100               	movlb	0	; () banked
  4638  000212  EE20 F00D          	lfsr	2,13
  4639  000216  0100               	movlb	0	; () banked
  4640  000218  51A5               	movf	_ic_ptr& (0+255),w,b
  4641  00021A  26D9               	addwf	fsr2l,f,c
  4642  00021C  0100               	movlb	0	; () banked
  4643  00021E  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4644  000220  22DA               	addwfc	fsr2h,f,c
  4645  000222  0E07               	movlw	7
  4646  000224  6EDF               	movwf	indf2,c
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;my_i2c.c: 134: SSP1CON2bits.RCEN = 1;
  4650  000226  86C5               	bsf	4037,3,c	;volatile
  4651                           
  4652                           ;my_i2c.c: 135: break;
  4653  000228  0012               	return	
  4654  00022A                     i2l2806:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;my_i2c.c: 138: if(ic_ptr->bufind != 0xFF && ic_ptr->bufind < ic_ptr->buflen) {
  4658  00022A  0100               	movlb	0	; () banked
  4659  00022C  EE20 F00B          	lfsr	2,11
  4660  000230  0100               	movlb	0	; () banked
  4661  000232  51A5               	movf	_ic_ptr& (0+255),w,b
  4662  000234  26D9               	addwf	fsr2l,f,c
  4663  000236  0100               	movlb	0	; () banked
  4664  000238  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4665  00023A  22DA               	addwfc	fsr2h,f,c
  4666  00023C  50DF               	movf	indf2,w,c
  4667  00023E  0AFF               	xorlw	255
  4668  000240  B4D8               	btfsc	status,2,c
  4669  000242  D062               	goto	i2l2822
  4670                           
  4671                           ; BSR set to: 0
  4672  000244  0100               	movlb	0	; () banked
  4673  000246  EE20 F00B          	lfsr	2,11
  4674  00024A  0100               	movlb	0	; () banked
  4675  00024C  51A5               	movf	_ic_ptr& (0+255),w,b
  4676  00024E  26D9               	addwf	fsr2l,f,c
  4677  000250  0100               	movlb	0	; () banked
  4678  000252  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4679  000254  22DA               	addwfc	fsr2h,f,c
  4680  000256  50DF               	movf	indf2,w,c
  4681  000258  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4682  00025A  0100               	movlb	0	; () banked
  4683  00025C  EE20 F00A          	lfsr	2,10
  4684  000260  0100               	movlb	0	; () banked
  4685  000262  51A5               	movf	_ic_ptr& (0+255),w,b
  4686  000264  26D9               	addwf	fsr2l,f,c
  4687  000266  0100               	movlb	0	; () banked
  4688  000268  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4689  00026A  22DA               	addwfc	fsr2h,f,c
  4690  00026C  50DF               	movf	indf2,w,c
  4691  00026E  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4692  000270  B0D8               	btfsc	status,0,c
  4693  000272  D04A               	goto	i2l2822
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;my_i2c.c: 140: ic_ptr->buffer[ic_ptr->bufind] = SSP1BUF;
  4697  000274  0100               	movlb	0	; () banked
  4698  000276  EE20 F00B          	lfsr	2,11
  4699  00027A  0100               	movlb	0	; () banked
  4700  00027C  51A5               	movf	_ic_ptr& (0+255),w,b
  4701  00027E  26D9               	addwf	fsr2l,f,c
  4702  000280  0100               	movlb	0	; () banked
  4703  000282  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4704  000284  22DA               	addwfc	fsr2h,f,c
  4705  000286  50DF               	movf	indf2,w,c
  4706  000288  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4707  00028A  502E               	movf	??_i2c_master_int_handler,w,c
  4708  00028C  0D01               	mullw	1
  4709  00028E  50F3               	movf	prodl,w,c
  4710  000290  0100               	movlb	0	; () banked
  4711  000292  25A5               	addwf	_ic_ptr& (0+255),w,b
  4712  000294  6ED9               	movwf	fsr2l,c
  4713  000296  50F4               	movf	prodh,w,c
  4714  000298  0100               	movlb	0	; () banked
  4715  00029A  21A6               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4716  00029C  6EDA               	movwf	fsr2h,c
  4717  00029E  CFC9 FFDF          	movff	4041,indf2	;volatile
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;my_i2c.c: 141: ic_ptr->bufind++;
  4721  0002A2  0100               	movlb	0	; () banked
  4722  0002A4  EE20 F00B          	lfsr	2,11
  4723  0002A8  0100               	movlb	0	; () banked
  4724  0002AA  51A5               	movf	_ic_ptr& (0+255),w,b
  4725  0002AC  26D9               	addwf	fsr2l,f,c
  4726  0002AE  0100               	movlb	0	; () banked
  4727  0002B0  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4728  0002B2  22DA               	addwfc	fsr2h,f,c
  4729  0002B4  2ADF               	incf	indf2,f,c
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;my_i2c.c: 142: if(ic_ptr->bufind < ic_ptr->buflen) {
  4733  0002B6  0100               	movlb	0	; () banked
  4734  0002B8  EE20 F00B          	lfsr	2,11
  4735  0002BC  0100               	movlb	0	; () banked
  4736  0002BE  51A5               	movf	_ic_ptr& (0+255),w,b
  4737  0002C0  26D9               	addwf	fsr2l,f,c
  4738  0002C2  0100               	movlb	0	; () banked
  4739  0002C4  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4740  0002C6  22DA               	addwfc	fsr2h,f,c
  4741  0002C8  50DF               	movf	indf2,w,c
  4742  0002CA  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4743  0002CC  0100               	movlb	0	; () banked
  4744  0002CE  EE20 F00A          	lfsr	2,10
  4745  0002D2  0100               	movlb	0	; () banked
  4746  0002D4  51A5               	movf	_ic_ptr& (0+255),w,b
  4747  0002D6  26D9               	addwf	fsr2l,f,c
  4748  0002D8  0100               	movlb	0	; () banked
  4749  0002DA  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4750  0002DC  22DA               	addwfc	fsr2h,f,c
  4751  0002DE  50DF               	movf	indf2,w,c
  4752  0002E0  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4753  0002E2  B0D8               	btfsc	status,0,c
  4754  0002E4  D00E               	goto	i2l249
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;my_i2c.c: 144: ic_ptr->status = 0x5;
  4758  0002E6  0100               	movlb	0	; () banked
  4759  0002E8  EE20 F00D          	lfsr	2,13
  4760  0002EC  0100               	movlb	0	; () banked
  4761  0002EE  51A5               	movf	_ic_ptr& (0+255),w,b
  4762  0002F0  26D9               	addwf	fsr2l,f,c
  4763  0002F2  0100               	movlb	0	; () banked
  4764  0002F4  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4765  0002F6  22DA               	addwfc	fsr2h,f,c
  4766  0002F8  0E05               	movlw	5
  4767  0002FA  6EDF               	movwf	indf2,c
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;my_i2c.c: 145: SSP1CON2bits.ACKDT = 0;
  4771  0002FC  9AC5               	bcf	4037,5,c	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;my_i2c.c: 146: SSP1CON2bits.ACKEN = 1;
  4775  0002FE  88C5               	bsf	4037,4,c	;volatile
  4776                           
  4777                           ;my_i2c.c: 147: }
  4778  000300  0012               	return	
  4779  000302                     i2l249:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;my_i2c.c: 148: else {
  4783                           ;my_i2c.c: 150: SSP1CON2bits.ACKDT = 1;
  4784  000302  8AC5               	bsf	4037,5,c	;volatile
  4785                           
  4786                           ;my_i2c.c: 151: SSP1CON2bits.ACKEN = 1;
  4787  000304  88C5               	bsf	4037,4,c	;volatile
  4788  000306  0012               	return	
  4789  000308                     i2l2822:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;my_i2c.c: 155: else if(ic_ptr->bufind == 0xFF) {
  4793  000308  0100               	movlb	0	; () banked
  4794  00030A  EE20 F00B          	lfsr	2,11
  4795  00030E  0100               	movlb	0	; () banked
  4796  000310  51A5               	movf	_ic_ptr& (0+255),w,b
  4797  000312  26D9               	addwf	fsr2l,f,c
  4798  000314  0100               	movlb	0	; () banked
  4799  000316  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4800  000318  22DA               	addwfc	fsr2h,f,c
  4801  00031A  0EFF               	movlw	255
  4802  00031C  62DF               	cpfseq	indf2,c
  4803  00031E  D00F               	goto	i2l2830
  4804  000320                     i2l253:
  4805  000320  BCC5               	btfsc	4037,6,c	;volatile
  4806  000322  D7FE               	goto	i2l253
  4807                           
  4808                           ;my_i2c.c: 157: ic_ptr->bufind = 0;
  4809  000324  0100               	movlb	0	; () banked
  4810  000326  EE20 F00B          	lfsr	2,11
  4811  00032A  0100               	movlb	0	; () banked
  4812  00032C  51A5               	movf	_ic_ptr& (0+255),w,b
  4813  00032E  26D9               	addwf	fsr2l,f,c
  4814  000330  0100               	movlb	0	; () banked
  4815  000332  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4816  000334  22DA               	addwfc	fsr2h,f,c
  4817  000336  0E00               	movlw	0
  4818  000338  6EDF               	movwf	indf2,c
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;my_i2c.c: 158: SSP1CON2bits.RCEN = 1;
  4822  00033A  86C5               	bsf	4037,3,c	;volatile
  4823                           
  4824                           ;my_i2c.c: 159: }
  4825  00033C  0012               	return	
  4826  00033E                     i2l2830:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;my_i2c.c: 160: else {
  4830                           ;my_i2c.c: 161: ic_ptr->status = 0x2;
  4831  00033E  0100               	movlb	0	; () banked
  4832  000340  EE20 F00D          	lfsr	2,13
  4833  000344  0100               	movlb	0	; () banked
  4834  000346  51A5               	movf	_ic_ptr& (0+255),w,b
  4835  000348  26D9               	addwf	fsr2l,f,c
  4836  00034A  0100               	movlb	0	; () banked
  4837  00034C  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4838  00034E  22DA               	addwfc	fsr2h,f,c
  4839  000350  0E02               	movlw	2
  4840  000352  6EDF               	movwf	indf2,c
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;my_i2c.c: 162: SSP1CON2bits.PEN = 1;
  4844  000354  84C5               	bsf	4037,2,c	;volatile
  4845  000356  0012               	return	
  4846  000358                     i2l2836:
  4847  000358  0100               	movlb	0	; () banked
  4848  00035A  EE20 F00D          	lfsr	2,13
  4849  00035E  0100               	movlb	0	; () banked
  4850  000360  51A5               	movf	_ic_ptr& (0+255),w,b
  4851  000362  26D9               	addwf	fsr2l,f,c
  4852  000364  0100               	movlb	0	; () banked
  4853  000366  51A6               	movf	(_ic_ptr+1)& (0+255),w,b
  4854  000368  22DA               	addwfc	fsr2h,f,c
  4855  00036A  50DF               	movf	indf2,w,c
  4856                           
  4857                           ; Switch size 1, requested type "space"
  4858                           ; Number of cases is 5, Range of values is 1 to 7
  4859                           ; switch strategies available:
  4860                           ; Name         Instructions Cycles
  4861                           ; simple_byte           16     9 (average)
  4862                           ;	Chosen strategy is simple_byte
  4863  00036C  0A01               	xorlw	1	; case 1
  4864  00036E  B4D8               	btfsc	status,2,c
  4865  000370  D6A5               	goto	i2l231
  4866  000372  0A03               	xorlw	3	; case 2
  4867  000374  B4D8               	btfsc	status,2,c
  4868  000376  D6DE               	goto	i2l2788
  4869  000378  0A01               	xorlw	1	; case 3
  4870  00037A  B4D8               	btfsc	status,2,c
  4871  00037C  D6E7               	goto	i2l240
  4872  00037E  0A06               	xorlw	6	; case 5
  4873  000380  B4D8               	btfsc	status,2,c
  4874  000382  D746               	goto	i2l2802
  4875  000384  0A02               	xorlw	2	; case 7
  4876  000386  A4D8               	btfss	status,2,c
  4877  000388  0012               	return	
  4878  00038A  D74F               	goto	i2l2806
  4879  00038C                     __end_of_i2c_master_int_handler:
  4880                           	opt stack 0
  4881                           pclatu	equ	0xFFB
  4882                           pclath	equ	0xFFA
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           postinc0	equ	0xFEE
  4891                           fsr0h	equ	0xFEA
  4892                           fsr0l	equ	0xFE9
  4893                           wreg	equ	0xFE8
  4894                           indf1	equ	0xFE7
  4895                           postdec1	equ	0xFE5
  4896                           fsr1h	equ	0xFE2
  4897                           fsr1l	equ	0xFE1
  4898                           bsr	equ	0xFE0
  4899                           indf2	equ	0xFDF
  4900                           postinc2	equ	0xFDE
  4901                           postdec2	equ	0xFDD
  4902                           fsr2h	equ	0xFDA
  4903                           fsr2l	equ	0xFD9
  4904                           status	equ	0xFD8
  4905                           
  4906 ;; *************** function _SleepIfOkay *****************
  4907 ;; Defined at:
  4908 ;;		line 226 in file "../src/messages.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;		None               void
  4915 ;; Registers used:
  4916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    2
  4929 ;; This function calls:
  4930 ;;		_check_msg
  4931 ;;		_enter_sleep_mode
  4932 ;;		_in_high_int
  4933 ;;		_in_low_int
  4934 ;; This function is called by:
  4935 ;;		_InterruptHandlerHigh
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text31
  4940  000C80                     __ptext31:
  4941                           	opt stack 0
  4942  000C80                     _SleepIfOkay:
  4943                           	opt stack 20
  4944                           
  4945                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;incstack = 0
  4949  000C80  6631               	tstfsz	_MQ_Main_Willing_to_block,c
  4950  000C82  D001               	goto	i2l2850
  4951  000C84  0012               	return	
  4952  000C86                     i2l2850:
  4953                           
  4954                           ;messages.c: 230: }
  4955                           ;messages.c: 233: if (in_low_int()) {
  4956  000C86  ECE2  F006         	call	_in_low_int	;wreg free
  4957  000C8A  0100               	movlb	0	; () banked
  4958  000C8C  5163               	movf	(?_in_low_int+1)& (0+255),w,b
  4959  000C8E  0100               	movlb	0	; () banked
  4960  000C90  1162               	iorwf	?_in_low_int& (0+255),w,b
  4961  000C92  A4D8               	btfss	status,2,c
  4962  000C94  0012               	return	
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;messages.c: 235: }
  4966                           ;messages.c: 238: if (!in_high_int()) {
  4967                           
  4968                           ; BSR set to: 0
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;messages.c: 234: return;
  4972  000C96  ECFA  F007         	call	_in_high_int	;wreg free
  4973  000C9A  0100               	movlb	0	; () banked
  4974  000C9C  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  4975  000C9E  0100               	movlb	0	; () banked
  4976  000CA0  1160               	iorwf	?_in_high_int& (0+255),w,b
  4977  000CA2  B4D8               	btfsc	status,2,c
  4978  000CA4  0012               	return	
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;messages.c: 240: }
  4982                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  4983                           
  4984                           ; BSR set to: 0
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;messages.c: 239: return;
  4988  000CA6  0101               	movlb	1	; () banked
  4989  000CA8  0E01               	movlw	high _ToMainHigh_MQ
  4990  000CAA  0100               	movlb	0	; () banked
  4991  000CAC  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  4992  000CAE  0101               	movlb	1	; () banked
  4993  000CB0  0E6C               	movlw	low _ToMainHigh_MQ
  4994  000CB2  0100               	movlb	0	; () banked
  4995  000CB4  6F60               	movwf	check_msg@qptr& (0+255),b
  4996  000CB6  EC6C  F007         	call	_check_msg	;wreg free
  4997  000CBA  0900               	iorlw	0
  4998  000CBC  A4D8               	btfss	status,2,c
  4999  000CBE  0012               	return	
  5000                           
  5001                           ;messages.c: 247: }
  5002                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  5003                           
  5004                           ;messages.c: 246: return;
  5005  000CC0  0101               	movlb	1	; () banked
  5006  000CC2  0E01               	movlw	high _ToMainLow_MQ
  5007  000CC4  0100               	movlb	0	; () banked
  5008  000CC6  6F61               	movwf	(check_msg@qptr+1)& (0+255),b
  5009  000CC8  0101               	movlb	1	; () banked
  5010  000CCA  0EA2               	movlw	low _ToMainLow_MQ
  5011  000CCC  0100               	movlb	0	; () banked
  5012  000CCE  6F60               	movwf	check_msg@qptr& (0+255),b
  5013  000CD0  EC6C  F007         	call	_check_msg	;wreg free
  5014  000CD4  0900               	iorlw	0
  5015  000CD6  B4D8               	btfsc	status,2,c
  5016                           
  5017                           ;messages.c: 250: }
  5018                           ;messages.c: 251: enter_sleep_mode();
  5019                           
  5020                           ;messages.c: 249: return;
  5021  000CD8  EC06  F008         	call	_enter_sleep_mode	;wreg free
  5022  000CDC  0012               	return	
  5023  000CDE                     __end_of_SleepIfOkay:
  5024                           	opt stack 0
  5025                           pclatu	equ	0xFFB
  5026                           pclath	equ	0xFFA
  5027                           tblptru	equ	0xFF8
  5028                           tblptrh	equ	0xFF7
  5029                           tblptrl	equ	0xFF6
  5030                           tablat	equ	0xFF5
  5031                           prodh	equ	0xFF4
  5032                           prodl	equ	0xFF3
  5033                           intcon	equ	0xFF2
  5034                           postinc0	equ	0xFEE
  5035                           fsr0h	equ	0xFEA
  5036                           fsr0l	equ	0xFE9
  5037                           wreg	equ	0xFE8
  5038                           indf1	equ	0xFE7
  5039                           postdec1	equ	0xFE5
  5040                           fsr1h	equ	0xFE2
  5041                           fsr1l	equ	0xFE1
  5042                           bsr	equ	0xFE0
  5043                           indf2	equ	0xFDF
  5044                           postinc2	equ	0xFDE
  5045                           postdec2	equ	0xFDD
  5046                           fsr2h	equ	0xFDA
  5047                           fsr2l	equ	0xFD9
  5048                           status	equ	0xFD8
  5049                           
  5050 ;; *************** function _in_low_int *****************
  5051 ;; Defined at:
  5052 ;;		line 30 in file "../src/interrupts.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  2    2[BANK0 ] int 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;Total ram usage:        2 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    1
  5073 ;; This function calls:
  5074 ;;		_in_high_int
  5075 ;; This function is called by:
  5076 ;;		_SleepIfOkay
  5077 ;;		_in_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text32
  5082  000DC4                     __ptext32:
  5083                           	opt stack 0
  5084  000DC4                     _in_low_int:
  5085                           	opt stack 20
  5086                           
  5087                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  5088                           
  5089                           ;incstack = 0
  5090  000DC4  ACF2               	btfss	intcon,6,c	;volatile
  5091  000DC6  D007               	goto	i2l2702
  5092                           
  5093                           ;interrupts.c: 32: return (0);
  5094  000DC8  0E00               	movlw	0
  5095  000DCA  0100               	movlb	0	; () banked
  5096  000DCC  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  5097  000DCE  0E00               	movlw	0
  5098  000DD0  0100               	movlb	0	; () banked
  5099  000DD2  6F62               	movwf	?_in_low_int& (0+255),b
  5100  000DD4  0012               	return	
  5101  000DD6                     i2l2702:
  5102  000DD6  ECFA  F007         	call	_in_high_int	;wreg free
  5103  000DDA  0100               	movlb	0	; () banked
  5104  000DDC  5161               	movf	(?_in_high_int+1)& (0+255),w,b
  5105  000DDE  0100               	movlb	0	; () banked
  5106  000DE0  1160               	iorwf	?_in_high_int& (0+255),w,b
  5107  000DE2  B4D8               	btfsc	status,2,c
  5108  000DE4  D007               	goto	i2l2710
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;interrupts.c: 34: return (0);
  5112  000DE6  0E00               	movlw	0
  5113  000DE8  0100               	movlb	0	; () banked
  5114  000DEA  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  5115  000DEC  0E00               	movlw	0
  5116  000DEE  0100               	movlb	0	; () banked
  5117  000DF0  6F62               	movwf	?_in_low_int& (0+255),b
  5118  000DF2  0012               	return	
  5119  000DF4                     i2l2710:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;interrupts.c: 36: return (1);
  5123  000DF4  0E00               	movlw	0
  5124  000DF6  0100               	movlb	0	; () banked
  5125  000DF8  6F63               	movwf	(?_in_low_int+1)& (0+255),b
  5126  000DFA  0E01               	movlw	1
  5127  000DFC  0100               	movlb	0	; () banked
  5128  000DFE  6F62               	movwf	?_in_low_int& (0+255),b
  5129  000E00  0012               	return	
  5130  000E02                     __end_of_in_low_int:
  5131                           	opt stack 0
  5132                           pclatu	equ	0xFFB
  5133                           pclath	equ	0xFFA
  5134                           tblptru	equ	0xFF8
  5135                           tblptrh	equ	0xFF7
  5136                           tblptrl	equ	0xFF6
  5137                           tablat	equ	0xFF5
  5138                           prodh	equ	0xFF4
  5139                           prodl	equ	0xFF3
  5140                           intcon	equ	0xFF2
  5141                           postinc0	equ	0xFEE
  5142                           fsr0h	equ	0xFEA
  5143                           fsr0l	equ	0xFE9
  5144                           wreg	equ	0xFE8
  5145                           indf1	equ	0xFE7
  5146                           postdec1	equ	0xFE5
  5147                           fsr1h	equ	0xFE2
  5148                           fsr1l	equ	0xFE1
  5149                           bsr	equ	0xFE0
  5150                           indf2	equ	0xFDF
  5151                           postinc2	equ	0xFDE
  5152                           postdec2	equ	0xFDD
  5153                           fsr2h	equ	0xFDA
  5154                           fsr2l	equ	0xFD9
  5155                           status	equ	0xFD8
  5156                           
  5157 ;; *************** function _in_high_int *****************
  5158 ;; Defined at:
  5159 ;;		line 22 in file "../src/interrupts.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  2    0[BANK0 ] int 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;Total ram usage:        2 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_in_low_int
  5183 ;;		_SleepIfOkay
  5184 ;;		_in_main
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text33
  5189  000FF4                     __ptext33:
  5190                           	opt stack 0
  5191  000FF4                     _in_high_int:
  5192                           	opt stack 20
  5193                           
  5194                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;incstack = 0
  5198  000FF4  0E00               	movlw	0
  5199  000FF6  AEF2               	btfss	intcon,7,c	;volatile
  5200  000FF8  0E01               	movlw	1
  5201  000FFA  0100               	movlb	0	; () banked
  5202  000FFC  6F60               	movwf	?_in_high_int& (0+255),b
  5203  000FFE  0100               	movlb	0	; () banked
  5204  001000  6B61               	clrf	(?_in_high_int+1)& (0+255),b
  5205  001002  0012               	return	
  5206  001004                     __end_of_in_high_int:
  5207                           	opt stack 0
  5208                           pclatu	equ	0xFFB
  5209                           pclath	equ	0xFFA
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           postinc0	equ	0xFEE
  5218                           fsr0h	equ	0xFEA
  5219                           fsr0l	equ	0xFE9
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postdec1	equ	0xFE5
  5223                           fsr1h	equ	0xFE2
  5224                           fsr1l	equ	0xFE1
  5225                           bsr	equ	0xFE0
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           postdec2	equ	0xFDD
  5229                           fsr2h	equ	0xFDA
  5230                           fsr2l	equ	0xFD9
  5231                           status	equ	0xFD8
  5232                           
  5233 ;; *************** function _enter_sleep_mode *****************
  5234 ;; Defined at:
  5235 ;;		line 202 in file "../src/messages.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;		None               void
  5242 ;; Registers used:
  5243 ;;		None
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5253 ;;Total ram usage:        0 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_SleepIfOkay
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text34
  5263  00100C                     __ptext34:
  5264                           	opt stack 0
  5265  00100C                     _enter_sleep_mode:
  5266                           	opt stack 21
  5267                           
  5268                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;incstack = 0
  5272  00100C  8ED3               	bsf	4051,7,c	;volatile
  5273  00100E  0003               	sleep		;# 
  5274  001010  0012               	return	
  5275  001012                     __end_of_enter_sleep_mode:
  5276                           	opt stack 0
  5277                           pclatu	equ	0xFFB
  5278                           pclath	equ	0xFFA
  5279                           tblptru	equ	0xFF8
  5280                           tblptrh	equ	0xFF7
  5281                           tblptrl	equ	0xFF6
  5282                           tablat	equ	0xFF5
  5283                           prodh	equ	0xFF4
  5284                           prodl	equ	0xFF3
  5285                           intcon	equ	0xFF2
  5286                           postinc0	equ	0xFEE
  5287                           fsr0h	equ	0xFEA
  5288                           fsr0l	equ	0xFE9
  5289                           wreg	equ	0xFE8
  5290                           indf1	equ	0xFE7
  5291                           postdec1	equ	0xFE5
  5292                           fsr1h	equ	0xFE2
  5293                           fsr1l	equ	0xFE1
  5294                           bsr	equ	0xFE0
  5295                           indf2	equ	0xFDF
  5296                           postinc2	equ	0xFDE
  5297                           postdec2	equ	0xFDD
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _check_msg *****************
  5303 ;; Defined at:
  5304 ;;		line 220 in file "../src/messages.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  5307 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;		None
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5319 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;Total ram usage:        3 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_SleepIfOkay
  5329 ;;		_block_on_To_msgqueues
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           
  5333                           	psect	text35
  5334  000ED8                     __ptext35:
  5335                           	opt stack 0
  5336  000ED8                     _check_msg:
  5337                           	opt stack 21
  5338                           
  5339                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  5340                           
  5341                           ;incstack = 0
  5342  000ED8  0100               	movlb	0	; () banked
  5343  000EDA  EE20 F035          	lfsr	2,53
  5344  000EDE  0100               	movlb	0	; () banked
  5345  000EE0  5160               	movf	check_msg@qptr& (0+255),w,b
  5346  000EE2  26D9               	addwf	fsr2l,f,c
  5347  000EE4  0100               	movlb	0	; () banked
  5348  000EE6  5161               	movf	(check_msg@qptr+1)& (0+255),w,b
  5349  000EE8  22DA               	addwfc	fsr2h,f,c
  5350  000EEA  50DF               	movf	indf2,w,c
  5351  000EEC  6E2E               	movwf	??_check_msg& (0+255),c
  5352  000EEE  502E               	movf	??_check_msg,w,c
  5353  000EF0  0D0D               	mullw	13
  5354  000EF2  50F3               	movf	prodl,w,c
  5355  000EF4  0100               	movlb	0	; () banked
  5356  000EF6  2560               	addwf	check_msg@qptr& (0+255),w,b
  5357  000EF8  6ED9               	movwf	fsr2l,c
  5358  000EFA  50F4               	movf	prodh,w,c
  5359  000EFC  0100               	movlb	0	; () banked
  5360  000EFE  2161               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  5361  000F00  6EDA               	movwf	fsr2h,c
  5362  000F02  50DF               	movf	indf2,w,c
  5363  000F04  0012               	return	
  5364  000F06                     __end_of_check_msg:
  5365                           	opt stack 0
  5366  0000                     pclatu	equ	0xFFB
  5367                           pclath	equ	0xFFA
  5368                           tblptru	equ	0xFF8
  5369                           tblptrh	equ	0xFF7
  5370                           tblptrl	equ	0xFF6
  5371                           tablat	equ	0xFF5
  5372                           prodh	equ	0xFF4
  5373                           prodl	equ	0xFF3
  5374                           intcon	equ	0xFF2
  5375                           postinc0	equ	0xFEE
  5376                           fsr0h	equ	0xFEA
  5377                           fsr0l	equ	0xFE9
  5378                           wreg	equ	0xFE8
  5379                           indf1	equ	0xFE7
  5380                           postdec1	equ	0xFE5
  5381                           fsr1h	equ	0xFE2
  5382                           fsr1l	equ	0xFE1
  5383                           bsr	equ	0xFE0
  5384                           indf2	equ	0xFDF
  5385                           postinc2	equ	0xFDE
  5386                           postdec2	equ	0xFDD
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           status	equ	0xFD8
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           indf1	equ	0xFE7
  5404                           postdec1	equ	0xFE5
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           bsr	equ	0xFE0
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415                           	psect	rparam
  5416  0000                     pclatu	equ	0xFFB
  5417                           pclath	equ	0xFFA
  5418                           tblptru	equ	0xFF8
  5419                           tblptrh	equ	0xFF7
  5420                           tblptrl	equ	0xFF6
  5421                           tablat	equ	0xFF5
  5422                           prodh	equ	0xFF4
  5423                           prodl	equ	0xFF3
  5424                           intcon	equ	0xFF2
  5425                           postinc0	equ	0xFEE
  5426                           fsr0h	equ	0xFEA
  5427                           fsr0l	equ	0xFE9
  5428                           wreg	equ	0xFE8
  5429                           indf1	equ	0xFE7
  5430                           postdec1	equ	0xFE5
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           bsr	equ	0xFE0
  5434                           indf2	equ	0xFDF
  5435                           postinc2	equ	0xFDE
  5436                           postdec2	equ	0xFDD
  5437                           fsr2h	equ	0xFDA
  5438                           fsr2l	equ	0xFD9
  5439                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      50
    BANK0           160     65      71
    BANK1           256      0     216
    BANK2           256     42      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[31]), 
		 -> main@uc(BANK2[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[31]), 
		 -> main@uc(BANK2[5]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 31
		 -> main@ic(BANK2[31]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 2
		 -> main@msgSensor(BANK2[2]), main@msgMotor(BANK2[2]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 31
		 -> NULL(NULL[0]), main@ic(BANK2[31]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 31
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK2[31]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK2[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), 

    send_msg@data	PTR void  size(2) Largest target is 31
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK2[31]), 
		 -> main@uc(BANK2[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__get_buffer	PTR unsigned char  size(2) Largest target is 10
		 -> get_buffer@ret_buf(BANK0[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_master_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _SleepIfOkay->_check_msg

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _main in BANK0

    _main->_get_buffer
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->_recv_msg
    _recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0    2701
                                              0 BANK2     42    42      0
                         _Open1USART
                  _enable_interrupts
                         _get_buffer
               _i2c_configure_master
                    _i2c_master_recv
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _wait_till_idle
 ---------------------------------------------------------------------------------
 (1) _wait_till_idle                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      5     3      2     316
                                             48 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_recv                                      2     1      1     223
                                             48 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_buffer                                          17    15      2     167
                                             48 BANK0     17    15      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     375
                                             48 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptHandlerLow                                 17    17      0    4787
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (4) _uart_recv_int_handler                                1     1      0    2350
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (5) _Read1USART                                           1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _timer1_int_handler                                   2     2      0    2437
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (5) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _ToMainLow_sendmsg                                    4     1      3    2316
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (6) _send_msg                                            12     6      6    1833
                                             10 COMRAM    12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6     459
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    4400
                                             34 BANK0     14    14      0
                        _SleepIfOkay
             _i2c_master_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   6     6      0    4078
                                             28 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             21 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (11) i2_send_msg                                         12     6      6     998
                                             45 COMRAM     1     1      0
                                             10 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (10) _FromMainHigh_recvmsg                                5     1      4    2152
                                             45 COMRAM     1     1      0
                                             24 BANK0      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (11) _recv_msg                                           14     7      7    1929
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     384
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (9) _i2c_master_int_handler                               1     1      0       0
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     322
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (10) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (11) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _check_msg                                           3     1      2     322
                                             45 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _enable_interrupts
   _get_buffer
   _i2c_configure_master
   _i2c_master_recv
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _wait_till_idle

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_master_int_handler
   _timer0_int_handler
     _FromMainHigh_recvmsg
       _recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     2A      2A      10       16.4%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      D8       8       84.4%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      47       5       44.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      32       1       52.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B       6        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Feb 26 11:13:11 2015

       _MQ_Main_Willing_to_block 0031                      _SSPSTATbits 000FC7  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 0F56  
                   __CFG_CP0$OFF 000000                      get_buffer@i 009F  
                            l442 0B1C                              l444 0B28  
                            l445 0B2A                              l438 0B04  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 0060                 ??_init_uart_recv 0092  
                ReadTimer1@timer 0003                             l3002 0486  
                           l3012 0F92                             l3030 09DE  
                           l3034 0A10                             l3018 08AA  
                           l3118 068E                             l2722 0C58  
                           l2964 0B06                             l2956 0AF4  
                           l2990 03A2                             l2976 0B1E  
                           l2998 040A                             _LATB 000F8A  
                           i1l47 0070                  _FromMainHigh_MQ 0100  
               ??_wait_till_idle 0090                   Read1USART@data 0001  
                           _main 060E                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 00B6  
                     i2_send_msg 070C    __size_of_i2c_configure_master 003A  
                 send_msg@length 000D      __size_of_timer0_int_handler 006E  
                  __CFG_PLLDIV$3 000000                            ?_main 0001  
                          i2l231 00BC                            i1l455 0F82  
                          i2l240 014C                            i2l235 011C  
                          i2l253 0320                            i2l249 0302  
    FromMainHigh_recvmsg@msgtype 0078                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                     i2memcpy@d1 0060                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0062                     ?_init_queues 0001  
                   main@msgMotor 0202        __size_of_enter_sleep_mode 0006  
                     _Read1USART 0F74                   __CFG_T1DIG$OFF 000000  
                          tablat 000FF5                            status 000FD8  
               __end_ofi2_memcpy 0D84                  __initialization 0E02  
                   __end_of_main 070C                       _ReadTimer1 0FD0  
    __size_of_timer1_int_handler 002C       __size_of_ToMainLow_sendmsg 0024  
  __size_of_FromMainHigh_recvmsg 0034                   __CFG_OSC$HSPLL 000000  
                     _Open1USART 0AD8                           ??_main 00A1  
                send_msg@msgtype 000E                    __activetblptr 000002  
                send_msg@tlength 0012        i2c_master_recv@slave_addr 0090  
        ??_uart_recv_int_handler 001B                           i1l3078 0066  
                         i1l2626 082C                           i1l2592 0D96  
                         i1l2598 0DB2                           i2l3070 0A9A  
                         i1l2886 09B4                           i2l3064 0A90  
                         i2l2602 0D4E                           i2l2710 0DF4  
                         i2l2702 0DD6                   __CFG_WDTEN$OFF 000000  
                         i2l2608 0D6E                           i2l2802 0210  
                         i2l2650 0550                           i2l2830 033E  
                         i2l2822 0308                           i2l2806 022A  
                         i2l2850 0C86                           i2l2666 060A  
                         i2l2682 075A                           i2l2836 0358  
                         i2l2784 00EE                           i2l2796 01CC  
                         i2l2788 0134                           _RCREG1 000FAF  
                  ??_SleepIfOkay 002F                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                         _SSPADD 000FC8                   __CFG_WPCFG$OFF 000000  
                         _SSPBUF 000FC9                           _TXSTA1 000FAD  
                 __CFG_WPDIS$OFF 000000                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000                    main@msgSensor 0204  
                _i2c_master_recv 089E                  _i2c_master_send 038C  
                         _ic_ptr 00A5                 __end_of_init_i2c 0C1C  
                         _memcpy 0D84                           clear_0 0E08  
                         _uc_ptr 002F                           main@ic 020B  
                         main@uc 0206                 __end_of_recv_msg 060E  
               __end_of_send_msg 089E            timer0_int_handler@val 0080  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 0092  
              get_buffer@ret_buf 0095             __size_of_in_high_int 0010  
                    ?_Read1USART 0001                       __accesstop 0060  
        __end_of__initialization 0E32       __end_of_ToMainHigh_sendmsg 0ED8  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 0FBE              __end_of_SleepIfOkay 0CDE  
                 __pcstackCOMRAM 0001                     __pidataBANK0 1012  
                    ?_ReadTimer1 0001               __size_of_check_msg 002E  
                __CFG_DSWDTPS$G2 000000                      ?_Open1USART 0090  
      timer0_int_handler@msgtype 007E    __size_of_InterruptHandlerHigh 0AD0  
    __end_of_InterruptHandlerLow 00B6                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 016C                 _enter_sleep_mode 100C  
            __size_ofi2_send_msg 00E8                    check_msg@qptr 0060  
           __size_of_init_queues 0056                       __pbssBANK1 0100  
                     __pnvCOMRAM 002F          __end_of_i2c_master_recv 093C  
        __end_of_i2c_master_send 04F0         ??_i2c_master_int_handler 002E  
              recv_msg@maxlength 006C                  recv_msg@msgtype 006D  
                recv_msg@tlength 0074                 WriteTimer0@timer 0062  
                        ?_memcpy 0001                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 002E                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E                 Open1USART@config 0095  
   __end_of_i2c_configure_master 0E76                       ??i2_memcpy 002E  
                     _get_buffer 09D0                          _SPBRGH1 000F7F  
                        _SSP1BUF 000FC9                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
            __size_of_ReadTimer1 0012                __end_of_check_msg 0F06  
                      ?_init_i2c 0090                      _SleepIfOkay 0C80  
            __size_of_Open1USART 0070                        ?_recv_msg 006A  
                     _in_low_int 0DC4                          __Hparam 0000  
                      ?_send_msg 000B                          __Lparam 0000  
     __end_of_timer0_int_handler 0BB6                 init_uart_recv@uc 0090  
                __CFG_STVREN$OFF 000000                          __pcinit 0E02  
                __size_of_memcpy 0040                       _init_queue 0C1C  
                        __ramtop 0F00                          __ptext0 060E  
                        __ptext1 0F92                          __ptext2 0F56  
                        __ptext3 0FAC                          __ptext4 0CDE  
                        __ptext5 0C1C                          __ptext6 0BB6  
                        __ptext7 038C                          __ptext8 089E  
                        __ptext9 0E3C              __end_of_WriteTimer0 0FF4  
            __end_of_WriteTimer1 0FD0                   __pintcode_body 0A5A  
   __end_of_FromMainHigh_recvmsg 0EAA             end_of_initialization 0E32  
 __size_of_uart_recv_int_handler 0094                          memcpy@d 0007  
                        memcpy@n 0005                          memcpy@s 0009  
  __end_of_uart_recv_int_handler 09D0                       ??_init_i2c 0092  
                  __Lmediumconst 0000                          int_func 0A5A  
        __size_of_init_uart_recv 001E                 ?_i2c_master_recv 0090  
               ?_i2c_master_send 0090                       ??_recv_msg 0071  
                   ??i2_send_msg 002E                       ??_send_msg 0011  
__size_of_i2c_master_int_handler 02D2       __end_of_timer1_int_handler 0F32  
                      _RCSTAbits 000FAC                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0075  
        __size_of_wait_till_idle 001A                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000                      ?_get_buffer 0090  
               __CFG_CPUDIV$OSC1 000000                        _TRISBbits 000F93  
             __end_ofi2_send_msg 07F4                     ??_Read1USART 0001  
  FromMainHigh_recvmsg@maxlength 002E         timer1_int_handler@result 001B  
              __CFG_WPFP$PAGE_63 000000                      ?_in_low_int 0062  
           _i2c_configure_master 0E3C              __CFG_MSSP7B_EN$MSK7 000000  
       __end_of_enter_sleep_mode 1012                     ??_ReadTimer1 0003  
             _ToMainHigh_sendmsg 0EAA                     ??_Open1USART 0092  
                    ?_init_queue 0090                        i2memcpy@d 0066  
                    _WriteTimer0 0FE2                      _WriteTimer1 0FBE  
                      i2memcpy@n 0064                        i2memcpy@s 0068  
             __end_of_Read1USART 0F92                   __end_of_memcpy 0DC4  
              _enable_interrupts 1004                 __CFG_DSWDTEN$OFF 000000  
            ?_ToMainHigh_sendmsg 0075               ?_enable_interrupts 0001  
            start_initialization 0E02           _i2c_master_int_handler 00BA  
                  ??_in_high_int 002E                __size_ofi2_memcpy 0050  
            ??_enable_interrupts 0090               __end_of_ReadTimer1 0FE2  
   __end_of_InterruptHandlerHigh 0AD8               __end_of_Open1USART 0B48  
                     init_i2c@ic 0090             ??_ToMainHigh_sendmsg 002F  
          ?_i2c_configure_master 0001              __size_of_get_buffer 008A  
                    __pdataBANK0 00A1                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 100C                         ??_memcpy 0007  
           _FromMainHigh_recvmsg 0E76     __size_of_init_timer1_lthread 0012  
                    __pbssCOMRAM 0031                    ??_init_queues 0093  
                  __pcstackBANK0 0060                    __pcstackBANK2 0200  
            __size_of_in_low_int 003E         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 009E              __end_of_in_high_int 1004  
                   ?_SleepIfOkay 0001                     _ToMainLow_MQ 01A2  
            __size_of_init_queue 0064                   _init_uart_recv 0F56  
                      _check_msg 0ED8                        __pnvBANK0 00A5  
              __size_of_init_i2c 0066                     recv_msg@data 006F  
                   recv_msg@qmsg 0076                     recv_msg@slot 0073  
                   recv_msg@qptr 006A                __size_of_recv_msg 011E  
                      __pintcode 0008                   _wait_till_idle 0F92  
              __size_of_send_msg 00AA            ?_FromMainHigh_recvmsg 0078  
                    __pintcodelo 0018                  Open1USART@spbrg 0090  
              WriteTimer0@timer0 0060               _timer0_int_handler 0B48  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
          ToMainLow_sendmsg@data 0018              ?_timer0_int_handler 0001  
         __end_of_init_uart_recv 0F74              __end_of_init_queues 0D34  
          i2c_master_recv@length 0091                         _LATBbits 000F8A  
         ??_i2c_configure_master 0090                       ?_check_msg 0060  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
         __end_of_wait_till_idle 0FAC                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0076                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F9240 00A3  
                      main@F9238 00A1             ??_timer0_int_handler 002F  
          i2c_master_send@length 0094       __size_of_enable_interrupts 0008  
             _timer1_int_handler 0F06                     ??_get_buffer 0092  
           _InterruptHandlerHigh 0008                         i2_memcpy 0D34  
       FromMainHigh_recvmsg@data 007A                      _in_high_int 0FF4  
                   send_msg@data 000F                     send_msg@qmsg 0015  
                   send_msg@slot 0014                     send_msg@qptr 000B  
                      copy_data0 0E26              ?_timer1_int_handler 0001  
                ?_init_uart_recv 0090            _uart_recv_int_handler 093C  
                   ??_in_low_int 002E                         __Hrparam 0000  
                ?_wait_till_idle 0001                         __Lrparam 0000  
             __end_of_get_buffer 0A5A                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 002E             ??_timer1_int_handler 001B  
             ??_enter_sleep_mode 002E         __size_of_i2c_master_recv 009E  
       __size_of_i2c_master_send 0164                     ??_init_queue 0092  
                   ?_WriteTimer0 0060                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
          ?_InterruptHandlerHigh 0001                i2send_msg@msgtype 006D  
              i2send_msg@tlength 0070          init_timer1_lthread@tptr 0090  
                    _init_queues 0CDE               __end_of_in_low_int 0E02  
                       __ptext10 09D0                         __ptext11 1004  
                       __ptext20 0D84                         __ptext12 0AD8  
                       __ptext21 0FD0                         __ptext30 00BA  
                       __ptext14 093C                         __ptext31 0C80  
                       __ptext23 0B48                         __ptext15 0F74  
                       __ptext32 0DC4                         __ptext24 0FE2  
                       __ptext16 0F06                         __ptext33 0FF4  
                       __ptext25 0EAA                         __ptext17 0FBE  
                       __ptext34 100C                         __ptext26 070C  
                       __ptext18 0F32                         __ptext35 0ED8  
                       __ptext27 0E76                         __ptext19 07F4  
                       __ptext28 04F0                         __ptext29 0D34  
                   _SSP1CON2bits 000FC5         timer0_int_handler@length 007C  
                       _init_i2c 0BB6              _init_timer1_lthread 0FAC  
                  __size_of_main 00FE                main@t1thread_data 0200  
                    ??_check_msg 002E               __end_of_init_queue 0C80  
           __size_of_SleepIfOkay 005E                         _recv_msg 04F0  
                       _send_msg 07F4                   init_queue@qptr 0090  
 __end_of_i2c_master_int_handler 038C              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 0090                    _USART1_Status 0032  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 0001                         memcpy@s1 0003  
               i2send_msg@length 006C                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
         ?_uart_recv_int_handler 0001                       _RCSTA1bits 000FAC  
    __size_of_ToMainHigh_sendmsg 002E                       _OSCCONbits 000FD3  
       ToMainHigh_sendmsg@length 0078            ??_init_timer1_lthread 0092  
         ??_InterruptHandlerHigh 0082                _ToMainLow_sendmsg 0F32  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 0091  
              ??_i2c_master_send 0092               i2c_master_send@msg 0090  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 006E            ??_InterruptHandlerLow 001D  
                 i2send_msg@qmsg 0073                   i2send_msg@slot 0072  
                 i2send_msg@qptr 006A              ??_ToMainLow_sendmsg 001A  
