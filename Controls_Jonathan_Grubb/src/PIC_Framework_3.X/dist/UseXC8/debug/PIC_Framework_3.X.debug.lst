

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Feb 25 21:09:20 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataBANK0
    57  000FD0                     __pidataBANK0:
    58                           	opt stack 0
    59                           
    60                           ;initializer for main@F9238
    61  000FD0  A8                 	db	168
    62  000FD1  4F                 	db	79
    63  0000                     _INTCONbits	set	4082
    64  0000                     _IPR1bits	set	3999
    65  0000                     _LATB	set	3978
    66  0000                     _LATBbits	set	3978
    67  0000                     _OSCCON	set	4051
    68  0000                     _OSCCONbits	set	4051
    69  0000                     _OSCTUNEbits	set	3995
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIR1bits	set	3998
    72  0000                     _PORTBbits	set	3969
    73  0000                     _RCONbits	set	4048
    74  0000                     _RCREG1	set	4015
    75  0000                     _RCSTA1	set	4012
    76  0000                     _RCSTA1bits	set	4012
    77  0000                     _RCSTAbits	set	4012
    78  0000                     _SPBRG1	set	4016
    79  0000                     _SPBRGH1	set	3967
    80  0000                     _SSP1BUF	set	4041
    81  0000                     _SSP1CON2bits	set	4037
    82  0000                     _SSPADD	set	4040
    83  0000                     _SSPBUF	set	4041
    84  0000                     _SSPCON1	set	4038
    85  0000                     _SSPCON1bits	set	4038
    86  0000                     _SSPCON2	set	4037
    87  0000                     _SSPCON2bits	set	4037
    88  0000                     _SSPSTAT	set	4039
    89  0000                     _SSPSTATbits	set	4039
    90  0000                     _TMR0H	set	4055
    91  0000                     _TMR0L	set	4054
    92  0000                     _TMR1H	set	4047
    93  0000                     _TMR1L	set	4046
    94  0000                     _TRISB	set	3987
    95  0000                     _TRISBbits	set	3987
    96  0000                     _TXSTA1	set	4013
    97  0000                     _TXSTA1bits	set	4013
    98                           
    99                           	psect	nvCOMRAM
   100  00002F                     __pnvCOMRAM:
   101                           	opt stack 0
   102  00002F                     _uc_ptr:
   103                           	opt stack 0
   104  00002F                     	ds	2
   105                           
   106                           	psect	nvBANK0
   107  0000CC                     __pnvBANK0:
   108                           	opt stack 0
   109  0000CC                     _ic_ptr:
   110                           	opt stack 0
   111  0000CC                     	ds	2
   112                           
   113                           ; #config settings
   114  0000                     
   115                           	psect	cinit
   116  000D7E                     __pcinit:
   117                           	opt stack 0
   118  000D7E                     start_initialization:
   119                           	opt stack 0
   120  000D7E                     __initialization:
   121                           	opt stack 0
   122                           
   123                           ; Clear objects allocated to BANK1 (162 bytes)
   124  000D7E  EE01  F000         	lfsr	0,__pbssBANK1
   125  000D82  0EA2               	movlw	162
   126  000D84                     clear_0:
   127  000D84  6AEE               	clrf	postinc0,c
   128  000D86  06E8               	decf	wreg,f,c
   129  000D88  E1FD               	bnz	clear_0
   130                           
   131                           ; Clear objects allocated to BANK0 (54 bytes)
   132  000D8A  EE00  F060         	lfsr	0,__pbssBANK0
   133  000D8E  0E36               	movlw	54
   134  000D90                     clear_1:
   135  000D90  6AEE               	clrf	postinc0,c
   136  000D92  06E8               	decf	wreg,f,c
   137  000D94  E1FD               	bnz	clear_1
   138                           
   139                           ; Clear objects allocated to COMRAM (2 bytes)
   140  000D96  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   141  000D98  6A31               	clrf	__pbssCOMRAM& (0+255),c
   142                           
   143                           ; Initialize objects allocated to BANK0 (2 bytes)
   144                           ; load TBLPTR registers with __pidataBANK0
   145  000D9A  0ED0               	movlw	low __pidataBANK0
   146  000D9C  6EF6               	movwf	tblptrl,c
   147  000D9E  0E0F               	movlw	high __pidataBANK0
   148  000DA0  6EF7               	movwf	tblptrh,c
   149  000DA2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   150  000DA4  6EF8               	movwf	tblptru,c
   151  000DA6  0009               	tblrd		*+	;fetch initializer
   152  000DA8  CFF5 F0CE          	movff	tablat,__pdataBANK0
   153  000DAC  0009               	tblrd		*+	;fetch initializer
   154  000DAE  CFF5 F0CF          	movff	tablat,__pdataBANK0+1
   155  000DB2                     end_of_initialization:
   156                           	opt stack 0
   157  000DB2                     __end_of__initialization:
   158                           	opt stack 0
   159  000DB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  000DB4  6EF8               	movwf	tblptru,c
   161  000DB6  0100               	movlb	0
   162  000DB8  EF7B  F003         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           
   170                           	psect	bssCOMRAM
   171  000031                     __pbssCOMRAM:
   172                           	opt stack 0
   173  000031                     _MQ_Main_Willing_to_block:
   174                           	opt stack 0
   175  000031                     	ds	1
   176  000032                     _USART1_Status:
   177                           	opt stack 0
   178  000032                     	ds	1
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           postinc0	equ	0xFEE
   184                           wreg	equ	0xFE8
   185                           
   186                           	psect	bssBANK0
   187  000060                     __pbssBANK0:
   188                           	opt stack 0
   189  000060                     _ToMainLow_MQ:
   190                           	opt stack 0
   191  000060                     	ds	54
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	dataBANK0
   200  0000CE                     __pdataBANK0:
   201                           	opt stack 0
   202  0000CE                     main@F9238:
   203                           	opt stack 0
   204  0000CE                     	ds	2
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssBANK1
   213  000100                     __pbssBANK1:
   214                           	opt stack 0
   215  000100                     _FromMainHigh_MQ:
   216                           	opt stack 0
   217  000100                     	ds	54
   218  000136                     _FromMainLow_MQ:
   219                           	opt stack 0
   220  000136                     	ds	54
   221  00016C                     _ToMainHigh_MQ:
   222                           	opt stack 0
   223  00016C                     	ds	54
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           
   231                           	psect	cstackBANK1
   232  0001A2                     __pcstackBANK1:
   233                           	opt stack 0
   234  0001A2                     get_buffer@ret_buf:
   235                           	opt stack 0
   236                           
   237                           ; 10 bytes @ 0x0
   238  0001A2                     	ds	10
   239  0001AC                     get_buffer@i:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0xA
   243  0001AC                     	ds	2
   244  0001AE                     main@t1thread_data:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0xC
   248  0001AE                     	ds	2
   249  0001B0                     main@msg:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0xE
   253  0001B0                     	ds	2
   254  0001B2                     main@uc:
   255                           	opt stack 0
   256                           
   257                           ; 5 bytes @ 0x10
   258  0001B2                     	ds	5
   259  0001B7                     main@ic:
   260                           	opt stack 0
   261                           
   262                           ; 31 bytes @ 0x15
   263  0001B7                     	ds	31
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           
   271                           	psect	cstackBANK0
   272  000096                     __pcstackBANK0:
   273                           	opt stack 0
   274  000096                     ?_in_high_int:
   275                           	opt stack 0
   276  000096                     check_msg@qptr:
   277                           	opt stack 0
   278  000096                     WriteTimer0@timer0:
   279                           	opt stack 0
   280  000096                     i2memcpy@d1:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x0
   284  000096                     	ds	2
   285  000098                     ?_in_low_int:
   286                           	opt stack 0
   287  000098                     WriteTimer0@timer:
   288                           	opt stack 0
   289  000098                     i2memcpy@s1:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x2
   293  000098                     	ds	2
   294  00009A                     i2memcpy@n:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x4
   298  00009A                     	ds	2
   299  00009C                     i2memcpy@d:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x6
   303  00009C                     	ds	2
   304  00009E                     i2memcpy@s:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x8
   308  00009E                     	ds	2
   309  0000A0                     recv_msg@qptr:
   310                           	opt stack 0
   311  0000A0                     i2send_msg@qptr:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xA
   315  0000A0                     	ds	2
   316  0000A2                     recv_msg@maxlength:
   317                           	opt stack 0
   318  0000A2                     i2send_msg@length:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0xC
   322  0000A2                     	ds	1
   323  0000A3                     i2send_msg@msgtype:
   324                           	opt stack 0
   325  0000A3                     recv_msg@msgtype:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0xD
   329  0000A3                     	ds	1
   330  0000A4                     i2send_msg@data:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0xE
   334  0000A4                     	ds	1
   335  0000A5                     recv_msg@data:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0xF
   339  0000A5                     	ds	1
   340  0000A6                     i2send_msg@tlength:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x10
   344  0000A6                     	ds	1
   345  0000A7                     ??_recv_msg:
   346                           
   347                           ; 0 bytes @ 0x11
   348  0000A7                     	ds	1
   349  0000A8                     i2send_msg@slot:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x12
   353  0000A8                     	ds	1
   354  0000A9                     recv_msg@slot:
   355                           	opt stack 0
   356  0000A9                     i2send_msg@qmsg:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x13
   360  0000A9                     	ds	1
   361  0000AA                     recv_msg@tlength:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x14
   365  0000AA                     	ds	1
   366  0000AB                     ToMainHigh_sendmsg@msgtype:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x15
   370  0000AB                     	ds	1
   371  0000AC                     recv_msg@qmsg:
   372                           	opt stack 0
   373  0000AC                     ToMainHigh_sendmsg@data:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x16
   377  0000AC                     	ds	2
   378  0000AE                     ToMainHigh_sendmsg@length:
   379                           	opt stack 0
   380  0000AE                     FromMainHigh_recvmsg@msgtype:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x18
   384  0000AE                     	ds	2
   385  0000B0                     FromMainHigh_recvmsg@data:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x1A
   389  0000B0                     	ds	2
   390  0000B2                     timer0_int_handler@length:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x1C
   394  0000B2                     	ds	2
   395  0000B4                     timer0_int_handler@msgtype:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x1E
   399  0000B4                     	ds	2
   400  0000B6                     timer0_int_handler@val:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x20
   404  0000B6                     	ds	2
   405  0000B8                     ??_InterruptHandlerHigh:
   406                           
   407                           ; 0 bytes @ 0x22
   408  0000B8                     	ds	14
   409  0000C6                     ?_get_buffer:
   410                           	opt stack 0
   411  0000C6                     i2c_master_recv@slave_addr:
   412                           	opt stack 0
   413  0000C6                     init_queue@qptr:
   414                           	opt stack 0
   415  0000C6                     i2c_master_send@msg:
   416                           	opt stack 0
   417  0000C6                     init_i2c@ic:
   418                           	opt stack 0
   419  0000C6                     init_uart_recv@uc:
   420                           	opt stack 0
   421  0000C6                     init_timer1_lthread@tptr:
   422                           	opt stack 0
   423  0000C6                     Open1USART@spbrg:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x30
   427  0000C6                     	ds	1
   428  0000C7                     i2c_master_recv@length:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x31
   432  0000C7                     	ds	1
   433  0000C8                     ??_Open1USART:
   434  0000C8                     ??_i2c_master_send:
   435  0000C8                     ??_get_buffer:
   436  0000C8                     init_queue@i:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x32
   440  0000C8                     	ds	1
   441  0000C9                     
   442                           ; 0 bytes @ 0x33
   443  0000C9                     	ds	1
   444  0000CA                     i2c_master_send@length:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x34
   448  0000CA                     	ds	1
   449  0000CB                     Open1USART@config:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x35
   453  0000CB                     	ds	1
   454  0000CC                     tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           
   461                           ; 0 bytes @ 0x36
   462                           
   463                           	psect	cstackCOMRAM
   464  000001                     __pcstackCOMRAM:
   465                           	opt stack 0
   466  000001                     ?_ReadTimer1:
   467                           	opt stack 0
   468  000001                     Read1USART@data:
   469                           	opt stack 0
   470  000001                     WriteTimer1@timer1:
   471                           	opt stack 0
   472  000001                     memcpy@d1:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x0
   476  000001                     	ds	2
   477  000003                     ReadTimer1@timer:
   478                           	opt stack 0
   479  000003                     WriteTimer1@timer:
   480                           	opt stack 0
   481  000003                     memcpy@s1:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x2
   485  000003                     	ds	2
   486  000005                     memcpy@n:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x4
   490  000005                     	ds	2
   491  000007                     memcpy@d:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x6
   495  000007                     	ds	2
   496  000009                     memcpy@s:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x8
   500  000009                     	ds	2
   501  00000B                     send_msg@qptr:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0xA
   505  00000B                     	ds	2
   506  00000D                     send_msg@length:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0xC
   510  00000D                     	ds	1
   511  00000E                     send_msg@msgtype:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0xD
   515  00000E                     	ds	1
   516  00000F                     send_msg@data:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520  00000F                     	ds	2
   521  000011                     ??_send_msg:
   522                           
   523                           ; 0 bytes @ 0x10
   524  000011                     	ds	1
   525  000012                     send_msg@tlength:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x11
   529  000012                     	ds	2
   530  000014                     send_msg@slot:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x13
   534  000014                     	ds	1
   535  000015                     send_msg@qmsg:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539  000015                     	ds	2
   540  000017                     ToMainLow_sendmsg@msgtype:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x16
   544  000017                     	ds	1
   545  000018                     ToMainLow_sendmsg@data:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x17
   549  000018                     	ds	2
   550  00001A                     ToMainLow_sendmsg@length:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x19
   554  00001A                     	ds	1
   555  00001B                     ??_uart_recv_int_handler:
   556  00001B                     timer1_int_handler@result:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x1A
   560  00001B                     	ds	2
   561  00001D                     ??_InterruptHandlerLow:
   562                           
   563                           ; 0 bytes @ 0x1C
   564  00001D                     	ds	17
   565  00002E                     ??_i2c_master_int_handler:
   566  00002E                     ??_check_msg:
   567  00002E                     ??i2_send_msg:
   568  00002E                     FromMainHigh_recvmsg@maxlength:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x2D
   572  00002E                     	ds	1
   573  00002F                     tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           postinc0	equ	0xFEE
   578                           wreg	equ	0xFE8
   579                           
   580                           ; 0 bytes @ 0x2E
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 186 in file "../src/main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  ic             31   21[BANK1 ] struct __i2c_comm
   591 ;;  msgbuffer      11    0        unsigned char [11]
   592 ;;  uc              5   16[BANK1 ] struct __uart_comm
   593 ;;  msg             2   14[BANK1 ] unsigned char [2]
   594 ;;  t1thread_dat    2   12[BANK1 ] struct __timer1_thread_s
   595 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   596 ;;  uthread_data    2    0        struct __uart_thread_str
   597 ;;  i               1    0        unsigned char 
   598 ;;  last_reg_rec    1    0        unsigned char 
   599 ;;  msgtype         1    0        unsigned char 
   600 ;;  length          1    0        char 
   601 ;;  c               1    0        unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;		None               void
   604 ;; Registers used:
   605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   612 ;;      Locals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   615 ;;Total ram usage:       40 bytes
   616 ;; Hardware stack levels required when called:   12
   617 ;; This function calls:
   618 ;;		_Open1USART
   619 ;;		_enable_interrupts
   620 ;;		_get_buffer
   621 ;;		_i2c_configure_master
   622 ;;		_i2c_master_recv
   623 ;;		_i2c_master_send
   624 ;;		_init_i2c
   625 ;;		_init_queues
   626 ;;		_init_timer1_lthread
   627 ;;		_init_uart_recv
   628 ;;		_wait_till_idle
   629 ;; This function is called by:
   630 ;;		Startup code after reset
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text0
   635  0006F6                     __ptext0:
   636                           	opt stack 0
   637  0006F6                     _main:
   638                           	opt stack 18
   639                           
   640                           ;main.c: 187: char c;
   641                           ;main.c: 188: signed char length;
   642                           ;main.c: 189: unsigned char msgtype;
   643                           ;main.c: 190: unsigned char last_reg_recvd;
   644                           ;main.c: 191: uart_comm uc;
   645                           ;main.c: 192: i2c_comm ic;
   646                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
   647                           ;main.c: 194: unsigned char i;
   648                           ;main.c: 195: uart_thread_struct uthread_data;
   649                           ;main.c: 196: timer1_thread_struct t1thread_data;
   650                           ;main.c: 197: timer0_thread_struct t0thread_data;
   651                           ;main.c: 200: OSCCON = 0xE0;
   652                           
   653                           ;incstack = 0
   654  0006F6  0EE0               	movlw	224
   655  0006F8  6ED3               	movwf	4051,c	;volatile
   656                           
   657                           ;main.c: 201: OSCTUNEbits.PLLEN = 1;
   658  0006FA  8C9B               	bsf	3995,6,c	;volatile
   659                           
   660                           ;main.c: 208: init_uart_recv(&uc);
   661  0006FC  0101               	movlb	1	; () banked
   662  0006FE  0E01               	movlw	high main@uc
   663  000700  0100               	movlb	0	; () banked
   664  000702  6FC7               	movwf	(init_uart_recv@uc+1)& (0+255),b
   665  000704  0101               	movlb	1	; () banked
   666  000706  0EB2               	movlw	low main@uc
   667  000708  0100               	movlb	0	; () banked
   668  00070A  6FC6               	movwf	init_uart_recv@uc& (0+255),b
   669  00070C  EC8A  F007         	call	_init_uart_recv	;wreg free
   670                           
   671                           ;main.c: 211: init_i2c(&ic);
   672  000710  0101               	movlb	1	; () banked
   673  000712  0E01               	movlw	high main@ic
   674  000714  0100               	movlb	0	; () banked
   675  000716  6FC7               	movwf	(init_i2c@ic+1)& (0+255),b
   676  000718  0101               	movlb	1	; () banked
   677  00071A  0EB7               	movlw	low main@ic
   678  00071C  0100               	movlb	0	; () banked
   679  00071E  6FC6               	movwf	init_i2c@ic& (0+255),b
   680  000720  ECB8  F005         	call	_init_i2c	;wreg free
   681                           
   682                           ;main.c: 214: init_timer1_lthread(&t1thread_data);
   683  000724  0101               	movlb	1	; () banked
   684  000726  0E01               	movlw	high main@t1thread_data
   685  000728  0100               	movlb	0	; () banked
   686  00072A  6FC7               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   687  00072C  0101               	movlb	1	; () banked
   688  00072E  0EAE               	movlw	low main@t1thread_data
   689  000730  0100               	movlb	0	; () banked
   690  000732  6FC6               	movwf	init_timer1_lthread@tptr& (0+255),b
   691  000734  ECB5  F007         	call	_init_timer1_lthread	;wreg free
   692                           
   693                           ;main.c: 217: init_queues();
   694  000738  EC4C  F006         	call	_init_queues	;wreg free
   695                           
   696                           ;main.c: 221: TRISB = 0x0;
   697  00073C  0E00               	movlw	0
   698  00073E  6E93               	movwf	3987,c	;volatile
   699                           
   700                           ;main.c: 222: LATB = 0x0;
   701  000740  0E00               	movlw	0
   702  000742  6E8A               	movwf	3978,c	;volatile
   703                           
   704                           ;main.c: 251: IPR1bits.TMR1IP = 0;
   705  000744  909F               	bcf	3999,0,c	;volatile
   706                           
   707                           ;main.c: 253: IPR1bits.RCIP = 0;
   708  000746  9A9F               	bcf	3999,5,c	;volatile
   709                           
   710                           ;main.c: 255: IPR1bits.SSPIP = 1;
   711  000748  869F               	bsf	3999,3,c	;volatile
   712                           
   713                           ;main.c: 264: i2c_configure_master();
   714  00074A  ECFD  F006         	call	_i2c_configure_master	;wreg free
   715                           
   716                           ;main.c: 279: PIE1bits.SSPIE = 1;
   717  00074E  869D               	bsf	3997,3,c	;volatile
   718                           
   719                           ;main.c: 287: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   720                           ;main.c: 288: 0b11111111 & 0b11101111, 0x19);
   721  000750  0E00               	movlw	0
   722  000752  0100               	movlb	0	; () banked
   723  000754  6FC7               	movwf	(Open1USART@spbrg+1)& (0+255),b
   724  000756  0E19               	movlw	25
   725  000758  0100               	movlb	0	; () banked
   726  00075A  6FC6               	movwf	Open1USART@spbrg& (0+255),b
   727  00075C  0E6C               	movlw	108
   728  00075E  EC49  F005         	call	_Open1USART
   729                           
   730                           ;main.c: 297: enable_interrupts();
   731  000762  ECE1  F007         	call	_enable_interrupts	;wreg free
   732                           
   733                           ;main.c: 317: unsigned char msg[] = {0xA8, 0x4F};
   734  000766  C0CE  F1B0         	movff	main@F9238,main@msg
   735  00076A  C0CF  F1B1         	movff	main@F9238+1,main@msg+1
   736  00076E                     l3086:
   737                           
   738                           ;main.c: 319: i2c_master_send(1, &msg);
   739  00076E  0101               	movlb	1	; () banked
   740  000770  0E01               	movlw	high main@msg
   741  000772  0100               	movlb	0	; () banked
   742  000774  6FC7               	movwf	(i2c_master_send@msg+1)& (0+255),b
   743  000776  0101               	movlb	1	; () banked
   744  000778  0EB0               	movlw	low main@msg
   745  00077A  0100               	movlb	0	; () banked
   746  00077C  6FC6               	movwf	i2c_master_send@msg& (0+255),b
   747  00077E  0E01               	movlw	1
   748  000780  ECC6  F001         	call	_i2c_master_send
   749                           
   750                           ;main.c: 320: wait_till_idle();
   751  000784  ECA8  F007         	call	_wait_till_idle	;wreg free
   752                           
   753                           ;main.c: 321: i2c_master_recv(1, msg[1]);
   754  000788  C1B1  F0C6         	movff	main@msg+1,i2c_master_recv@slave_addr
   755  00078C  0E01               	movlw	1
   756  00078E  EC2C  F004         	call	_i2c_master_recv
   757                           
   758                           ;main.c: 322: wait_till_idle();
   759  000792  ECA8  F007         	call	_wait_till_idle	;wreg free
   760                           
   761                           ;main.c: 323: msg[0] = get_buffer()[0];
   762  000796  ECC5  F004         	call	_get_buffer	;wreg free
   763  00079A  0100               	movlb	0	; () banked
   764  00079C  C0C6  FFD9         	movff	?_get_buffer,fsr2l
   765  0007A0  0100               	movlb	0	; () banked
   766  0007A2  C0C7  FFDA         	movff	?_get_buffer+1,fsr2h
   767  0007A6  50DF               	movf	indf2,w,c
   768  0007A8  0101               	movlb	1	; () banked
   769  0007AA  6FB0               	movwf	main@msg& (0+255),b
   770  0007AC  D7E0               	goto	l3086
   771  0007AE                     __end_of_main:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           indf2	equ	0xFDF
   780                           fsr2h	equ	0xFDA
   781                           fsr2l	equ	0xFD9
   782                           
   783 ;; *************** function _wait_till_idle *****************
   784 ;; Defined at:
   785 ;;		line 169 in file "../src/my_i2c.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;		None               void
   792 ;; Registers used:
   793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:   10
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text1
   814  000F50                     __ptext1:
   815                           	opt stack 0
   816  000F50                     _wait_till_idle:
   817                           	opt stack 19
   818  000F50                     l2982:
   819  000F50  0100               	movlb	0	; () banked
   820  000F52  EE20 F00D          	lfsr	2,13
   821  000F56  0100               	movlb	0	; () banked
   822  000F58  51CC               	movf	_ic_ptr& (0+255),w,b
   823  000F5A  26D9               	addwf	fsr2l,f,c
   824  000F5C  0100               	movlb	0	; () banked
   825  000F5E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
   826  000F60  22DA               	addwfc	fsr2h,f,c
   827  000F62  0E04               	movlw	4
   828  000F64  62DF               	cpfseq	indf2,c
   829  000F66  D7F4               	goto	l2982
   830  000F68  0012               	return	
   831  000F6A                     __end_of_wait_till_idle:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           indf2	equ	0xFDF
   840                           fsr2h	equ	0xFDA
   841                           fsr2l	equ	0xFD9
   842                           
   843 ;; *************** function _init_uart_recv *****************
   844 ;; Defined at:
   845 ;;		line 49 in file "../src/my_uart.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  uc              2   48[BANK0 ] PTR struct __uart_comm
   848 ;;		 -> main@uc(5), 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;		None               void
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;Total ram usage:        2 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:   10
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text2
   875  000F14                     __ptext2:
   876                           	opt stack 0
   877  000F14                     _init_uart_recv:
   878                           	opt stack 19
   879                           
   880                           ;my_uart.c: 50: uc_ptr = uc;
   881                           
   882                           ; BSR set to: 0
   883                           ;incstack = 0
   884  000F14  0100               	movlb	0	; () banked
   885  000F16  C0C7  F030         	movff	init_uart_recv@uc+1,_uc_ptr+1
   886  000F1A  0100               	movlb	0	; () banked
   887  000F1C  C0C6  F02F         	movff	init_uart_recv@uc,_uc_ptr
   888                           
   889                           ; BSR set to: 0
   890                           ;my_uart.c: 51: uc_ptr->buflen = 0;
   891  000F20  EE20 F004          	lfsr	2,4
   892  000F24  502F               	movf	_uc_ptr,w,c
   893  000F26  26D9               	addwf	fsr2l,f,c
   894  000F28  5030               	movf	_uc_ptr+1,w,c
   895  000F2A  22DA               	addwfc	fsr2h,f,c
   896  000F2C  0E00               	movlw	0
   897  000F2E  6EDF               	movwf	indf2,c
   898                           
   899                           ; BSR set to: 0
   900  000F30  0012               	return	
   901  000F32                     __end_of_init_uart_recv:
   902                           	opt stack 0
   903                           tblptru	equ	0xFF8
   904                           tblptrh	equ	0xFF7
   905                           tblptrl	equ	0xFF6
   906                           tablat	equ	0xFF5
   907                           postinc0	equ	0xFEE
   908                           wreg	equ	0xFE8
   909                           indf2	equ	0xFDF
   910                           fsr2h	equ	0xFDA
   911                           fsr2l	equ	0xFD9
   912                           
   913 ;; *************** function _init_timer1_lthread *****************
   914 ;; Defined at:
   915 ;;		line 6 in file "../src/timer1_thread.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  tptr            2   48[BANK0 ] PTR struct __timer1_thre
   918 ;;		 -> main@t1thread_data(2), 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, fsr2l, fsr2h
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;Total ram usage:        2 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:   10
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text3
   945  000F6A                     __ptext3:
   946                           	opt stack 0
   947  000F6A                     _init_timer1_lthread:
   948                           	opt stack 19
   949                           
   950                           ;timer1_thread.c: 7: tptr->msgcount = 0;
   951                           
   952                           ; BSR set to: 0
   953                           ;incstack = 0
   954  000F6A  C0C6  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
   955  000F6E  C0C7  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
   956  000F72  0E00               	movlw	0
   957  000F74  6EDE               	movwf	postinc2,c
   958  000F76  0E00               	movlw	0
   959  000F78  6EDD               	movwf	postdec2,c
   960  000F7A  0012               	return	
   961  000F7C                     __end_of_init_timer1_lthread:
   962                           	opt stack 0
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           indf2	equ	0xFDF
   970                           postinc2	equ	0xFDE
   971                           postdec2	equ	0xFDD
   972                           fsr2h	equ	0xFDA
   973                           fsr2l	equ	0xFD9
   974                           
   975 ;; *************** function _init_queues *****************
   976 ;; Defined at:
   977 ;;		line 194 in file "../src/messages.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;		None               void
   984 ;; Registers used:
   985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:   11
   998 ;; This function calls:
   999 ;;		_init_queue
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text4
  1006  000C98                     __ptext4:
  1007                           	opt stack 0
  1008  000C98                     _init_queues:
  1009                           	opt stack 18
  1010                           
  1011                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1012                           
  1013                           ;incstack = 0
  1014  000C98  0E00               	movlw	0
  1015  000C9A  6E31               	movwf	_MQ_Main_Willing_to_block,c
  1016                           
  1017                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1018  000C9C  0100               	movlb	0	; () banked
  1019  000C9E  0E00               	movlw	high _ToMainLow_MQ
  1020  000CA0  0100               	movlb	0	; () banked
  1021  000CA2  6FC7               	movwf	(init_queue@qptr+1)& (0+255),b
  1022  000CA4  0100               	movlb	0	; () banked
  1023  000CA6  0E60               	movlw	low _ToMainLow_MQ
  1024  000CA8  0100               	movlb	0	; () banked
  1025  000CAA  6FC6               	movwf	init_queue@qptr& (0+255),b
  1026  000CAC  ECEB  F005         	call	_init_queue	;wreg free
  1027                           
  1028                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1029  000CB0  0101               	movlb	1	; () banked
  1030  000CB2  0E01               	movlw	high _ToMainHigh_MQ
  1031  000CB4  0100               	movlb	0	; () banked
  1032  000CB6  6FC7               	movwf	(init_queue@qptr+1)& (0+255),b
  1033  000CB8  0101               	movlb	1	; () banked
  1034  000CBA  0E6C               	movlw	low _ToMainHigh_MQ
  1035  000CBC  0100               	movlb	0	; () banked
  1036  000CBE  6FC6               	movwf	init_queue@qptr& (0+255),b
  1037  000CC0  ECEB  F005         	call	_init_queue	;wreg free
  1038                           
  1039                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1040  000CC4  0101               	movlb	1	; () banked
  1041  000CC6  0E01               	movlw	high _FromMainLow_MQ
  1042  000CC8  0100               	movlb	0	; () banked
  1043  000CCA  6FC7               	movwf	(init_queue@qptr+1)& (0+255),b
  1044  000CCC  0101               	movlb	1	; () banked
  1045  000CCE  0E36               	movlw	low _FromMainLow_MQ
  1046  000CD0  0100               	movlb	0	; () banked
  1047  000CD2  6FC6               	movwf	init_queue@qptr& (0+255),b
  1048  000CD4  ECEB  F005         	call	_init_queue	;wreg free
  1049                           
  1050                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1051  000CD8  0101               	movlb	1	; () banked
  1052  000CDA  0E01               	movlw	high _FromMainHigh_MQ
  1053  000CDC  0100               	movlb	0	; () banked
  1054  000CDE  6FC7               	movwf	(init_queue@qptr+1)& (0+255),b
  1055  000CE0  0101               	movlb	1	; () banked
  1056  000CE2  0E00               	movlw	low _FromMainHigh_MQ
  1057  000CE4  0100               	movlb	0	; () banked
  1058  000CE6  6FC6               	movwf	init_queue@qptr& (0+255),b
  1059  000CE8  ECEB  F005         	call	_init_queue	;wreg free
  1060  000CEC  0012               	return	
  1061  000CEE                     __end_of_init_queues:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           postinc0	equ	0xFEE
  1068                           wreg	equ	0xFE8
  1069                           indf2	equ	0xFDF
  1070                           postinc2	equ	0xFDE
  1071                           postdec2	equ	0xFDD
  1072                           fsr2h	equ	0xFDA
  1073                           fsr2l	equ	0xFD9
  1074                           
  1075 ;; *************** function _init_queue *****************
  1076 ;; Defined at:
  1077 ;;		line 14 in file "../src/messages.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  1080 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  i               1   50[BANK0 ] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;Total ram usage:        3 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:   10
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_init_queues
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text5
  1107  000BD6                     __ptext5:
  1108                           	opt stack 0
  1109  000BD6                     _init_queue:
  1110                           	opt stack 18
  1111                           
  1112                           ;messages.c: 15: unsigned char i;
  1113                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1114                           
  1115                           ;incstack = 0
  1116  000BD6  0100               	movlb	0	; () banked
  1117  000BD8  EE20 F034          	lfsr	2,52
  1118  000BDC  0100               	movlb	0	; () banked
  1119  000BDE  51C6               	movf	init_queue@qptr& (0+255),w,b
  1120  000BE0  26D9               	addwf	fsr2l,f,c
  1121  000BE2  0100               	movlb	0	; () banked
  1122  000BE4  51C7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1123  000BE6  22DA               	addwfc	fsr2h,f,c
  1124  000BE8  0E00               	movlw	0
  1125  000BEA  6EDF               	movwf	indf2,c
  1126                           
  1127                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1128  000BEC  0100               	movlb	0	; () banked
  1129  000BEE  EE20 F035          	lfsr	2,53
  1130  000BF2  0100               	movlb	0	; () banked
  1131  000BF4  51C6               	movf	init_queue@qptr& (0+255),w,b
  1132  000BF6  26D9               	addwf	fsr2l,f,c
  1133  000BF8  0100               	movlb	0	; () banked
  1134  000BFA  51C7               	movf	(init_queue@qptr+1)& (0+255),w,b
  1135  000BFC  22DA               	addwfc	fsr2h,f,c
  1136  000BFE  0E00               	movlw	0
  1137  000C00  6EDF               	movwf	indf2,c
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1141  000C02  0E00               	movlw	0
  1142  000C04  0100               	movlb	0	; () banked
  1143  000C06  6FC8               	movwf	init_queue@i& (0+255),b
  1144                           
  1145                           ; BSR set to: 0
  1146  000C08  0E03               	movlw	3
  1147  000C0A  0100               	movlb	0	; () banked
  1148  000C0C  65C8               	cpfsgt	init_queue@i& (0+255),b
  1149  000C0E  D001               	goto	l2692
  1150  000C10  0012               	return	
  1151  000C12                     l2692:
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;messages.c: 20: qptr->queue[i].full = 0;
  1155  000C12  0100               	movlb	0	; () banked
  1156  000C14  51C8               	movf	init_queue@i& (0+255),w,b
  1157  000C16  0D0D               	mullw	13
  1158  000C18  50F3               	movf	prodl,w,c
  1159  000C1A  0100               	movlb	0	; () banked
  1160  000C1C  25C6               	addwf	init_queue@qptr& (0+255),w,b
  1161  000C1E  6ED9               	movwf	fsr2l,c
  1162  000C20  50F4               	movf	prodh,w,c
  1163  000C22  0100               	movlb	0	; () banked
  1164  000C24  21C7               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1165  000C26  6EDA               	movwf	fsr2h,c
  1166  000C28  0E00               	movlw	0
  1167  000C2A  6EDF               	movwf	indf2,c
  1168                           
  1169                           ; BSR set to: 0
  1170  000C2C  0100               	movlb	0	; () banked
  1171  000C2E  2BC8               	incf	init_queue@i& (0+255),f,b
  1172                           
  1173                           ; BSR set to: 0
  1174  000C30  0E03               	movlw	3
  1175  000C32  0100               	movlb	0	; () banked
  1176  000C34  65C8               	cpfsgt	init_queue@i& (0+255),b
  1177  000C36  D7ED               	goto	l2692
  1178  000C38  0012               	return	
  1179  000C3A                     __end_of_init_queue:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           indf2	equ	0xFDF
  1190                           postinc2	equ	0xFDE
  1191                           postdec2	equ	0xFDD
  1192                           fsr2h	equ	0xFDA
  1193                           fsr2l	equ	0xFD9
  1194                           
  1195 ;; *************** function _init_i2c *****************
  1196 ;; Defined at:
  1197 ;;		line 398 in file "../src/my_i2c.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  ic              2   48[BANK0 ] PTR struct __i2c_comm
  1200 ;;		 -> main@ic(31), 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:   10
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text6
  1227  000B70                     __ptext6:
  1228                           	opt stack 0
  1229  000B70                     _init_i2c:
  1230                           	opt stack 19
  1231                           
  1232                           ;my_i2c.c: 399: ic_ptr = ic;
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;incstack = 0
  1236  000B70  0100               	movlb	0	; () banked
  1237  000B72  C0C7  F0CD         	movff	init_i2c@ic+1,_ic_ptr+1
  1238  000B76  0100               	movlb	0	; () banked
  1239  000B78  C0C6  F0CC         	movff	init_i2c@ic,_ic_ptr
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;my_i2c.c: 400: ic_ptr->buflen = 0;
  1243  000B7C  0100               	movlb	0	; () banked
  1244  000B7E  EE20 F00A          	lfsr	2,10
  1245  000B82  0100               	movlb	0	; () banked
  1246  000B84  51CC               	movf	_ic_ptr& (0+255),w,b
  1247  000B86  26D9               	addwf	fsr2l,f,c
  1248  000B88  0100               	movlb	0	; () banked
  1249  000B8A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1250  000B8C  22DA               	addwfc	fsr2h,f,c
  1251  000B8E  0E00               	movlw	0
  1252  000B90  6EDF               	movwf	indf2,c
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;my_i2c.c: 401: ic_ptr->event_count = 0;
  1256  000B92  0100               	movlb	0	; () banked
  1257  000B94  EE20 F00C          	lfsr	2,12
  1258  000B98  0100               	movlb	0	; () banked
  1259  000B9A  51CC               	movf	_ic_ptr& (0+255),w,b
  1260  000B9C  26D9               	addwf	fsr2l,f,c
  1261  000B9E  0100               	movlb	0	; () banked
  1262  000BA0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1263  000BA2  22DA               	addwfc	fsr2h,f,c
  1264  000BA4  0E00               	movlw	0
  1265  000BA6  6EDF               	movwf	indf2,c
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;my_i2c.c: 402: ic_ptr->status = 0x5;
  1269  000BA8  0100               	movlb	0	; () banked
  1270  000BAA  EE20 F00D          	lfsr	2,13
  1271  000BAE  0100               	movlb	0	; () banked
  1272  000BB0  51CC               	movf	_ic_ptr& (0+255),w,b
  1273  000BB2  26D9               	addwf	fsr2l,f,c
  1274  000BB4  0100               	movlb	0	; () banked
  1275  000BB6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1276  000BB8  22DA               	addwfc	fsr2h,f,c
  1277  000BBA  0E05               	movlw	5
  1278  000BBC  6EDF               	movwf	indf2,c
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;my_i2c.c: 403: ic_ptr->error_count = 0;
  1282  000BBE  0100               	movlb	0	; () banked
  1283  000BC0  EE20 F00F          	lfsr	2,15
  1284  000BC4  0100               	movlb	0	; () banked
  1285  000BC6  51CC               	movf	_ic_ptr& (0+255),w,b
  1286  000BC8  26D9               	addwf	fsr2l,f,c
  1287  000BCA  0100               	movlb	0	; () banked
  1288  000BCC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1289  000BCE  22DA               	addwfc	fsr2h,f,c
  1290  000BD0  0E00               	movlw	0
  1291  000BD2  6EDF               	movwf	indf2,c
  1292                           
  1293                           ; BSR set to: 0
  1294  000BD4  0012               	return	
  1295  000BD6                     __end_of_init_i2c:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           indf2	equ	0xFDF
  1306                           postinc2	equ	0xFDE
  1307                           postdec2	equ	0xFDD
  1308                           fsr2h	equ	0xFDA
  1309                           fsr2l	equ	0xFD9
  1310                           
  1311 ;; *************** function _i2c_master_send *****************
  1312 ;; Defined at:
  1313 ;;		line 52 in file "../src/my_i2c.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  length          1    wreg     unsigned char 
  1316 ;;  msg             2   48[BANK0 ] PTR unsigned char 
  1317 ;;		 -> main@msg(2), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  length          1   52[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      unsigned char 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;Total ram usage:        5 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:   10
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text7
  1344  00038C                     __ptext7:
  1345                           	opt stack 0
  1346  00038C                     _i2c_master_send:
  1347                           	opt stack 19
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;incstack = 0
  1351                           ;i2c_master_send@length stored from wreg
  1352  00038C  0100               	movlb	0	; () banked
  1353  00038E  6FCA               	movwf	i2c_master_send@length& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;my_i2c.c: 53: if(length > 10 || length <= 0) return -2;
  1357  000390  0E0B               	movlw	11
  1358  000392  0100               	movlb	0	; () banked
  1359  000394  5DCA               	subwf	i2c_master_send@length& (0+255),w,b
  1360  000396  B0D8               	btfsc	status,0,c
  1361  000398  0012               	return	
  1362                           
  1363                           ; BSR set to: 0
  1364  00039A  0100               	movlb	0	; () banked
  1365  00039C  67CA               	tstfsz	i2c_master_send@length& (0+255),b
  1366  00039E  D001               	goto	l2960
  1367  0003A0  0012               	return	
  1368  0003A2                     l2960:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;my_i2c.c: 56: if(ic_ptr->status != 0x4) return -1;
  1372  0003A2  0100               	movlb	0	; () banked
  1373  0003A4  EE20 F00D          	lfsr	2,13
  1374  0003A8  0100               	movlb	0	; () banked
  1375  0003AA  51CC               	movf	_ic_ptr& (0+255),w,b
  1376  0003AC  26D9               	addwf	fsr2l,f,c
  1377  0003AE  0100               	movlb	0	; () banked
  1378  0003B0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1379  0003B2  22DA               	addwfc	fsr2h,f,c
  1380  0003B4  50DF               	movf	indf2,w,c
  1381  0003B6  0A04               	xorlw	4
  1382  0003B8  A4D8               	btfss	status,2,c
  1383  0003BA  0012               	return	
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;my_i2c.c: 58: ic_ptr->slave_addr = msg[length] << 1;
  1387                           
  1388                           ; BSR set to: 0
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;	Return value of _i2c_master_send is never used
  1392  0003BC  0100               	movlb	0	; () banked
  1393  0003BE  EE20 F01C          	lfsr	2,28
  1394  0003C2  0100               	movlb	0	; () banked
  1395  0003C4  51CC               	movf	_ic_ptr& (0+255),w,b
  1396  0003C6  26D9               	addwf	fsr2l,f,c
  1397  0003C8  0100               	movlb	0	; () banked
  1398  0003CA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1399  0003CC  22DA               	addwfc	fsr2h,f,c
  1400  0003CE  0100               	movlb	0	; () banked
  1401  0003D0  51CA               	movf	i2c_master_send@length& (0+255),w,b
  1402  0003D2  0D01               	mullw	1
  1403  0003D4  50F3               	movf	prodl,w,c
  1404  0003D6  0100               	movlb	0	; () banked
  1405  0003D8  25C6               	addwf	i2c_master_send@msg& (0+255),w,b
  1406  0003DA  6EE1               	movwf	fsr1l,c
  1407  0003DC  50F4               	movf	prodh,w,c
  1408  0003DE  0100               	movlb	0	; () banked
  1409  0003E0  21C7               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  1410  0003E2  6EE2               	movwf	fsr1h,c
  1411  0003E4  50E7               	movf	indf1,w,c
  1412  0003E6  0100               	movlb	0	; () banked
  1413  0003E8  6FC8               	movwf	??_i2c_master_send& (0+255),b
  1414  0003EA  0100               	movlb	0	; () banked
  1415  0003EC  90D8               	bcf	status,0,c
  1416  0003EE  35C8               	rlcf	??_i2c_master_send& (0+255),w,b
  1417  0003F0  6EDF               	movwf	indf2,c
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;my_i2c.c: 60: for(ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen+
      +                          +) {
  1421  0003F2  0100               	movlb	0	; () banked
  1422  0003F4  EE20 F01A          	lfsr	2,26
  1423  0003F8  0100               	movlb	0	; () banked
  1424  0003FA  51CC               	movf	_ic_ptr& (0+255),w,b
  1425  0003FC  26D9               	addwf	fsr2l,f,c
  1426  0003FE  0100               	movlb	0	; () banked
  1427  000400  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1428  000402  22DA               	addwfc	fsr2h,f,c
  1429  000404  0E00               	movlw	0
  1430  000406  6EDF               	movwf	indf2,c
  1431  000408  D03E               	goto	l2972
  1432  00040A                     l2968:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;my_i2c.c: 61: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1436  00040A  0100               	movlb	0	; () banked
  1437  00040C  EE20 F01A          	lfsr	2,26
  1438  000410  0100               	movlb	0	; () banked
  1439  000412  51CC               	movf	_ic_ptr& (0+255),w,b
  1440  000414  26D9               	addwf	fsr2l,f,c
  1441  000416  0100               	movlb	0	; () banked
  1442  000418  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1443  00041A  22DA               	addwfc	fsr2h,f,c
  1444  00041C  50DF               	movf	indf2,w,c
  1445  00041E  0100               	movlb	0	; () banked
  1446  000420  6FC8               	movwf	??_i2c_master_send& (0+255),b
  1447  000422  0100               	movlb	0	; () banked
  1448  000424  51C8               	movf	??_i2c_master_send& (0+255),w,b
  1449  000426  0D01               	mullw	1
  1450  000428  50F3               	movf	prodl,w,c
  1451  00042A  0100               	movlb	0	; () banked
  1452  00042C  25C6               	addwf	i2c_master_send@msg& (0+255),w,b
  1453  00042E  6ED9               	movwf	fsr2l,c
  1454  000430  50F4               	movf	prodh,w,c
  1455  000432  0100               	movlb	0	; () banked
  1456  000434  21C7               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  1457  000436  6EDA               	movwf	fsr2h,c
  1458  000438  0100               	movlb	0	; () banked
  1459  00043A  EE10 F01A          	lfsr	1,26
  1460  00043E  0100               	movlb	0	; () banked
  1461  000440  51CC               	movf	_ic_ptr& (0+255),w,b
  1462  000442  26E1               	addwf	fsr1l,f,c
  1463  000444  0100               	movlb	0	; () banked
  1464  000446  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1465  000448  22E2               	addwfc	fsr1h,f,c
  1466  00044A  50E7               	movf	indf1,w,c
  1467  00044C  0100               	movlb	0	; () banked
  1468  00044E  6FC9               	movwf	(??_i2c_master_send+1)& (0+255),b
  1469  000450  0100               	movlb	0	; () banked
  1470  000452  51C9               	movf	(??_i2c_master_send+1)& (0+255),w,b
  1471  000454  0D01               	mullw	1
  1472  000456  0E10               	movlw	16
  1473  000458  26F3               	addwf	prodl,f,c
  1474  00045A  0E00               	movlw	0
  1475  00045C  22F4               	addwfc	prodh,f,c
  1476  00045E  50F3               	movf	prodl,w,c
  1477  000460  0100               	movlb	0	; () banked
  1478  000462  25CC               	addwf	_ic_ptr& (0+255),w,b
  1479  000464  6EE1               	movwf	fsr1l,c
  1480  000466  50F4               	movf	prodh,w,c
  1481  000468  0100               	movlb	0	; () banked
  1482  00046A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1483  00046C  6EE2               	movwf	fsr1h,c
  1484  00046E  CFDF FFE7          	movff	indf2,indf1
  1485                           
  1486                           ; BSR set to: 0
  1487  000472  0100               	movlb	0	; () banked
  1488  000474  EE20 F01A          	lfsr	2,26
  1489  000478  0100               	movlb	0	; () banked
  1490  00047A  51CC               	movf	_ic_ptr& (0+255),w,b
  1491  00047C  26D9               	addwf	fsr2l,f,c
  1492  00047E  0100               	movlb	0	; () banked
  1493  000480  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1494  000482  22DA               	addwfc	fsr2h,f,c
  1495  000484  2ADF               	incf	indf2,f,c
  1496  000486                     l2972:
  1497                           
  1498                           ; BSR set to: 0
  1499  000486  0100               	movlb	0	; () banked
  1500  000488  EE20 F01A          	lfsr	2,26
  1501  00048C  0100               	movlb	0	; () banked
  1502  00048E  51CC               	movf	_ic_ptr& (0+255),w,b
  1503  000490  26D9               	addwf	fsr2l,f,c
  1504  000492  0100               	movlb	0	; () banked
  1505  000494  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1506  000496  22DA               	addwfc	fsr2h,f,c
  1507  000498  50DF               	movf	indf2,w,c
  1508  00049A  0100               	movlb	0	; () banked
  1509  00049C  6FC8               	movwf	??_i2c_master_send& (0+255),b
  1510  00049E  0100               	movlb	0	; () banked
  1511  0004A0  51CA               	movf	i2c_master_send@length& (0+255),w,b
  1512  0004A2  0100               	movlb	0	; () banked
  1513  0004A4  5DC8               	subwf	??_i2c_master_send& (0+255),w,b
  1514  0004A6  A0D8               	btfss	status,0,c
  1515  0004A8  D7B0               	goto	l2968
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;my_i2c.c: 62: }
  1519                           ;my_i2c.c: 64: ic_ptr->msg_trans_type = 0x0;
  1520                           
  1521                           ; BSR set to: 0
  1522  0004AA  0100               	movlb	0	; () banked
  1523  0004AC  EE20 F01D          	lfsr	2,29
  1524  0004B0  0100               	movlb	0	; () banked
  1525  0004B2  51CC               	movf	_ic_ptr& (0+255),w,b
  1526  0004B4  26D9               	addwf	fsr2l,f,c
  1527  0004B6  0100               	movlb	0	; () banked
  1528  0004B8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1529  0004BA  22DA               	addwfc	fsr2h,f,c
  1530  0004BC  0E00               	movlw	0
  1531  0004BE  6EDF               	movwf	indf2,c
  1532                           
  1533                           ;my_i2c.c: 65: ic_ptr->status = 0x1;
  1534  0004C0  0100               	movlb	0	; () banked
  1535  0004C2  EE20 F00D          	lfsr	2,13
  1536  0004C6  0100               	movlb	0	; () banked
  1537  0004C8  51CC               	movf	_ic_ptr& (0+255),w,b
  1538  0004CA  26D9               	addwf	fsr2l,f,c
  1539  0004CC  0100               	movlb	0	; () banked
  1540  0004CE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1541  0004D0  22DA               	addwfc	fsr2h,f,c
  1542  0004D2  0E01               	movlw	1
  1543  0004D4  6EDF               	movwf	indf2,c
  1544                           
  1545                           ;my_i2c.c: 66: ic_ptr->outbufind = 0;
  1546  0004D6  0100               	movlb	0	; () banked
  1547  0004D8  EE20 F01B          	lfsr	2,27
  1548  0004DC  0100               	movlb	0	; () banked
  1549  0004DE  51CC               	movf	_ic_ptr& (0+255),w,b
  1550  0004E0  26D9               	addwf	fsr2l,f,c
  1551  0004E2  0100               	movlb	0	; () banked
  1552  0004E4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1553  0004E6  22DA               	addwfc	fsr2h,f,c
  1554  0004E8  0E00               	movlw	0
  1555  0004EA  6EDF               	movwf	indf2,c
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;my_i2c.c: 68: SSP1CON2bits.SEN = 1;
  1559  0004EC  80C5               	bsf	4037,0,c	;volatile
  1560  0004EE  0012               	return	
  1561  0004F0                     __end_of_i2c_master_send:
  1562                           	opt stack 0
  1563                           tblptru	equ	0xFF8
  1564                           tblptrh	equ	0xFF7
  1565                           tblptrl	equ	0xFF6
  1566                           tablat	equ	0xFF5
  1567                           prodh	equ	0xFF4
  1568                           prodl	equ	0xFF3
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           indf1	equ	0xFE7
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           indf2	equ	0xFDF
  1575                           postinc2	equ	0xFDE
  1576                           postdec2	equ	0xFDD
  1577                           fsr2h	equ	0xFDA
  1578                           fsr2l	equ	0xFD9
  1579                           status	equ	0xFD8
  1580                           
  1581 ;; *************** function _i2c_master_recv *****************
  1582 ;; Defined at:
  1583 ;;		line 86 in file "../src/my_i2c.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  length          1    wreg     unsigned char 
  1586 ;;  slave_addr      1   48[BANK0 ] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  length          1   49[BANK0 ] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      unsigned char 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1598 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1602 ;;Total ram usage:        2 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:   10
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text8
  1613  000858                     __ptext8:
  1614                           	opt stack 0
  1615  000858                     _i2c_master_recv:
  1616                           	opt stack 19
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;incstack = 0
  1620                           ;i2c_master_recv@length stored from wreg
  1621  000858  0100               	movlb	0	; () banked
  1622  00085A  6FC7               	movwf	i2c_master_recv@length& (0+255),b
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;my_i2c.c: 87: if(length <= 0) return -2;
  1626  00085C  0100               	movlb	0	; () banked
  1627  00085E  67C7               	tstfsz	i2c_master_recv@length& (0+255),b
  1628  000860  D001               	goto	l2988
  1629  000862  0012               	return	
  1630  000864                     l2988:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;my_i2c.c: 88: if(ic_ptr->status != 0x4) return -1;
  1634  000864  0100               	movlb	0	; () banked
  1635  000866  EE20 F00D          	lfsr	2,13
  1636  00086A  0100               	movlb	0	; () banked
  1637  00086C  51CC               	movf	_ic_ptr& (0+255),w,b
  1638  00086E  26D9               	addwf	fsr2l,f,c
  1639  000870  0100               	movlb	0	; () banked
  1640  000872  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1641  000874  22DA               	addwfc	fsr2h,f,c
  1642  000876  50DF               	movf	indf2,w,c
  1643  000878  0A04               	xorlw	4
  1644  00087A  A4D8               	btfss	status,2,c
  1645  00087C  0012               	return	
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;my_i2c.c: 90: ic_ptr->slave_addr = (slave_addr << 1) | 0x01;
  1649                           
  1650                           ; BSR set to: 0
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;	Return value of _i2c_master_recv is never used
  1654  00087E  0100               	movlb	0	; () banked
  1655  000880  EE20 F01C          	lfsr	2,28
  1656  000884  0100               	movlb	0	; () banked
  1657  000886  51CC               	movf	_ic_ptr& (0+255),w,b
  1658  000888  26D9               	addwf	fsr2l,f,c
  1659  00088A  0100               	movlb	0	; () banked
  1660  00088C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1661  00088E  22DA               	addwfc	fsr2h,f,c
  1662  000890  80D8               	bsf	status,0,c
  1663  000892  0100               	movlb	0	; () banked
  1664  000894  35C6               	rlcf	i2c_master_recv@slave_addr& (0+255),w,b
  1665  000896  6EDF               	movwf	indf2,c
  1666                           
  1667                           ;my_i2c.c: 91: ic_ptr->buflen = length;
  1668  000898  0100               	movlb	0	; () banked
  1669  00089A  EE20 F00A          	lfsr	2,10
  1670  00089E  0100               	movlb	0	; () banked
  1671  0008A0  51CC               	movf	_ic_ptr& (0+255),w,b
  1672  0008A2  26D9               	addwf	fsr2l,f,c
  1673  0008A4  0100               	movlb	0	; () banked
  1674  0008A6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1675  0008A8  22DA               	addwfc	fsr2h,f,c
  1676  0008AA  0100               	movlb	0	; () banked
  1677  0008AC  C0C7  FFDF         	movff	i2c_master_recv@length,indf2
  1678                           
  1679                           ;my_i2c.c: 92: ic_ptr->bufind = 0xFF;
  1680  0008B0  0100               	movlb	0	; () banked
  1681  0008B2  EE20 F00B          	lfsr	2,11
  1682  0008B6  0100               	movlb	0	; () banked
  1683  0008B8  51CC               	movf	_ic_ptr& (0+255),w,b
  1684  0008BA  26D9               	addwf	fsr2l,f,c
  1685  0008BC  0100               	movlb	0	; () banked
  1686  0008BE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1687  0008C0  22DA               	addwfc	fsr2h,f,c
  1688  0008C2  0EFF               	movlw	255
  1689  0008C4  6EDF               	movwf	indf2,c
  1690                           
  1691                           ;my_i2c.c: 93: ic_ptr->msg_trans_type = 0x1;
  1692  0008C6  0100               	movlb	0	; () banked
  1693  0008C8  EE20 F01D          	lfsr	2,29
  1694  0008CC  0100               	movlb	0	; () banked
  1695  0008CE  51CC               	movf	_ic_ptr& (0+255),w,b
  1696  0008D0  26D9               	addwf	fsr2l,f,c
  1697  0008D2  0100               	movlb	0	; () banked
  1698  0008D4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1699  0008D6  22DA               	addwfc	fsr2h,f,c
  1700  0008D8  0E01               	movlw	1
  1701  0008DA  6EDF               	movwf	indf2,c
  1702                           
  1703                           ;my_i2c.c: 94: ic_ptr->status = 0x1;
  1704  0008DC  0100               	movlb	0	; () banked
  1705  0008DE  EE20 F00D          	lfsr	2,13
  1706  0008E2  0100               	movlb	0	; () banked
  1707  0008E4  51CC               	movf	_ic_ptr& (0+255),w,b
  1708  0008E6  26D9               	addwf	fsr2l,f,c
  1709  0008E8  0100               	movlb	0	; () banked
  1710  0008EA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1711  0008EC  22DA               	addwfc	fsr2h,f,c
  1712  0008EE  0E01               	movlw	1
  1713  0008F0  6EDF               	movwf	indf2,c
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;my_i2c.c: 95: SSP1CON2bits.SEN = 1;
  1717  0008F2  80C5               	bsf	4037,0,c	;volatile
  1718  0008F4  0012               	return	
  1719  0008F6                     __end_of_i2c_master_recv:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           prodh	equ	0xFF4
  1726                           prodl	equ	0xFF3
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           indf1	equ	0xFE7
  1730                           fsr1h	equ	0xFE2
  1731                           fsr1l	equ	0xFE1
  1732                           indf2	equ	0xFDF
  1733                           postinc2	equ	0xFDE
  1734                           postdec2	equ	0xFDD
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _i2c_configure_master *****************
  1740 ;; Defined at:
  1741 ;;		line 15 in file "../src/my_i2c.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;		None               void
  1748 ;; Registers used:
  1749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used:    1
  1761 ;; Hardware stack levels required when called:   10
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text9
  1770  000DFA                     __ptext9:
  1771                           	opt stack 0
  1772  000DFA                     _i2c_configure_master:
  1773                           	opt stack 19
  1774                           
  1775                           ;my_i2c.c: 17: ic_ptr->status = 0x4;
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;incstack = 0
  1779  000DFA  0100               	movlb	0	; () banked
  1780  000DFC  EE20 F00D          	lfsr	2,13
  1781  000E00  0100               	movlb	0	; () banked
  1782  000E02  51CC               	movf	_ic_ptr& (0+255),w,b
  1783  000E04  26D9               	addwf	fsr2l,f,c
  1784  000E06  0100               	movlb	0	; () banked
  1785  000E08  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1786  000E0A  22DA               	addwfc	fsr2h,f,c
  1787  000E0C  0E04               	movlw	4
  1788  000E0E  6EDF               	movwf	indf2,c
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;my_i2c.c: 18: LATBbits.LATB4 = 0;
  1792  000E10  988A               	bcf	3978,4,c	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;my_i2c.c: 19: LATBbits.LATB5 = 0;
  1796  000E12  9A8A               	bcf	3978,5,c	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;my_i2c.c: 21: TRISBbits.TRISB5 = 1;
  1800  000E14  8A93               	bsf	3987,5,c	;volatile
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;my_i2c.c: 22: TRISBbits.TRISB4 = 1;
  1804  000E16  8893               	bsf	3987,4,c	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;my_i2c.c: 24: TRISBbits.TRISB0 = 0;
  1808  000E18  9093               	bcf	3987,0,c	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;my_i2c.c: 25: LATBbits.LATB0 = 0;
  1812  000E1A  908A               	bcf	3978,0,c	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;my_i2c.c: 28: SSPCON1 = 0;
  1816  000E1C  0E00               	movlw	0
  1817  000E1E  6EC6               	movwf	4038,c	;volatile
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;my_i2c.c: 29: SSPSTAT = 0;
  1821  000E20  0E00               	movlw	0
  1822  000E22  6EC7               	movwf	4039,c	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;my_i2c.c: 30: SSPADD = 0;
  1826  000E24  0E00               	movlw	0
  1827  000E26  6EC8               	movwf	4040,c	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;my_i2c.c: 32: SSPCON1 |= 0b00001000;
  1831  000E28  86C6               	bsf	4038,3,c	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;my_i2c.c: 33: SSPSTAT |= 0b10000000;
  1835  000E2A  8EC7               	bsf	4039,7,c	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;my_i2c.c: 34: SSPADD |= 0x77;
  1839  000E2C  0E77               	movlw	119
  1840  000E2E  12C8               	iorwf	4040,f,c	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;my_i2c.c: 36: SSPCON1bits.SSPEN = 1;
  1844  000E30  8AC6               	bsf	4038,5,c	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847  000E32  0012               	return	
  1848  000E34                     __end_of_i2c_configure_master:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodh	equ	0xFF4
  1855                           prodl	equ	0xFF3
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           indf1	equ	0xFE7
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _get_buffer *****************
  1869 ;; Defined at:
  1870 ;;		line 174 in file "../src/my_i2c.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  ret_buf        10    0[BANK1 ] unsigned char [10]
  1875 ;;  i               2   10[BANK1 ] int 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   48[BANK0 ] PTR unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;Total ram usage:       17 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   10
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text10
  1900  00098A                     __ptext10:
  1901                           	opt stack 0
  1902  00098A                     _get_buffer:
  1903                           	opt stack 19
  1904                           
  1905                           ;my_i2c.c: 175: unsigned char ret_buf[10];
  1906                           ;my_i2c.c: 176: int i;
  1907                           ;my_i2c.c: 177: for(i = 0; i < ic_ptr->buflen; i++){
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;incstack = 0
  1911  00098A  0E00               	movlw	0
  1912  00098C  0101               	movlb	1	; () banked
  1913  00098E  6FAD               	movwf	(get_buffer@i+1)& (0+255),b
  1914  000990  0E00               	movlw	0
  1915  000992  0101               	movlb	1	; () banked
  1916  000994  6FAC               	movwf	get_buffer@i& (0+255),b
  1917  000996  D019               	goto	l3004
  1918  000998                     l3000:
  1919                           
  1920                           ;my_i2c.c: 178: ret_buf[i] = ic_ptr->buffer[i];
  1921  000998  0101               	movlb	1	; () banked
  1922  00099A  51AC               	movf	get_buffer@i& (0+255),w,b
  1923  00099C  0100               	movlb	0	; () banked
  1924  00099E  25CC               	addwf	_ic_ptr& (0+255),w,b
  1925  0009A0  6ED9               	movwf	fsr2l,c
  1926  0009A2  0101               	movlb	1	; () banked
  1927  0009A4  51AD               	movf	(get_buffer@i+1)& (0+255),w,b
  1928  0009A6  0100               	movlb	0	; () banked
  1929  0009A8  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1930  0009AA  6EDA               	movwf	fsr2h,c
  1931  0009AC  0101               	movlb	1	; () banked
  1932  0009AE  0EA2               	movlw	low get_buffer@ret_buf
  1933  0009B0  0101               	movlb	1	; () banked
  1934  0009B2  25AC               	addwf	get_buffer@i& (0+255),w,b
  1935  0009B4  6EE1               	movwf	fsr1l,c
  1936  0009B6  0101               	movlb	1	; () banked
  1937  0009B8  0E01               	movlw	high get_buffer@ret_buf
  1938  0009BA  0101               	movlb	1	; () banked
  1939  0009BC  21AD               	addwfc	(get_buffer@i+1)& (0+255),w,b
  1940  0009BE  6EE2               	movwf	fsr1h,c
  1941  0009C0  CFDF FFE7          	movff	indf2,indf1
  1942                           
  1943                           ; BSR set to: 1
  1944  0009C4  0101               	movlb	1	; () banked
  1945  0009C6  4BAC               	infsnz	get_buffer@i& (0+255),f,b
  1946  0009C8  2BAD               	incf	(get_buffer@i+1)& (0+255),f,b
  1947  0009CA                     l3004:
  1948                           
  1949                           ; BSR set to: 1
  1950  0009CA  0100               	movlb	0	; () banked
  1951  0009CC  EE20 F00A          	lfsr	2,10
  1952  0009D0  0100               	movlb	0	; () banked
  1953  0009D2  51CC               	movf	_ic_ptr& (0+255),w,b
  1954  0009D4  26D9               	addwf	fsr2l,f,c
  1955  0009D6  0100               	movlb	0	; () banked
  1956  0009D8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  1957  0009DA  22DA               	addwfc	fsr2h,f,c
  1958  0009DC  50DF               	movf	indf2,w,c
  1959  0009DE  0100               	movlb	0	; () banked
  1960  0009E0  6FC8               	movwf	??_get_buffer& (0+255),b
  1961  0009E2  6BC9               	clrf	(??_get_buffer+1)& (0+255),b
  1962  0009E4  0101               	movlb	1	; () banked
  1963  0009E6  51AD               	movf	(get_buffer@i+1)& (0+255),w,b
  1964  0009E8  0A80               	xorlw	128
  1965  0009EA  0100               	movlb	0	; () banked
  1966  0009EC  6FCA               	movwf	(??_get_buffer+2)& (0+255),b
  1967  0009EE  51C8               	movf	??_get_buffer& (0+255),w,b
  1968  0009F0  0101               	movlb	1	; () banked
  1969  0009F2  5DAC               	subwf	get_buffer@i& (0+255),w,b
  1970  0009F4  0100               	movlb	0	; () banked
  1971  0009F6  51C9               	movf	(??_get_buffer+1)& (0+255),w,b
  1972  0009F8  0A80               	xorlw	128
  1973  0009FA  0100               	movlb	0	; () banked
  1974  0009FC  59CA               	subwfb	(??_get_buffer+2)& (0+255),w,b
  1975  0009FE  A0D8               	btfss	status,0,c
  1976  000A00  D7CB               	goto	l3000
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;my_i2c.c: 179: }
  1980                           ;my_i2c.c: 180: return &ret_buf;
  1981                           
  1982                           ; BSR set to: 0
  1983  000A02  0101               	movlb	1	; () banked
  1984  000A04  0E01               	movlw	high get_buffer@ret_buf
  1985  000A06  0100               	movlb	0	; () banked
  1986  000A08  6FC7               	movwf	(?_get_buffer+1)& (0+255),b
  1987  000A0A  0101               	movlb	1	; () banked
  1988  000A0C  0EA2               	movlw	low get_buffer@ret_buf
  1989  000A0E  0100               	movlb	0	; () banked
  1990  000A10  6FC6               	movwf	?_get_buffer& (0+255),b
  1991  000A12  0012               	return	
  1992  000A14                     __end_of_get_buffer:
  1993                           	opt stack 0
  1994                           tblptru	equ	0xFF8
  1995                           tblptrh	equ	0xFF7
  1996                           tblptrl	equ	0xFF6
  1997                           tablat	equ	0xFF5
  1998                           prodh	equ	0xFF4
  1999                           prodl	equ	0xFF3
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           indf1	equ	0xFE7
  2003                           fsr1h	equ	0xFE2
  2004                           fsr1l	equ	0xFE1
  2005                           indf2	equ	0xFDF
  2006                           postinc2	equ	0xFDE
  2007                           postdec2	equ	0xFDD
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _enable_interrupts *****************
  2013 ;; Defined at:
  2014 ;;		line 14 in file "../src/interrupts.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		None
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:   10
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text11
  2043  000FC2                     __ptext11:
  2044                           	opt stack 0
  2045  000FC2                     _enable_interrupts:
  2046                           	opt stack 19
  2047                           
  2048                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;incstack = 0
  2052  000FC2  8ED0               	bsf	4048,7,c	;volatile
  2053                           
  2054                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2055  000FC4  8EF2               	bsf	intcon,7,c	;volatile
  2056                           
  2057                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2058  000FC6  8CF2               	bsf	intcon,6,c	;volatile
  2059  000FC8  0012               	return	
  2060  000FCA                     __end_of_enable_interrupts:
  2061                           	opt stack 0
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           prodh	equ	0xFF4
  2067                           prodl	equ	0xFF3
  2068                           intcon	equ	0xFF2
  2069                           postinc0	equ	0xFEE
  2070                           wreg	equ	0xFE8
  2071                           indf1	equ	0xFE7
  2072                           fsr1h	equ	0xFE2
  2073                           fsr1l	equ	0xFE1
  2074                           indf2	equ	0xFDF
  2075                           postinc2	equ	0xFDE
  2076                           postdec2	equ	0xFDD
  2077                           fsr2h	equ	0xFDA
  2078                           fsr2l	equ	0xFD9
  2079                           status	equ	0xFD8
  2080                           
  2081 ;; *************** function _Open1USART *****************
  2082 ;; Defined at:
  2083 ;;		line 124 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1open.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  config          1    wreg     unsigned char 
  2086 ;;  spbrg           2   48[BANK0 ] unsigned int 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  config          1   53[BANK0 ] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;		None               void
  2091 ;; Registers used:
  2092 ;;		wreg, status,2
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;Total ram usage:        6 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:   10
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text12
  2113  000A92                     __ptext12:
  2114                           	opt stack 0
  2115  000A92                     _Open1USART:
  2116                           	opt stack 19
  2117                           
  2118                           ;incstack = 0
  2119                           ;Open1USART@config stored from wreg
  2120  000A92  0100               	movlb	0	; () banked
  2121  000A94  6FCB               	movwf	Open1USART@config& (0+255),b
  2122                           
  2123                           ; BSR set to: 0
  2124  000A96  0E00               	movlw	0
  2125  000A98  6EAD               	movwf	4013,c	;volatile
  2126  000A9A  0E00               	movlw	0
  2127  000A9C  6EAC               	movwf	4012,c	;volatile
  2128                           
  2129                           ; BSR set to: 0
  2130  000A9E  0100               	movlb	0	; () banked
  2131  000AA0  B1CB               	btfsc	Open1USART@config& (0+255),0,b
  2132                           
  2133                           ; BSR set to: 0
  2134  000AA2  88AD               	bsf	4013,4,c	;volatile
  2135                           
  2136                           ; BSR set to: 0
  2137                           
  2138                           ; BSR set to: 0
  2139  000AA4  0100               	movlb	0	; () banked
  2140  000AA6  A3CB               	btfss	Open1USART@config& (0+255),1,b
  2141  000AA8  D002               	goto	l2926
  2142                           
  2143                           ; BSR set to: 0
  2144  000AAA  8CAD               	bsf	4013,6,c	;volatile
  2145  000AAC  8CAC               	bsf	4012,6,c	;volatile
  2146  000AAE                     l2926:
  2147                           
  2148                           ; BSR set to: 0
  2149  000AAE  0100               	movlb	0	; () banked
  2150  000AB0  B5CB               	btfsc	Open1USART@config& (0+255),2,b
  2151                           
  2152                           ; BSR set to: 0
  2153  000AB2  8EAD               	bsf	4013,7,c	;volatile
  2154                           
  2155                           ; BSR set to: 0
  2156                           
  2157                           ; BSR set to: 0
  2158  000AB4  0100               	movlb	0	; () banked
  2159  000AB6  A7CB               	btfss	Open1USART@config& (0+255),3,b
  2160  000AB8  D002               	goto	l436
  2161                           
  2162                           ; BSR set to: 0
  2163  000ABA  88AC               	bsf	4012,4,c	;volatile
  2164  000ABC  D001               	goto	l2934
  2165  000ABE                     l436:
  2166                           
  2167                           ; BSR set to: 0
  2168  000ABE  8AAC               	bsf	4012,5,c	;volatile
  2169  000AC0                     l2934:
  2170                           
  2171                           ; BSR set to: 0
  2172  000AC0  0100               	movlb	0	; () banked
  2173  000AC2  B9CB               	btfsc	Open1USART@config& (0+255),4,b
  2174                           
  2175                           ; BSR set to: 0
  2176  000AC4  84AD               	bsf	4013,2,c	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179                           
  2180                           ; BSR set to: 0
  2181  000AC6  0100               	movlb	0	; () banked
  2182  000AC8  BBCB               	btfsc	Open1USART@config& (0+255),5,b
  2183                           
  2184                           ; BSR set to: 0
  2185  000ACA  86AC               	bsf	4012,3,c	;volatile
  2186                           
  2187                           ; BSR set to: 0
  2188                           
  2189                           ; BSR set to: 0
  2190  000ACC  0100               	movlb	0	; () banked
  2191  000ACE  ADCB               	btfss	Open1USART@config& (0+255),6,b
  2192  000AD0  D002               	goto	l440
  2193                           
  2194                           ; BSR set to: 0
  2195  000AD2  8A9D               	bsf	3997,5,c	;volatile
  2196  000AD4  D001               	goto	l2946
  2197  000AD6                     l440:
  2198                           
  2199                           ; BSR set to: 0
  2200  000AD6  9A9D               	bcf	3997,5,c	;volatile
  2201  000AD8                     l2946:
  2202                           
  2203                           ; BSR set to: 0
  2204  000AD8  0100               	movlb	0	; () banked
  2205  000ADA  AFCB               	btfss	Open1USART@config& (0+255),7,b
  2206  000ADC  D002               	goto	l442
  2207                           
  2208                           ; BSR set to: 0
  2209  000ADE  889D               	bsf	3997,4,c	;volatile
  2210  000AE0  D001               	goto	l443
  2211  000AE2                     l442:
  2212                           
  2213                           ; BSR set to: 0
  2214  000AE2  989D               	bcf	3997,4,c	;volatile
  2215  000AE4                     l443:
  2216                           
  2217                           ; BSR set to: 0
  2218  000AE4  C0C6  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221  000AE8  0100               	movlb	0	; () banked
  2222  000AEA  C0C7  F0C8         	movff	Open1USART@spbrg+1,??_Open1USART
  2223  000AEE  C0C8  F0C9         	movff	??_Open1USART,??_Open1USART+1
  2224  000AF2  0100               	movlb	0	; () banked
  2225  000AF4  6BCA               	clrf	(??_Open1USART+2)& (0+255),b
  2226  000AF6  0100               	movlb	0	; () banked
  2227  000AF8  51C9               	movf	(??_Open1USART+1)& (0+255),w,b
  2228  000AFA  6E7F               	movwf	3967,c	;volatile
  2229                           
  2230                           ; BSR set to: 0
  2231  000AFC  8AAD               	bsf	4013,5,c	;volatile
  2232                           
  2233                           ; BSR set to: 0
  2234  000AFE  8EAC               	bsf	4012,7,c	;volatile
  2235                           
  2236                           ; BSR set to: 0
  2237  000B00  0012               	return	
  2238  000B02                     __end_of_Open1USART:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           intcon	equ	0xFF2
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           indf1	equ	0xFE7
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _InterruptHandlerLow *****************
  2260 ;; Defined at:
  2261 ;;		line 121 in file "../src/interrupts.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;Total ram usage:       17 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    9
  2282 ;; This function calls:
  2283 ;;		_timer1_int_handler
  2284 ;;		_uart_recv_int_handler
  2285 ;; This function is called by:
  2286 ;;		Interrupt level 1
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	intcodelo
  2291  000018                     __pintcodelo:
  2292                           	opt stack 0
  2293  000018                     _InterruptHandlerLow:
  2294                           	opt stack 18
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;incstack = 0
  2298  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  2299  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  2300  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  2301  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  2302  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  2303  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  2304  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  2305  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  2306  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  2307  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  2308  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  2309  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  2310  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  2311  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  2312  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  2313  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  2314  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  2315                           
  2316                           ;interrupts.c: 123: if (PIR1bits.TMR1IF) {
  2317  00005C  A09E               	btfss	3998,0,c	;volatile
  2318  00005E  D003               	goto	i1l3048
  2319                           
  2320                           ;interrupts.c: 124: PIR1bits.TMR1IF = 0;
  2321  000060  909E               	bcf	3998,0,c	;volatile
  2322                           
  2323                           ;interrupts.c: 125: timer1_int_handler();
  2324  000062  EC62  F007         	call	_timer1_int_handler	;wreg free
  2325  000066                     i1l3048:
  2326                           
  2327                           ;interrupts.c: 126: }
  2328                           ;interrupts.c: 129: if (PIR1bits.RCIF) {
  2329  000066  AA9E               	btfss	3998,5,c	;volatile
  2330  000068  D003               	goto	i1l47
  2331                           
  2332                           ;interrupts.c: 130: PIR1bits.RCIF = 0;
  2333  00006A  9A9E               	bcf	3998,5,c	;volatile
  2334                           
  2335                           ;interrupts.c: 131: uart_recv_int_handler();
  2336  00006C  EC7B  F004         	call	_uart_recv_int_handler	;wreg free
  2337  000070                     i1l47:
  2338  000070  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  2339  000074  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  2340  000078  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  2341  00007C  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  2342  000080  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  2343  000084  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  2344  000088  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  2345  00008C  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  2346  000090  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  2347  000094  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  2348  000098  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  2349  00009C  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  2350  0000A0  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  2351  0000A4  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  2352  0000A8  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  2353  0000AC  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  2354  0000B0  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  2355  0000B4  0010               	retfie	
  2356  0000B6                     __end_of_InterruptHandlerLow:
  2357                           	opt stack 0
  2358                           pclatu	equ	0xFFB
  2359                           pclath	equ	0xFFA
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           prodh	equ	0xFF4
  2365                           prodl	equ	0xFF3
  2366                           intcon	equ	0xFF2
  2367                           postinc0	equ	0xFEE
  2368                           fsr0h	equ	0xFEA
  2369                           fsr0l	equ	0xFE9
  2370                           wreg	equ	0xFE8
  2371                           indf1	equ	0xFE7
  2372                           fsr1h	equ	0xFE2
  2373                           fsr1l	equ	0xFE1
  2374                           bsr	equ	0xFE0
  2375                           indf2	equ	0xFDF
  2376                           postinc2	equ	0xFDE
  2377                           postdec2	equ	0xFDD
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _uart_recv_int_handler *****************
  2383 ;; Defined at:
  2384 ;;		line 11 in file "../src/my_uart.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;		None               void
  2391 ;; Registers used:
  2392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;Total ram usage:        1 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    8
  2405 ;; This function calls:
  2406 ;;		_Read1USART
  2407 ;;		_ToMainLow_sendmsg
  2408 ;; This function is called by:
  2409 ;;		_InterruptHandlerLow
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text14
  2414  0008F6                     __ptext14:
  2415                           	opt stack 0
  2416  0008F6                     _uart_recv_int_handler:
  2417                           	opt stack 18
  2418                           
  2419                           ;my_uart.c: 17: if ((PIR1bits.RC1IF)) {
  2420                           
  2421                           ;incstack = 0
  2422  0008F6  AA9E               	btfss	3998,5,c	;volatile
  2423  0008F8  D03A               	goto	i1l2856
  2424                           
  2425                           ;my_uart.c: 18: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  2426  0008FA  EE20 F004          	lfsr	2,4
  2427  0008FE  502F               	movf	_uc_ptr,w,c
  2428  000900  26D9               	addwf	fsr2l,f,c
  2429  000902  5030               	movf	_uc_ptr+1,w,c
  2430  000904  22DA               	addwfc	fsr2h,f,c
  2431  000906  50DF               	movf	indf2,w,c
  2432  000908  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  2433  00090A  501B               	movf	??_uart_recv_int_handler,w,c
  2434  00090C  0D01               	mullw	1
  2435  00090E  50F3               	movf	prodl,w,c
  2436  000910  242F               	addwf	_uc_ptr,w,c
  2437  000912  6ED9               	movwf	fsr2l,c
  2438  000914  50F4               	movf	prodh,w,c
  2439  000916  2030               	addwfc	_uc_ptr+1,w,c
  2440  000918  6EDA               	movwf	fsr2h,c
  2441  00091A  EC99  F007         	call	_Read1USART	;wreg free
  2442  00091E  6EDF               	movwf	indf2,c
  2443                           
  2444                           ;my_uart.c: 25: uc_ptr->buflen++;
  2445  000920  EE20 F004          	lfsr	2,4
  2446  000924  502F               	movf	_uc_ptr,w,c
  2447  000926  26D9               	addwf	fsr2l,f,c
  2448  000928  5030               	movf	_uc_ptr+1,w,c
  2449  00092A  22DA               	addwfc	fsr2h,f,c
  2450  00092C  2ADF               	incf	indf2,f,c
  2451                           
  2452                           ;my_uart.c: 27: if (uc_ptr->buflen == 4) {
  2453  00092E  EE20 F004          	lfsr	2,4
  2454  000932  502F               	movf	_uc_ptr,w,c
  2455  000934  26D9               	addwf	fsr2l,f,c
  2456  000936  5030               	movf	_uc_ptr+1,w,c
  2457  000938  22DA               	addwfc	fsr2h,f,c
  2458  00093A  0E04               	movlw	4
  2459  00093C  62DF               	cpfseq	indf2,c
  2460  00093E  D017               	goto	i1l2856
  2461                           
  2462                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  2463  000940  0E1F               	movlw	31
  2464  000942  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2465  000944  C030  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  2466  000948  C02F  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  2467  00094C  EE20 F004          	lfsr	2,4
  2468  000950  502F               	movf	_uc_ptr,w,c
  2469  000952  26D9               	addwf	fsr2l,f,c
  2470  000954  5030               	movf	_uc_ptr+1,w,c
  2471  000956  22DA               	addwfc	fsr2h,f,c
  2472  000958  50DF               	movf	indf2,w,c
  2473  00095A  EC78  F007         	call	_ToMainLow_sendmsg
  2474                           
  2475                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  2476  00095E  EE20 F004          	lfsr	2,4
  2477  000962  502F               	movf	_uc_ptr,w,c
  2478  000964  26D9               	addwf	fsr2l,f,c
  2479  000966  5030               	movf	_uc_ptr+1,w,c
  2480  000968  22DA               	addwfc	fsr2h,f,c
  2481  00096A  0E00               	movlw	0
  2482  00096C  6EDF               	movwf	indf2,c
  2483  00096E                     i1l2856:
  2484                           
  2485                           ;my_uart.c: 30: }
  2486                           ;my_uart.c: 31: }
  2487                           ;my_uart.c: 36: if (USART1_Status.OVERRUN_ERROR == 1) {
  2488  00096E  A632               	btfss	_USART1_Status,3,c
  2489  000970  0012               	return	
  2490                           
  2491                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  2492  000972  98AC               	bcf	4012,4,c	;volatile
  2493                           
  2494                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  2495  000974  88AC               	bsf	4012,4,c	;volatile
  2496                           
  2497                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  2498  000976  0E1E               	movlw	30
  2499  000978  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2500  00097A  0E00               	movlw	0
  2501  00097C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  2502  00097E  0E00               	movlw	0
  2503  000980  6E18               	movwf	ToMainLow_sendmsg@data,c
  2504  000982  0E00               	movlw	0
  2505  000984  EC78  F007         	call	_ToMainLow_sendmsg
  2506  000988  0012               	return	
  2507  00098A                     __end_of_uart_recv_int_handler:
  2508                           	opt stack 0
  2509                           pclatu	equ	0xFFB
  2510                           pclath	equ	0xFFA
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           fsr0h	equ	0xFEA
  2520                           fsr0l	equ	0xFE9
  2521                           wreg	equ	0xFE8
  2522                           indf1	equ	0xFE7
  2523                           fsr1h	equ	0xFE2
  2524                           fsr1l	equ	0xFE1
  2525                           bsr	equ	0xFE0
  2526                           indf2	equ	0xFDF
  2527                           postinc2	equ	0xFDE
  2528                           postdec2	equ	0xFDD
  2529                           fsr2h	equ	0xFDA
  2530                           fsr2l	equ	0xFD9
  2531                           status	equ	0xFD8
  2532                           
  2533 ;; *************** function _Read1USART *****************
  2534 ;; Defined at:
  2535 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1read.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  data            1    0[COMRAM] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;Total ram usage:        1 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    5
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_uart_recv_int_handler
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text15
  2564  000F32                     __ptext15:
  2565                           	opt stack 0
  2566  000F32                     _Read1USART:
  2567                           	opt stack 20
  2568                           
  2569                           ;incstack = 0
  2570  000F32  0EF2               	movlw	242
  2571  000F34  1632               	andwf	_USART1_Status,f,c
  2572  000F36  ACAC               	btfss	4012,6,c	;volatile
  2573  000F38  D003               	goto	i1l453
  2574  000F3A  9032               	bcf	_USART1_Status,0,c
  2575  000F3C  B0AC               	btfsc	4012,0,c	;volatile
  2576  000F3E  8032               	bsf	_USART1_Status,0,c
  2577  000F40                     i1l453:
  2578  000F40  B4AC               	btfsc	4012,2,c	;volatile
  2579  000F42  8432               	bsf	_USART1_Status,2,c
  2580  000F44  B2AC               	btfsc	4012,1,c	;volatile
  2581  000F46  8632               	bsf	_USART1_Status,3,c
  2582  000F48  CFAF F001          	movff	4015,Read1USART@data	;volatile
  2583  000F4C  5001               	movf	Read1USART@data,w,c
  2584  000F4E  0012               	return	
  2585  000F50                     __end_of_Read1USART:
  2586                           	opt stack 0
  2587                           pclatu	equ	0xFFB
  2588                           pclath	equ	0xFFA
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           intcon	equ	0xFF2
  2596                           postinc0	equ	0xFEE
  2597                           fsr0h	equ	0xFEA
  2598                           fsr0l	equ	0xFE9
  2599                           wreg	equ	0xFE8
  2600                           indf1	equ	0xFE7
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           bsr	equ	0xFE0
  2604                           indf2	equ	0xFDF
  2605                           postinc2	equ	0xFDE
  2606                           postdec2	equ	0xFDD
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _timer1_int_handler *****************
  2612 ;; Defined at:
  2613 ;;		line 36 in file "../src/user_interrupts.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  result          2   26[COMRAM] unsigned int 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    8
  2634 ;; This function calls:
  2635 ;;		_ReadTimer1
  2636 ;;		_ToMainLow_sendmsg
  2637 ;;		_WriteTimer1
  2638 ;; This function is called by:
  2639 ;;		_InterruptHandlerLow
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text16
  2644  000EC4                     __ptext16:
  2645                           	opt stack 0
  2646  000EC4                     _timer1_int_handler:
  2647                           	opt stack 18
  2648                           
  2649                           ;user_interrupts.c: 37: unsigned int result;
  2650                           ;user_interrupts.c: 44: result = ReadTimer1();
  2651                           
  2652                           ;incstack = 0
  2653  000EC4  ECC7  F007         	call	_ReadTimer1	;wreg free
  2654  000EC8  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  2655  000ECC  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  2656                           
  2657                           ;user_interrupts.c: 45: ToMainLow_sendmsg(0, 11, (void *) 0);
  2658  000ED0  0E0B               	movlw	11
  2659  000ED2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  2660  000ED4  0E00               	movlw	0
  2661  000ED6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  2662  000ED8  0E00               	movlw	0
  2663  000EDA  6E18               	movwf	ToMainLow_sendmsg@data,c
  2664  000EDC  0E00               	movlw	0
  2665  000EDE  EC78  F007         	call	_ToMainLow_sendmsg
  2666                           
  2667                           ;user_interrupts.c: 48: WriteTimer1(0);
  2668  000EE2  0E00               	movlw	0
  2669  000EE4  6E02               	movwf	WriteTimer1@timer1+1,c
  2670  000EE6  0E00               	movlw	0
  2671  000EE8  6E01               	movwf	WriteTimer1@timer1,c
  2672  000EEA  ECBE  F007         	call	_WriteTimer1	;wreg free
  2673  000EEE  0012               	return	
  2674  000EF0                     __end_of_timer1_int_handler:
  2675                           	opt stack 0
  2676                           pclatu	equ	0xFFB
  2677                           pclath	equ	0xFFA
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           fsr0h	equ	0xFEA
  2687                           fsr0l	equ	0xFE9
  2688                           wreg	equ	0xFE8
  2689                           indf1	equ	0xFE7
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           bsr	equ	0xFE0
  2693                           indf2	equ	0xFDF
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           
  2700 ;; *************** function _WriteTimer1 *****************
  2701 ;; Defined at:
  2702 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  timer1          2    0[COMRAM] unsigned int 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  timer           2    2[COMRAM] struct Timers
  2707 ;; Return value:  Size  Location     Type
  2708 ;;		None               void
  2709 ;; Registers used:
  2710 ;;		None
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;Total ram usage:        4 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    5
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_timer1_int_handler
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text17
  2731  000F7C                     __ptext17:
  2732                           	opt stack 0
  2733  000F7C                     _WriteTimer1:
  2734                           	opt stack 20
  2735                           
  2736                           ;incstack = 0
  2737  000F7C  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2738  000F80  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2739  000F84  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2740  000F88  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2741  000F8C  0012               	return	
  2742  000F8E                     __end_of_WriteTimer1:
  2743                           	opt stack 0
  2744                           pclatu	equ	0xFFB
  2745                           pclath	equ	0xFFA
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           intcon	equ	0xFF2
  2753                           postinc0	equ	0xFEE
  2754                           fsr0h	equ	0xFEA
  2755                           fsr0l	equ	0xFE9
  2756                           wreg	equ	0xFE8
  2757                           indf1	equ	0xFE7
  2758                           fsr1h	equ	0xFE2
  2759                           fsr1l	equ	0xFE1
  2760                           bsr	equ	0xFE0
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _ToMainLow_sendmsg *****************
  2769 ;; Defined at:
  2770 ;;		line 103 in file "../src/messages.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  length          1    wreg     unsigned char 
  2773 ;;  msgtype         1   22[COMRAM] unsigned char 
  2774 ;;  data            2   23[COMRAM] PTR void 
  2775 ;;		 -> NULL(0), main@uc(5), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  length          1   25[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      char 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2787 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;Total ram usage:        4 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    7
  2794 ;; This function calls:
  2795 ;;		_send_msg
  2796 ;; This function is called by:
  2797 ;;		_uart_recv_int_handler
  2798 ;;		_timer1_int_handler
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text18
  2803  000EF0                     __ptext18:
  2804                           	opt stack 0
  2805  000EF0                     _ToMainLow_sendmsg:
  2806                           	opt stack 18
  2807                           
  2808                           ;incstack = 0
  2809                           ;ToMainLow_sendmsg@length stored from wreg
  2810  000EF0  6E1A               	movwf	ToMainLow_sendmsg@length,c
  2811                           
  2812                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2813                           ;	Return value of _ToMainLow_sendmsg is never used
  2814  000EF2  0100               	movlb	0	; () banked
  2815  000EF4  0E00               	movlw	high _ToMainLow_MQ
  2816  000EF6  6E0C               	movwf	send_msg@qptr+1,c
  2817  000EF8  0100               	movlb	0	; () banked
  2818  000EFA  0E60               	movlw	low _ToMainLow_MQ
  2819  000EFC  6E0B               	movwf	send_msg@qptr,c
  2820  000EFE  C01A  F00D         	movff	ToMainLow_sendmsg@length,send_msg@length
  2821  000F02  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2822  000F06  C019  F010         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2823  000F0A  C018  F00F         	movff	ToMainLow_sendmsg@data,send_msg@data
  2824  000F0E  ECD7  F003         	call	_send_msg	;wreg free
  2825  000F12  0012               	return	
  2826  000F14                     __end_of_ToMainLow_sendmsg:
  2827                           	opt stack 0
  2828                           pclatu	equ	0xFFB
  2829                           pclath	equ	0xFFA
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           intcon	equ	0xFF2
  2837                           postinc0	equ	0xFEE
  2838                           fsr0h	equ	0xFEA
  2839                           fsr0l	equ	0xFE9
  2840                           wreg	equ	0xFE8
  2841                           indf1	equ	0xFE7
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           bsr	equ	0xFE0
  2845                           indf2	equ	0xFDF
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _send_msg *****************
  2853 ;; Defined at:
  2854 ;;		line 24 in file "../src/messages.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  2857 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2858 ;;  length          1   12[COMRAM] unsigned char 
  2859 ;;  msgtype         1   13[COMRAM] unsigned char 
  2860 ;;  data            2   14[COMRAM] PTR void 
  2861 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  2862 ;;		 -> main@uc(5), 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  2865 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2866 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2867 ;;  tlength         2   17[COMRAM] unsigned int 
  2868 ;;  slot            1   19[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      char 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2878 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;Total ram usage:       12 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    6
  2885 ;; This function calls:
  2886 ;;		_memcpy
  2887 ;; This function is called by:
  2888 ;;		_ToMainLow_sendmsg
  2889 ;;		_FromMainLow_sendmsg
  2890 ;;		_FromMainHigh_sendmsg
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text19
  2895  0007AE                     __ptext19:
  2896                           	opt stack 0
  2897  0007AE                     _send_msg:
  2898                           	opt stack 18
  2899                           
  2900                           ;messages.c: 25: unsigned char slot;
  2901                           ;messages.c: 27: msg *qmsg;
  2902                           ;messages.c: 28: size_t tlength = length;
  2903                           
  2904                           ;incstack = 0
  2905  0007AE  C00D  F012         	movff	send_msg@length,send_msg@tlength
  2906  0007B2  6A13               	clrf	send_msg@tlength+1,c
  2907                           
  2908                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2909  0007B4  EE20 F034          	lfsr	2,52
  2910  0007B8  500B               	movf	send_msg@qptr,w,c
  2911  0007BA  26D9               	addwf	fsr2l,f,c
  2912  0007BC  500C               	movf	send_msg@qptr+1,w,c
  2913  0007BE  22DA               	addwfc	fsr2h,f,c
  2914  0007C0  50DF               	movf	indf2,w,c
  2915  0007C2  6E14               	movwf	send_msg@slot,c
  2916                           
  2917                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2918  0007C4  5014               	movf	send_msg@slot,w,c
  2919  0007C6  0D0D               	mullw	13
  2920  0007C8  50F3               	movf	prodl,w,c
  2921  0007CA  240B               	addwf	send_msg@qptr,w,c
  2922  0007CC  6E15               	movwf	send_msg@qmsg,c
  2923  0007CE  50F4               	movf	prodh,w,c
  2924  0007D0  200C               	addwfc	send_msg@qptr+1,w,c
  2925  0007D2  6E16               	movwf	send_msg@qmsg+1,c
  2926                           
  2927                           ;messages.c: 41: if (qmsg->full != 0) {
  2928  0007D4  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  2929  0007D8  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2930  0007DC  50DF               	movf	indf2,w,c
  2931  0007DE  B4D8               	btfsc	status,2,c
  2932  0007E0  D002               	goto	i1l2596
  2933                           
  2934                           ;messages.c: 42: return (-1);
  2935  0007E2  0EFF               	movlw	255
  2936  0007E4  0012               	return	
  2937  0007E6                     i1l2596:
  2938                           
  2939                           ;messages.c: 43: }
  2940                           ;messages.c: 46: qmsg->length = length;
  2941  0007E6  EE20 F001          	lfsr	2,1
  2942  0007EA  5015               	movf	send_msg@qmsg,w,c
  2943  0007EC  26D9               	addwf	fsr2l,f,c
  2944  0007EE  5016               	movf	send_msg@qmsg+1,w,c
  2945  0007F0  22DA               	addwfc	fsr2h,f,c
  2946  0007F2  C00D  FFDF         	movff	send_msg@length,indf2
  2947                           
  2948                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2949  0007F6  EE20 F002          	lfsr	2,2
  2950  0007FA  5015               	movf	send_msg@qmsg,w,c
  2951  0007FC  26D9               	addwf	fsr2l,f,c
  2952  0007FE  5016               	movf	send_msg@qmsg+1,w,c
  2953  000800  22DA               	addwfc	fsr2h,f,c
  2954  000802  C00E  FFDF         	movff	send_msg@msgtype,indf2
  2955                           
  2956                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2957  000806  0E03               	movlw	3
  2958  000808  2415               	addwf	send_msg@qmsg,w,c
  2959  00080A  6E01               	movwf	memcpy@d1,c
  2960  00080C  0E00               	movlw	0
  2961  00080E  2016               	addwfc	send_msg@qmsg+1,w,c
  2962  000810  6E02               	movwf	memcpy@d1+1,c
  2963  000812  C010  F004         	movff	send_msg@data+1,memcpy@s1+1
  2964  000816  C00F  F003         	movff	send_msg@data,memcpy@s1
  2965  00081A  C012  F005         	movff	send_msg@tlength,memcpy@n
  2966  00081E  C013  F006         	movff	send_msg@tlength+1,memcpy@n+1
  2967  000822  EC9F  F006         	call	_memcpy	;wreg free
  2968                           
  2969                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2970  000826  EE20 F034          	lfsr	2,52
  2971  00082A  500B               	movf	send_msg@qptr,w,c
  2972  00082C  26D9               	addwf	fsr2l,f,c
  2973  00082E  500C               	movf	send_msg@qptr+1,w,c
  2974  000830  22DA               	addwfc	fsr2h,f,c
  2975  000832  EE10 F034          	lfsr	1,52
  2976  000836  500B               	movf	send_msg@qptr,w,c
  2977  000838  26E1               	addwf	fsr1l,f,c
  2978  00083A  500C               	movf	send_msg@qptr+1,w,c
  2979  00083C  22E2               	addwfc	fsr1h,f,c
  2980  00083E  50E7               	movf	indf1,w,c
  2981  000840  6E11               	movwf	??_send_msg& (0+255),c
  2982  000842  2811               	incf	??_send_msg,w,c
  2983  000844  0B03               	andlw	3
  2984  000846  6EDF               	movwf	indf2,c
  2985                           
  2986                           ;messages.c: 59: qmsg->full = 1;
  2987  000848  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  2988  00084C  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2989  000850  0E01               	movlw	1
  2990  000852  6EDF               	movwf	indf2,c
  2991                           
  2992                           ;messages.c: 60: return (1);
  2993  000854  0E01               	movlw	1
  2994  000856  0012               	return	
  2995  000858                     __end_of_send_msg:
  2996                           	opt stack 0
  2997                           pclatu	equ	0xFFB
  2998                           pclath	equ	0xFFA
  2999                           tblptru	equ	0xFF8
  3000                           tblptrh	equ	0xFF7
  3001                           tblptrl	equ	0xFF6
  3002                           tablat	equ	0xFF5
  3003                           prodh	equ	0xFF4
  3004                           prodl	equ	0xFF3
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           fsr0h	equ	0xFEA
  3008                           fsr0l	equ	0xFE9
  3009                           wreg	equ	0xFE8
  3010                           indf1	equ	0xFE7
  3011                           fsr1h	equ	0xFE2
  3012                           fsr1l	equ	0xFE1
  3013                           bsr	equ	0xFE0
  3014                           indf2	equ	0xFDF
  3015                           postinc2	equ	0xFDE
  3016                           postdec2	equ	0xFDD
  3017                           fsr2h	equ	0xFDA
  3018                           fsr2l	equ	0xFD9
  3019                           status	equ	0xFD8
  3020                           
  3021 ;; *************** function _memcpy *****************
  3022 ;; Defined at:
  3023 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  d1              2    0[COMRAM] PTR void 
  3026 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3027 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3028 ;;		 -> ToMainLow_MQ(54), 
  3029 ;;  s1              2    2[COMRAM] PTR const void 
  3030 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3031 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3032 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3033 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  3034 ;;		 -> main@uc(5), 
  3035 ;;  n               2    4[COMRAM] unsigned int 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3038 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3039 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3040 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3041 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  3042 ;;		 -> main@uc(5), 
  3043 ;;  d               2    6[COMRAM] PTR unsigned char 
  3044 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3045 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3046 ;;		 -> ToMainLow_MQ(54), 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2    0[COMRAM] PTR void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;Total ram usage:       10 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    5
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_send_msg
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text20
  3071  000D3E                     __ptext20:
  3072                           	opt stack 0
  3073  000D3E                     _memcpy:
  3074                           	opt stack 18
  3075                           
  3076                           ;incstack = 0
  3077  000D3E  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3078  000D42  C003  F009         	movff	memcpy@s1,memcpy@s
  3079  000D46  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3080  000D4A  C001  F007         	movff	memcpy@d1,memcpy@d
  3081  000D4E  D00E               	goto	i1l2568
  3082  000D50                     i1l2562:
  3083  000D50  C009  FFD9         	movff	memcpy@s,fsr2l
  3084  000D54  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3085  000D58  C007  FFE1         	movff	memcpy@d,fsr1l
  3086  000D5C  C008  FFE2         	movff	memcpy@d+1,fsr1h
  3087  000D60  CFDF FFE7          	movff	indf2,indf1
  3088  000D64  4A09               	infsnz	memcpy@s,f,c
  3089  000D66  2A0A               	incf	memcpy@s+1,f,c
  3090  000D68  4A07               	infsnz	memcpy@d,f,c
  3091  000D6A  2A08               	incf	memcpy@d+1,f,c
  3092  000D6C                     i1l2568:
  3093  000D6C  0605               	decf	memcpy@n,f,c
  3094  000D6E  A0D8               	btfss	status,0,c
  3095  000D70  0606               	decf	memcpy@n+1,f,c
  3096  000D72  2805               	incf	memcpy@n& (0+255),w,c
  3097  000D74  B4D8               	btfsc	status,2,c
  3098  000D76  2806               	incf	(memcpy@n+1)& (0+255),w,c
  3099  000D78  B4D8               	btfsc	status,2,c
  3100                           
  3101                           ;	Return value of _memcpy is never used
  3102  000D7A  0012               	return	
  3103  000D7C  D7E9               	goto	i1l2562
  3104  000D7E                     __end_of_memcpy:
  3105                           	opt stack 0
  3106                           pclatu	equ	0xFFB
  3107                           pclath	equ	0xFFA
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           intcon	equ	0xFF2
  3115                           postinc0	equ	0xFEE
  3116                           fsr0h	equ	0xFEA
  3117                           fsr0l	equ	0xFE9
  3118                           wreg	equ	0xFE8
  3119                           indf1	equ	0xFE7
  3120                           fsr1h	equ	0xFE2
  3121                           fsr1l	equ	0xFE1
  3122                           bsr	equ	0xFE0
  3123                           indf2	equ	0xFDF
  3124                           postinc2	equ	0xFDE
  3125                           postdec2	equ	0xFDD
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _ReadTimer1 *****************
  3131 ;; Defined at:
  3132 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  timer           2    2[COMRAM] struct Timers
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[COMRAM] unsigned int 
  3139 ;; Registers used:
  3140 ;;		None
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;Total ram usage:        4 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_timer1_int_handler
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text21
  3161  000F8E                     __ptext21:
  3162                           	opt stack 0
  3163  000F8E                     _ReadTimer1:
  3164                           	opt stack 20
  3165                           
  3166                           ;incstack = 0
  3167  000F8E  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  3168  000F92  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  3169  000F96  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  3170  000F9A  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  3171  000F9E  0012               	return	
  3172  000FA0                     __end_of_ReadTimer1:
  3173                           	opt stack 0
  3174                           pclatu	equ	0xFFB
  3175                           pclath	equ	0xFFA
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           intcon	equ	0xFF2
  3183                           postinc0	equ	0xFEE
  3184                           fsr0h	equ	0xFEA
  3185                           fsr0l	equ	0xFE9
  3186                           wreg	equ	0xFE8
  3187                           indf1	equ	0xFE7
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           bsr	equ	0xFE0
  3191                           indf2	equ	0xFDF
  3192                           postinc2	equ	0xFDE
  3193                           postdec2	equ	0xFDD
  3194                           fsr2h	equ	0xFDA
  3195                           fsr2l	equ	0xFD9
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _InterruptHandlerHigh *****************
  3199 ;; Defined at:
  3200 ;;		line 83 in file "../src/interrupts.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;		None               void
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;Total ram usage:       14 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    4
  3221 ;; This function calls:
  3222 ;;		_SleepIfOkay
  3223 ;;		_i2c_master_int_handler
  3224 ;;		_timer0_int_handler
  3225 ;; This function is called by:
  3226 ;;		Interrupt level 2
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	intcode
  3231  000008                     __pintcode:
  3232                           	opt stack 0
  3233  000008                     _InterruptHandlerHigh:
  3234                           	opt stack 18
  3235                           
  3236                           ;incstack = 0
  3237  000008  CFFA F0B8          	movff	pclath,??_InterruptHandlerHigh
  3238  00000C  CFFB F0B9          	movff	pclatu,??_InterruptHandlerHigh+1
  3239  000010  CFE9 F0BA          	movff	fsr0l,??_InterruptHandlerHigh+2
  3240  000014  EF0A  F005         	goto	int_func
  3241                           pclatu	equ	0xFFB
  3242                           pclath	equ	0xFFA
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           postinc0	equ	0xFEE
  3251                           fsr0h	equ	0xFEA
  3252                           fsr0l	equ	0xFE9
  3253                           wreg	equ	0xFE8
  3254                           indf1	equ	0xFE7
  3255                           fsr1h	equ	0xFE2
  3256                           fsr1l	equ	0xFE1
  3257                           bsr	equ	0xFE0
  3258                           indf2	equ	0xFDF
  3259                           postinc2	equ	0xFDE
  3260                           postdec2	equ	0xFDD
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265                           	psect	intcode_body
  3266  000A14                     __pintcode_body:
  3267                           	opt stack 18
  3268  000A14                     int_func:
  3269                           	opt stack 18
  3270  000A14  CFEA F0BB          	movff	fsr0h,??_InterruptHandlerHigh+3
  3271  000A18  CFE1 F0BC          	movff	fsr1l,??_InterruptHandlerHigh+4
  3272  000A1C  CFE2 F0BD          	movff	fsr1h,??_InterruptHandlerHigh+5
  3273  000A20  CFD9 F0BE          	movff	fsr2l,??_InterruptHandlerHigh+6
  3274  000A24  CFDA F0BF          	movff	fsr2h,??_InterruptHandlerHigh+7
  3275  000A28  CFF3 F0C0          	movff	prodl,??_InterruptHandlerHigh+8
  3276  000A2C  CFF4 F0C1          	movff	prodh,??_InterruptHandlerHigh+9
  3277  000A30  CFF6 F0C2          	movff	tblptrl,??_InterruptHandlerHigh+10
  3278  000A34  CFF7 F0C3          	movff	tblptrh,??_InterruptHandlerHigh+11
  3279  000A38  CFF8 F0C4          	movff	tblptru,??_InterruptHandlerHigh+12
  3280  000A3C  CFF5 F0C5          	movff	tablat,??_InterruptHandlerHigh+13
  3281                           
  3282                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  3283  000A40  A69E               	btfss	3998,3,c	;volatile
  3284  000A42  D003               	goto	i2l3034
  3285                           
  3286                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  3287  000A44  969E               	bcf	3998,3,c	;volatile
  3288                           
  3289                           ;interrupts.c: 92: i2c_master_int_handler();
  3290  000A46  EC5D  F000         	call	_i2c_master_int_handler	;wreg free
  3291  000A4A                     i2l3034:
  3292                           
  3293                           ;interrupts.c: 93: }
  3294                           ;interrupts.c: 95: if (INTCONbits.TMR0IF) {
  3295  000A4A  A4F2               	btfss	intcon,2,c	;volatile
  3296  000A4C  D003               	goto	i2l3040
  3297                           
  3298                           ;interrupts.c: 96: INTCONbits.TMR0IF = 0;
  3299  000A4E  94F2               	bcf	intcon,2,c	;volatile
  3300                           
  3301                           ;interrupts.c: 98: timer0_int_handler();
  3302  000A50  EC81  F005         	call	_timer0_int_handler	;wreg free
  3303  000A54                     i2l3040:
  3304                           
  3305                           ;interrupts.c: 99: }
  3306                           ;interrupts.c: 108: SleepIfOkay();
  3307  000A54  EC1D  F006         	call	_SleepIfOkay	;wreg free
  3308  000A58  C0C5  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  3309  000A5C  C0C4  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  3310  000A60  C0C3  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  3311  000A64  C0C2  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  3312  000A68  C0C1  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  3313  000A6C  C0C0  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  3314  000A70  C0BF  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  3315  000A74  C0BE  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  3316  000A78  C0BD  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  3317  000A7C  C0BC  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  3318  000A80  C0BB  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  3319  000A84  C0BA  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  3320  000A88  C0B9  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  3321  000A8C  C0B8  FFFA         	movff	??_InterruptHandlerHigh,pclath
  3322  000A90  0011               	retfie		f
  3323  000A92                     __end_of_InterruptHandlerHigh:
  3324                           	opt stack 0
  3325                           pclatu	equ	0xFFB
  3326                           pclath	equ	0xFFA
  3327                           tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           intcon	equ	0xFF2
  3334                           postinc0	equ	0xFEE
  3335                           fsr0h	equ	0xFEA
  3336                           fsr0l	equ	0xFE9
  3337                           wreg	equ	0xFE8
  3338                           indf1	equ	0xFE7
  3339                           fsr1h	equ	0xFE2
  3340                           fsr1l	equ	0xFE1
  3341                           bsr	equ	0xFE0
  3342                           indf2	equ	0xFDF
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function _timer0_int_handler *****************
  3350 ;; Defined at:
  3351 ;;		line 16 in file "../src/user_interrupts.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  val             2   32[BANK0 ] unsigned int 
  3356 ;;  msgtype         2   30[BANK0 ] int 
  3357 ;;  length          2   28[BANK0 ] int 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;Total ram usage:        6 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    3
  3374 ;; This function calls:
  3375 ;;		_FromMainHigh_recvmsg
  3376 ;;		_ToMainHigh_sendmsg
  3377 ;;		_WriteTimer0
  3378 ;; This function is called by:
  3379 ;;		_InterruptHandlerHigh
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text23
  3384  000B02                     __ptext23:
  3385                           	opt stack 0
  3386  000B02                     _timer0_int_handler:
  3387                           	opt stack 18
  3388                           
  3389                           ;user_interrupts.c: 17: unsigned int val;
  3390                           ;user_interrupts.c: 18: int length, msgtype;
  3391                           ;user_interrupts.c: 25: WriteTimer0(0);
  3392                           
  3393                           ;incstack = 0
  3394  000B02  0E00               	movlw	0
  3395  000B04  0100               	movlb	0	; () banked
  3396  000B06  6F97               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  3397  000B08  0E00               	movlw	0
  3398  000B0A  0100               	movlb	0	; () banked
  3399  000B0C  6F96               	movwf	WriteTimer0@timer0& (0+255),b
  3400  000B0E  ECD0  F007         	call	_WriteTimer0	;wreg free
  3401                           
  3402                           ;user_interrupts.c: 27: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  3403  000B12  0100               	movlb	0	; () banked
  3404  000B14  0E00               	movlw	high timer0_int_handler@msgtype
  3405  000B16  0100               	movlb	0	; () banked
  3406  000B18  6FAF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  3407  000B1A  0100               	movlb	0	; () banked
  3408  000B1C  0EB4               	movlw	low timer0_int_handler@msgtype
  3409  000B1E  0100               	movlb	0	; () banked
  3410  000B20  6FAE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  3411  000B22  0100               	movlb	0	; () banked
  3412  000B24  0E00               	movlw	high timer0_int_handler@val
  3413  000B26  0100               	movlb	0	; () banked
  3414  000B28  6FB1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  3415  000B2A  0100               	movlb	0	; () banked
  3416  000B2C  0EB6               	movlw	low timer0_int_handler@val
  3417  000B2E  0100               	movlb	0	; () banked
  3418  000B30  6FB0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  3419  000B32  0E02               	movlw	2
  3420  000B34  EC1A  F007         	call	_FromMainHigh_recvmsg
  3421  000B38  0100               	movlb	0	; () banked
  3422  000B3A  6FB2               	movwf	timer0_int_handler@length& (0+255),b
  3423  000B3C  0100               	movlb	0	; () banked
  3424  000B3E  6BB3               	clrf	(timer0_int_handler@length+1)& (0+255),b
  3425  000B40  0100               	movlb	0	; () banked
  3426  000B42  BFB2               	btfsc	timer0_int_handler@length& (0+255),7,b
  3427  000B44  07B3               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;user_interrupts.c: 28: if (length == sizeof (val)) {
  3431  000B46  0100               	movlb	0	; () banked
  3432  000B48  51B2               	movf	timer0_int_handler@length& (0+255),w,b
  3433  000B4A  0A02               	xorlw	2
  3434  000B4C  11B3               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  3435  000B4E  A4D8               	btfss	status,2,c
  3436  000B50  0012               	return	
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;user_interrupts.c: 29: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  3440  000B52  0E0A               	movlw	10
  3441  000B54  0100               	movlb	0	; () banked
  3442  000B56  6FAB               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  3443  000B58  0100               	movlb	0	; () banked
  3444  000B5A  0E00               	movlw	high timer0_int_handler@val
  3445  000B5C  0100               	movlb	0	; () banked
  3446  000B5E  6FAD               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  3447  000B60  0100               	movlb	0	; () banked
  3448  000B62  0EB6               	movlw	low timer0_int_handler@val
  3449  000B64  0100               	movlb	0	; () banked
  3450  000B66  6FAC               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  3451  000B68  0E02               	movlw	2
  3452  000B6A  EC34  F007         	call	_ToMainHigh_sendmsg
  3453  000B6E  0012               	return	
  3454  000B70                     __end_of_timer0_int_handler:
  3455                           	opt stack 0
  3456                           pclatu	equ	0xFFB
  3457                           pclath	equ	0xFFA
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           postinc0	equ	0xFEE
  3466                           fsr0h	equ	0xFEA
  3467                           fsr0l	equ	0xFE9
  3468                           wreg	equ	0xFE8
  3469                           indf1	equ	0xFE7
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           bsr	equ	0xFE0
  3473                           indf2	equ	0xFDF
  3474                           postinc2	equ	0xFDE
  3475                           postdec2	equ	0xFDD
  3476                           fsr2h	equ	0xFDA
  3477                           fsr2l	equ	0xFD9
  3478                           status	equ	0xFD8
  3479                           
  3480 ;; *************** function _WriteTimer0 *****************
  3481 ;; Defined at:
  3482 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  timer0          2    0[BANK0 ] unsigned int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  timer           2    2[BANK0 ] struct Timers
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		None
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;Total ram usage:        4 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_timer0_int_handler
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text24
  3510  000FA0                     __ptext24:
  3511                           	opt stack 0
  3512  000FA0                     _WriteTimer0:
  3513                           	opt stack 20
  3514                           
  3515                           ;incstack = 0
  3516  000FA0  C096  F098         	movff	WriteTimer0@timer0,WriteTimer0@timer
  3517  000FA4  C097  F099         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  3518  000FA8  C099  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  3519  000FAC  C098  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  3520  000FB0  0012               	return	
  3521  000FB2                     __end_of_WriteTimer0:
  3522                           	opt stack 0
  3523                           pclatu	equ	0xFFB
  3524                           pclath	equ	0xFFA
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           intcon	equ	0xFF2
  3532                           postinc0	equ	0xFEE
  3533                           fsr0h	equ	0xFEA
  3534                           fsr0l	equ	0xFE9
  3535                           wreg	equ	0xFE8
  3536                           indf1	equ	0xFE7
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           bsr	equ	0xFE0
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function _ToMainHigh_sendmsg *****************
  3548 ;; Defined at:
  3549 ;;		line 126 in file "../src/messages.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  length          1    wreg     unsigned char 
  3552 ;;  msgtype         1   21[BANK0 ] unsigned char 
  3553 ;;  data            2   22[BANK0 ] PTR void 
  3554 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  length          1   24[BANK0 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      char 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;Total ram usage:        4 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    2
  3573 ;; This function calls:
  3574 ;;		i2_send_msg
  3575 ;; This function is called by:
  3576 ;;		_timer0_int_handler
  3577 ;;		_i2c_int_handler
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text25
  3582  000E68                     __ptext25:
  3583                           	opt stack 0
  3584  000E68                     _ToMainHigh_sendmsg:
  3585                           	opt stack 18
  3586                           
  3587                           ;incstack = 0
  3588                           ;ToMainHigh_sendmsg@length stored from wreg
  3589  000E68  0100               	movlb	0	; () banked
  3590  000E6A  6FAE               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3594                           ;	Return value of _ToMainHigh_sendmsg is never used
  3595  000E6C  0101               	movlb	1	; () banked
  3596  000E6E  0E01               	movlw	high _ToMainHigh_MQ
  3597  000E70  0100               	movlb	0	; () banked
  3598  000E72  6FA1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  3599  000E74  0101               	movlb	1	; () banked
  3600  000E76  0E6C               	movlw	low _ToMainHigh_MQ
  3601  000E78  0100               	movlb	0	; () banked
  3602  000E7A  6FA0               	movwf	i2send_msg@qptr& (0+255),b
  3603  000E7C  C0AE  F0A2         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  3604  000E80  C0AB  F0A3         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  3605  000E84  0100               	movlb	0	; () banked
  3606  000E86  C0AD  F0A5         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  3607  000E8A  0100               	movlb	0	; () banked
  3608  000E8C  C0AC  F0A4         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  3609  000E90  EC07  F003         	call	i2_send_msg	;wreg free
  3610  000E94  0012               	return	
  3611  000E96                     __end_of_ToMainHigh_sendmsg:
  3612                           	opt stack 0
  3613                           pclatu	equ	0xFFB
  3614                           pclath	equ	0xFFA
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           postinc0	equ	0xFEE
  3623                           fsr0h	equ	0xFEA
  3624                           fsr0l	equ	0xFE9
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           bsr	equ	0xFE0
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           postdec2	equ	0xFDD
  3633                           fsr2h	equ	0xFDA
  3634                           fsr2l	equ	0xFD9
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function i2_send_msg *****************
  3638 ;; Defined at:
  3639 ;;		line 24 in file "../src/messages.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  3642 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3643 ;;  length          1   12[BANK0 ] unsigned char 
  3644 ;;  msgtype         1   13[BANK0 ] unsigned char 
  3645 ;;  data            2   14[BANK0 ] PTR void 
  3646 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(31), 
  3647 ;;		 -> main@uc(5), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  send_msg        2   19[BANK0 ] PTR struct __msg
  3650 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3651 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3652 ;;  send_msg        2   16[BANK0 ] unsigned int 
  3653 ;;  send_msg        1   18[BANK0 ] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      char 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3663 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;Total ram usage:       12 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		i2_memcpy
  3672 ;; This function is called by:
  3673 ;;		_ToMainHigh_sendmsg
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text26
  3678  00060E                     __ptext26:
  3679                           	opt stack 0
  3680  00060E                     i2_send_msg:
  3681                           	opt stack 18
  3682                           
  3683                           ;messages.c: 25: unsigned char slot;
  3684                           ;messages.c: 27: msg *qmsg;
  3685                           ;messages.c: 28: size_t tlength = length;
  3686                           
  3687                           ;incstack = 0
  3688  00060E  0100               	movlb	0	; () banked
  3689  000610  C0A2  F0A6         	movff	i2send_msg@length,i2send_msg@tlength
  3690  000614  0100               	movlb	0	; () banked
  3691  000616  6BA7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3695  000618  0100               	movlb	0	; () banked
  3696  00061A  EE20 F034          	lfsr	2,52
  3697  00061E  0100               	movlb	0	; () banked
  3698  000620  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  3699  000622  26D9               	addwf	fsr2l,f,c
  3700  000624  0100               	movlb	0	; () banked
  3701  000626  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3702  000628  22DA               	addwfc	fsr2h,f,c
  3703  00062A  50DF               	movf	indf2,w,c
  3704  00062C  0100               	movlb	0	; () banked
  3705  00062E  6FA8               	movwf	i2send_msg@slot& (0+255),b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3709  000630  0100               	movlb	0	; () banked
  3710  000632  51A8               	movf	i2send_msg@slot& (0+255),w,b
  3711  000634  0D0D               	mullw	13
  3712  000636  50F3               	movf	prodl,w,c
  3713  000638  0100               	movlb	0	; () banked
  3714  00063A  25A0               	addwf	i2send_msg@qptr& (0+255),w,b
  3715  00063C  0100               	movlb	0	; () banked
  3716  00063E  6FA9               	movwf	i2send_msg@qmsg& (0+255),b
  3717  000640  50F4               	movf	prodh,w,c
  3718  000642  0100               	movlb	0	; () banked
  3719  000644  21A1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  3720  000646  0100               	movlb	0	; () banked
  3721  000648  6FAA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;messages.c: 41: if (qmsg->full != 0) {
  3725  00064A  C0A9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3726  00064E  C0AA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3727  000652  50DF               	movf	indf2,w,c
  3728  000654  B4D8               	btfsc	status,2,c
  3729  000656  D002               	goto	i2l2652
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;messages.c: 42: return (-1);
  3733  000658  0EFF               	movlw	255
  3734  00065A  0012               	return	
  3735  00065C                     i2l2652:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;messages.c: 43: }
  3739                           ;messages.c: 46: qmsg->length = length;
  3740  00065C  0100               	movlb	0	; () banked
  3741  00065E  EE20 F001          	lfsr	2,1
  3742  000662  0100               	movlb	0	; () banked
  3743  000664  51A9               	movf	i2send_msg@qmsg& (0+255),w,b
  3744  000666  26D9               	addwf	fsr2l,f,c
  3745  000668  0100               	movlb	0	; () banked
  3746  00066A  51AA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3747  00066C  22DA               	addwfc	fsr2h,f,c
  3748  00066E  0100               	movlb	0	; () banked
  3749  000670  C0A2  FFDF         	movff	i2send_msg@length,indf2
  3750                           
  3751                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3752  000674  0100               	movlb	0	; () banked
  3753  000676  EE20 F002          	lfsr	2,2
  3754  00067A  0100               	movlb	0	; () banked
  3755  00067C  51A9               	movf	i2send_msg@qmsg& (0+255),w,b
  3756  00067E  26D9               	addwf	fsr2l,f,c
  3757  000680  0100               	movlb	0	; () banked
  3758  000682  51AA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  3759  000684  22DA               	addwfc	fsr2h,f,c
  3760  000686  0100               	movlb	0	; () banked
  3761  000688  C0A3  FFDF         	movff	i2send_msg@msgtype,indf2
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3765  00068C  0E03               	movlw	3
  3766  00068E  0100               	movlb	0	; () banked
  3767  000690  25A9               	addwf	i2send_msg@qmsg& (0+255),w,b
  3768  000692  0100               	movlb	0	; () banked
  3769  000694  6F96               	movwf	i2memcpy@d1& (0+255),b
  3770  000696  0E00               	movlw	0
  3771  000698  0100               	movlb	0	; () banked
  3772  00069A  21AA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  3773  00069C  0100               	movlb	0	; () banked
  3774  00069E  6F97               	movwf	(i2memcpy@d1+1)& (0+255),b
  3775  0006A0  0100               	movlb	0	; () banked
  3776  0006A2  C0A5  F099         	movff	i2send_msg@data+1,i2memcpy@s1+1
  3777  0006A6  0100               	movlb	0	; () banked
  3778  0006A8  C0A4  F098         	movff	i2send_msg@data,i2memcpy@s1
  3779  0006AC  C0A6  F09A         	movff	i2send_msg@tlength,i2memcpy@n
  3780  0006B0  C0A7  F09B         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  3781  0006B4  EC77  F006         	call	i2_memcpy	;wreg free
  3782                           
  3783                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3784  0006B8  0100               	movlb	0	; () banked
  3785  0006BA  EE20 F034          	lfsr	2,52
  3786  0006BE  0100               	movlb	0	; () banked
  3787  0006C0  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  3788  0006C2  26D9               	addwf	fsr2l,f,c
  3789  0006C4  0100               	movlb	0	; () banked
  3790  0006C6  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3791  0006C8  22DA               	addwfc	fsr2h,f,c
  3792  0006CA  0100               	movlb	0	; () banked
  3793  0006CC  EE10 F034          	lfsr	1,52
  3794  0006D0  0100               	movlb	0	; () banked
  3795  0006D2  51A0               	movf	i2send_msg@qptr& (0+255),w,b
  3796  0006D4  26E1               	addwf	fsr1l,f,c
  3797  0006D6  0100               	movlb	0	; () banked
  3798  0006D8  51A1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  3799  0006DA  22E2               	addwfc	fsr1h,f,c
  3800  0006DC  50E7               	movf	indf1,w,c
  3801  0006DE  6E2E               	movwf	??i2_send_msg& (0+255),c
  3802  0006E0  282E               	incf	??i2_send_msg,w,c
  3803  0006E2  0B03               	andlw	3
  3804  0006E4  6EDF               	movwf	indf2,c
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;messages.c: 59: qmsg->full = 1;
  3808  0006E6  C0A9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  3809  0006EA  C0AA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  3810  0006EE  0E01               	movlw	1
  3811  0006F0  6EDF               	movwf	indf2,c
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;messages.c: 60: return (1);
  3815  0006F2  0E01               	movlw	1
  3816  0006F4  0012               	return	
  3817  0006F6                     __end_ofi2_send_msg:
  3818                           	opt stack 0
  3819                           pclatu	equ	0xFFB
  3820                           pclath	equ	0xFFA
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           prodh	equ	0xFF4
  3826                           prodl	equ	0xFF3
  3827                           intcon	equ	0xFF2
  3828                           postinc0	equ	0xFEE
  3829                           fsr0h	equ	0xFEA
  3830                           fsr0l	equ	0xFE9
  3831                           wreg	equ	0xFE8
  3832                           indf1	equ	0xFE7
  3833                           fsr1h	equ	0xFE2
  3834                           fsr1l	equ	0xFE1
  3835                           bsr	equ	0xFE0
  3836                           indf2	equ	0xFDF
  3837                           postinc2	equ	0xFDE
  3838                           postdec2	equ	0xFDD
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           status	equ	0xFD8
  3842                           
  3843 ;; *************** function _FromMainHigh_recvmsg *****************
  3844 ;; Defined at:
  3845 ;;		line 183 in file "../src/messages.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  maxlength       1    wreg     unsigned char 
  3848 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  3849 ;;		 -> timer0_int_handler@msgtype(2), 
  3850 ;;  data            2   26[BANK0 ] PTR void 
  3851 ;;		 -> timer0_int_handler@val(2), 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  maxlength       1   45[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      char 
  3856 ;; Registers used:
  3857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;Total ram usage:        5 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    2
  3870 ;; This function calls:
  3871 ;;		_recv_msg
  3872 ;; This function is called by:
  3873 ;;		_timer0_int_handler
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text27
  3878  000E34                     __ptext27:
  3879                           	opt stack 0
  3880  000E34                     _FromMainHigh_recvmsg:
  3881                           	opt stack 18
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;incstack = 0
  3885                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  3886  000E34  6E2E               	movwf	FromMainHigh_recvmsg@maxlength,c
  3887                           
  3888                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  3889  000E36  0101               	movlb	1	; () banked
  3890  000E38  0E01               	movlw	high _FromMainHigh_MQ
  3891  000E3A  0100               	movlb	0	; () banked
  3892  000E3C  6FA1               	movwf	(recv_msg@qptr+1)& (0+255),b
  3893  000E3E  0101               	movlb	1	; () banked
  3894  000E40  0E00               	movlw	low _FromMainHigh_MQ
  3895  000E42  0100               	movlb	0	; () banked
  3896  000E44  6FA0               	movwf	recv_msg@qptr& (0+255),b
  3897  000E46  C02E  F0A2         	movff	FromMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3898  000E4A  0100               	movlb	0	; () banked
  3899  000E4C  C0AF  F0A4         	movff	FromMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3900  000E50  0100               	movlb	0	; () banked
  3901  000E52  C0AE  F0A3         	movff	FromMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3902  000E56  0100               	movlb	0	; () banked
  3903  000E58  C0B1  F0A6         	movff	FromMainHigh_recvmsg@data+1,recv_msg@data+1
  3904  000E5C  0100               	movlb	0	; () banked
  3905  000E5E  C0B0  F0A5         	movff	FromMainHigh_recvmsg@data,recv_msg@data
  3906  000E62  EC78  F002         	call	_recv_msg	;wreg free
  3907  000E66  0012               	return	
  3908  000E68                     __end_of_FromMainHigh_recvmsg:
  3909                           	opt stack 0
  3910                           pclatu	equ	0xFFB
  3911                           pclath	equ	0xFFA
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           intcon	equ	0xFF2
  3919                           postinc0	equ	0xFEE
  3920                           fsr0h	equ	0xFEA
  3921                           fsr0l	equ	0xFE9
  3922                           wreg	equ	0xFE8
  3923                           indf1	equ	0xFE7
  3924                           fsr1h	equ	0xFE2
  3925                           fsr1l	equ	0xFE1
  3926                           bsr	equ	0xFE0
  3927                           indf2	equ	0xFDF
  3928                           postinc2	equ	0xFDE
  3929                           postdec2	equ	0xFDD
  3930                           fsr2h	equ	0xFDA
  3931                           fsr2l	equ	0xFD9
  3932                           status	equ	0xFD8
  3933                           
  3934 ;; *************** function _recv_msg *****************
  3935 ;; Defined at:
  3936 ;;		line 63 in file "../src/messages.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  3939 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3940 ;;  maxlength       1   12[BANK0 ] unsigned char 
  3941 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  3942 ;;		 -> timer0_int_handler@msgtype(2), 
  3943 ;;  data            2   15[BANK0 ] PTR void 
  3944 ;;		 -> timer0_int_handler@val(2), 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  qmsg            2   22[BANK0 ] PTR struct __msg
  3947 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3948 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3949 ;;  tlength         2   20[BANK0 ] unsigned int 
  3950 ;;  slot            1   19[BANK0 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      char 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3960 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3962 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3963 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;Total ram usage:       14 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    1
  3967 ;; This function calls:
  3968 ;;		i2_memcpy
  3969 ;; This function is called by:
  3970 ;;		_FromMainHigh_recvmsg
  3971 ;;		_ToMainLow_recvmsg
  3972 ;;		_ToMainHigh_recvmsg
  3973 ;;		_FromMainLow_recvmsg
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text28
  3978  0004F0                     __ptext28:
  3979                           	opt stack 0
  3980  0004F0                     _recv_msg:
  3981                           	opt stack 18
  3982                           
  3983                           ;messages.c: 64: unsigned char slot;
  3984                           ;messages.c: 68: msg *qmsg;
  3985                           ;messages.c: 69: size_t tlength;
  3986                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3987                           
  3988                           ;incstack = 0
  3989  0004F0  0100               	movlb	0	; () banked
  3990  0004F2  EE20 F035          	lfsr	2,53
  3991  0004F6  0100               	movlb	0	; () banked
  3992  0004F8  51A0               	movf	recv_msg@qptr& (0+255),w,b
  3993  0004FA  26D9               	addwf	fsr2l,f,c
  3994  0004FC  0100               	movlb	0	; () banked
  3995  0004FE  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3996  000500  22DA               	addwfc	fsr2h,f,c
  3997  000502  50DF               	movf	indf2,w,c
  3998  000504  0100               	movlb	0	; () banked
  3999  000506  6FA9               	movwf	recv_msg@slot& (0+255),b
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4003  000508  0100               	movlb	0	; () banked
  4004  00050A  51A9               	movf	recv_msg@slot& (0+255),w,b
  4005  00050C  0D0D               	mullw	13
  4006  00050E  50F3               	movf	prodl,w,c
  4007  000510  0100               	movlb	0	; () banked
  4008  000512  25A0               	addwf	recv_msg@qptr& (0+255),w,b
  4009  000514  0100               	movlb	0	; () banked
  4010  000516  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  4011  000518  50F4               	movf	prodh,w,c
  4012  00051A  0100               	movlb	0	; () banked
  4013  00051C  21A1               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4014  00051E  0100               	movlb	0	; () banked
  4015  000520  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;messages.c: 74: if (qmsg->full == 1) {
  4019  000522  0E01               	movlw	1
  4020  000524  C0AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4021  000528  C0AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4022  00052C  62DF               	cpfseq	indf2,c
  4023  00052E  D06D               	goto	i2l2636
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4027  000530  0100               	movlb	0	; () banked
  4028  000532  EE20 F001          	lfsr	2,1
  4029  000536  0100               	movlb	0	; () banked
  4030  000538  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4031  00053A  26D9               	addwf	fsr2l,f,c
  4032  00053C  0100               	movlb	0	; () banked
  4033  00053E  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4034  000540  22DA               	addwfc	fsr2h,f,c
  4035  000542  50DF               	movf	indf2,w,c
  4036  000544  0100               	movlb	0	; () banked
  4037  000546  5DA2               	subwf	recv_msg@maxlength& (0+255),w,b
  4038  000548  B0D8               	btfsc	status,0,c
  4039  00054A  D002               	goto	i2l2620
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;messages.c: 77: return (-3);
  4043  00054C  0EFD               	movlw	253
  4044  00054E  0012               	return	
  4045  000550                     i2l2620:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;messages.c: 78: }
  4049                           ;messages.c: 80: tlength = qmsg->length;
  4050  000550  0100               	movlb	0	; () banked
  4051  000552  EE20 F001          	lfsr	2,1
  4052  000556  0100               	movlb	0	; () banked
  4053  000558  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4054  00055A  26D9               	addwf	fsr2l,f,c
  4055  00055C  0100               	movlb	0	; () banked
  4056  00055E  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4057  000560  22DA               	addwfc	fsr2h,f,c
  4058  000562  50DF               	movf	indf2,w,c
  4059  000564  0100               	movlb	0	; () banked
  4060  000566  6FA7               	movwf	??_recv_msg& (0+255),b
  4061  000568  0100               	movlb	0	; () banked
  4062  00056A  51A7               	movf	??_recv_msg& (0+255),w,b
  4063  00056C  0100               	movlb	0	; () banked
  4064  00056E  6FAA               	movwf	recv_msg@tlength& (0+255),b
  4065  000570  0100               	movlb	0	; () banked
  4066  000572  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4070  000574  0100               	movlb	0	; () banked
  4071  000576  C0A6  F097         	movff	recv_msg@data+1,i2memcpy@d1+1
  4072  00057A  0100               	movlb	0	; () banked
  4073  00057C  C0A5  F096         	movff	recv_msg@data,i2memcpy@d1
  4074  000580  0E03               	movlw	3
  4075  000582  0100               	movlb	0	; () banked
  4076  000584  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  4077  000586  0100               	movlb	0	; () banked
  4078  000588  6FA7               	movwf	??_recv_msg& (0+255),b
  4079  00058A  0E00               	movlw	0
  4080  00058C  0100               	movlb	0	; () banked
  4081  00058E  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4082  000590  0100               	movlb	0	; () banked
  4083  000592  6FA8               	movwf	(??_recv_msg+1)& (0+255),b
  4084  000594  C0A7  F098         	movff	??_recv_msg,i2memcpy@s1
  4085  000598  C0A8  F099         	movff	??_recv_msg+1,i2memcpy@s1+1
  4086  00059C  C0AA  F09A         	movff	recv_msg@tlength,i2memcpy@n
  4087  0005A0  C0AB  F09B         	movff	recv_msg@tlength+1,i2memcpy@n+1
  4088  0005A4  EC77  F006         	call	i2_memcpy	;wreg free
  4089                           
  4090                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4091  0005A8  0100               	movlb	0	; () banked
  4092  0005AA  EE20 F035          	lfsr	2,53
  4093  0005AE  0100               	movlb	0	; () banked
  4094  0005B0  51A0               	movf	recv_msg@qptr& (0+255),w,b
  4095  0005B2  26D9               	addwf	fsr2l,f,c
  4096  0005B4  0100               	movlb	0	; () banked
  4097  0005B6  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4098  0005B8  22DA               	addwfc	fsr2h,f,c
  4099  0005BA  0100               	movlb	0	; () banked
  4100  0005BC  EE10 F035          	lfsr	1,53
  4101  0005C0  0100               	movlb	0	; () banked
  4102  0005C2  51A0               	movf	recv_msg@qptr& (0+255),w,b
  4103  0005C4  26E1               	addwf	fsr1l,f,c
  4104  0005C6  0100               	movlb	0	; () banked
  4105  0005C8  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4106  0005CA  22E2               	addwfc	fsr1h,f,c
  4107  0005CC  50E7               	movf	indf1,w,c
  4108  0005CE  0100               	movlb	0	; () banked
  4109  0005D0  6FA7               	movwf	??_recv_msg& (0+255),b
  4110  0005D2  0100               	movlb	0	; () banked
  4111  0005D4  29A7               	incf	??_recv_msg& (0+255),w,b
  4112  0005D6  0B03               	andlw	3
  4113  0005D8  6EDF               	movwf	indf2,c
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4117  0005DA  0100               	movlb	0	; () banked
  4118  0005DC  EE20 F002          	lfsr	2,2
  4119  0005E0  0100               	movlb	0	; () banked
  4120  0005E2  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  4121  0005E4  26D9               	addwf	fsr2l,f,c
  4122  0005E6  0100               	movlb	0	; () banked
  4123  0005E8  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4124  0005EA  22DA               	addwfc	fsr2h,f,c
  4125  0005EC  C0A3  FFE1         	movff	recv_msg@msgtype,fsr1l
  4126  0005F0  C0A4  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4127  0005F4  CFDF FFE7          	movff	indf2,indf1
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;messages.c: 91: qmsg->full = 0;
  4131  0005F8  C0AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  4132  0005FC  C0AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4133  000600  0E00               	movlw	0
  4134  000602  6EDF               	movwf	indf2,c
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;messages.c: 92: return (tlength);
  4138  000604  0100               	movlb	0	; () banked
  4139  000606  51AA               	movf	recv_msg@tlength& (0+255),w,b
  4140  000608  0012               	return	
  4141  00060A                     i2l2636:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;messages.c: 94: return (-4);
  4145  00060A  0EFC               	movlw	252
  4146  00060C  0012               	return	
  4147  00060E                     __end_of_recv_msg:
  4148                           	opt stack 0
  4149                           pclatu	equ	0xFFB
  4150                           pclath	equ	0xFFA
  4151                           tblptru	equ	0xFF8
  4152                           tblptrh	equ	0xFF7
  4153                           tblptrl	equ	0xFF6
  4154                           tablat	equ	0xFF5
  4155                           prodh	equ	0xFF4
  4156                           prodl	equ	0xFF3
  4157                           intcon	equ	0xFF2
  4158                           postinc0	equ	0xFEE
  4159                           fsr0h	equ	0xFEA
  4160                           fsr0l	equ	0xFE9
  4161                           wreg	equ	0xFE8
  4162                           indf1	equ	0xFE7
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           bsr	equ	0xFE0
  4166                           indf2	equ	0xFDF
  4167                           postinc2	equ	0xFDE
  4168                           postdec2	equ	0xFDD
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function i2_memcpy *****************
  4174 ;; Defined at:
  4175 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  d1              2    0[BANK0 ] PTR void 
  4178 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4179 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4180 ;;		 -> ToMainLow_MQ(54), 
  4181 ;;  s1              2    2[BANK0 ] PTR const void 
  4182 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4183 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4184 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4185 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  4186 ;;		 -> main@uc(5), 
  4187 ;;  n               2    4[BANK0 ] unsigned int 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  4190 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4191 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4192 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4193 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(31), 
  4194 ;;		 -> main@uc(5), 
  4195 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  4196 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4197 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4198 ;;		 -> ToMainLow_MQ(54), 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    0[BANK0 ] PTR void 
  4201 ;; Registers used:
  4202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4208 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;Total ram usage:       10 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_recv_msg
  4218 ;;		i2_send_msg
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text29
  4223  000CEE                     __ptext29:
  4224                           	opt stack 0
  4225  000CEE                     i2_memcpy:
  4226                           	opt stack 18
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;incstack = 0
  4230  000CEE  0100               	movlb	0	; () banked
  4231  000CF0  C099  F09F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  4232  000CF4  0100               	movlb	0	; () banked
  4233  000CF6  C098  F09E         	movff	i2memcpy@s1,i2memcpy@s
  4234  000CFA  0100               	movlb	0	; () banked
  4235  000CFC  C097  F09D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  4236  000D00  0100               	movlb	0	; () banked
  4237  000D02  C096  F09C         	movff	i2memcpy@d1,i2memcpy@d
  4238  000D06  D010               	goto	i2l2578
  4239  000D08                     i2l2572:
  4240                           
  4241                           ; BSR set to: 0
  4242  000D08  C09E  FFD9         	movff	i2memcpy@s,fsr2l
  4243  000D0C  C09F  FFDA         	movff	i2memcpy@s+1,fsr2h
  4244  000D10  C09C  FFE1         	movff	i2memcpy@d,fsr1l
  4245  000D14  C09D  FFE2         	movff	i2memcpy@d+1,fsr1h
  4246  000D18  CFDF FFE7          	movff	indf2,indf1
  4247                           
  4248                           ; BSR set to: 0
  4249  000D1C  0100               	movlb	0	; () banked
  4250  000D1E  4B9E               	infsnz	i2memcpy@s& (0+255),f,b
  4251  000D20  2B9F               	incf	(i2memcpy@s+1)& (0+255),f,b
  4252                           
  4253                           ; BSR set to: 0
  4254  000D22  0100               	movlb	0	; () banked
  4255  000D24  4B9C               	infsnz	i2memcpy@d& (0+255),f,b
  4256  000D26  2B9D               	incf	(i2memcpy@d+1)& (0+255),f,b
  4257  000D28                     i2l2578:
  4258                           
  4259                           ; BSR set to: 0
  4260  000D28  0100               	movlb	0	; () banked
  4261  000D2A  079A               	decf	i2memcpy@n& (0+255),f,b
  4262  000D2C  A0D8               	btfss	status,0,c
  4263  000D2E  079B               	decf	(i2memcpy@n+1)& (0+255),f,b
  4264  000D30  0100               	movlb	0	; () banked
  4265  000D32  299A               	incf	i2memcpy@n& (0+255),w,b
  4266  000D34  B4D8               	btfsc	status,2,c
  4267  000D36  299B               	incf	(i2memcpy@n+1)& (0+255),w,b
  4268  000D38  B4D8               	btfsc	status,2,c
  4269                           
  4270                           ; BSR set to: 0
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;	Return value of i2_memcpy is never used
  4274  000D3A  0012               	return	
  4275  000D3C  D7E5               	goto	i2l2572
  4276  000D3E                     __end_ofi2_memcpy:
  4277                           	opt stack 0
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           tblptru	equ	0xFF8
  4281                           tblptrh	equ	0xFF7
  4282                           tblptrl	equ	0xFF6
  4283                           tablat	equ	0xFF5
  4284                           prodh	equ	0xFF4
  4285                           prodl	equ	0xFF3
  4286                           intcon	equ	0xFF2
  4287                           postinc0	equ	0xFEE
  4288                           fsr0h	equ	0xFEA
  4289                           fsr0l	equ	0xFE9
  4290                           wreg	equ	0xFE8
  4291                           indf1	equ	0xFE7
  4292                           fsr1h	equ	0xFE2
  4293                           fsr1l	equ	0xFE1
  4294                           bsr	equ	0xFE0
  4295                           indf2	equ	0xFDF
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _i2c_master_int_handler *****************
  4303 ;; Defined at:
  4304 ;;		line 99 in file "../src/my_i2c.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;		None               void
  4311 ;; Registers used:
  4312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_InterruptHandlerHigh
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text30
  4332  0000BA                     __ptext30:
  4333                           	opt stack 0
  4334  0000BA                     _i2c_master_int_handler:
  4335                           	opt stack 21
  4336                           
  4337                           ;my_i2c.c: 100: switch(ic_ptr->status) {
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;incstack = 0
  4341  0000BA  D14E               	goto	i2l2806
  4342  0000BC                     i2l229:
  4343  0000BC  B0C5               	btfsc	4037,0,c	;volatile
  4344  0000BE  D7FE               	goto	i2l229
  4345                           
  4346                           ;my_i2c.c: 105: if(ic_ptr->msg_trans_type == 0x0) {
  4347  0000C0  0100               	movlb	0	; () banked
  4348  0000C2  EE20 F01D          	lfsr	2,29
  4349  0000C6  0100               	movlb	0	; () banked
  4350  0000C8  51CC               	movf	_ic_ptr& (0+255),w,b
  4351  0000CA  26D9               	addwf	fsr2l,f,c
  4352  0000CC  0100               	movlb	0	; () banked
  4353  0000CE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4354  0000D0  22DA               	addwfc	fsr2h,f,c
  4355  0000D2  50DF               	movf	indf2,w,c
  4356  0000D4  A4D8               	btfss	status,2,c
  4357  0000D6  D00B               	goto	i2l2754
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;my_i2c.c: 106: ic_ptr->status = 0x3;
  4361  0000D8  0100               	movlb	0	; () banked
  4362  0000DA  EE20 F00D          	lfsr	2,13
  4363  0000DE  0100               	movlb	0	; () banked
  4364  0000E0  51CC               	movf	_ic_ptr& (0+255),w,b
  4365  0000E2  26D9               	addwf	fsr2l,f,c
  4366  0000E4  0100               	movlb	0	; () banked
  4367  0000E6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4368  0000E8  22DA               	addwfc	fsr2h,f,c
  4369  0000EA  0E03               	movlw	3
  4370  0000EC  D016               	goto	L1
  4371  0000EE                     i2l2754:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;my_i2c.c: 108: else if(ic_ptr->msg_trans_type == 0x1) {
  4375  0000EE  0100               	movlb	0	; () banked
  4376  0000F0  EE20 F01D          	lfsr	2,29
  4377  0000F4  0100               	movlb	0	; () banked
  4378  0000F6  51CC               	movf	_ic_ptr& (0+255),w,b
  4379  0000F8  26D9               	addwf	fsr2l,f,c
  4380  0000FA  0100               	movlb	0	; () banked
  4381  0000FC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4382  0000FE  22DA               	addwfc	fsr2h,f,c
  4383  000100  0E01               	movlw	1
  4384  000102  62DF               	cpfseq	indf2,c
  4385  000104  D00B               	goto	i2l233
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;my_i2c.c: 109: ic_ptr->status = 0x7;
  4389  000106  0100               	movlb	0	; () banked
  4390  000108  EE20 F00D          	lfsr	2,13
  4391  00010C  0100               	movlb	0	; () banked
  4392  00010E  51CC               	movf	_ic_ptr& (0+255),w,b
  4393  000110  26D9               	addwf	fsr2l,f,c
  4394  000112  0100               	movlb	0	; () banked
  4395  000114  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4396  000116  22DA               	addwfc	fsr2h,f,c
  4397  000118  0E07               	movlw	7
  4398  00011A                     L1:
  4399  00011A  6EDF               	movwf	indf2,c
  4400  00011C                     i2l233:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;my_i2c.c: 110: }
  4404                           ;my_i2c.c: 112: SSP1BUF = ic_ptr->slave_addr;
  4405  00011C  0100               	movlb	0	; () banked
  4406  00011E  EE20 F01C          	lfsr	2,28
  4407  000122  0100               	movlb	0	; () banked
  4408  000124  51CC               	movf	_ic_ptr& (0+255),w,b
  4409  000126  26D9               	addwf	fsr2l,f,c
  4410  000128  0100               	movlb	0	; () banked
  4411  00012A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4412  00012C  22DA               	addwfc	fsr2h,f,c
  4413  00012E  50DF               	movf	indf2,w,c
  4414  000130  6EC9               	movwf	4041,c	;volatile
  4415                           
  4416                           ;my_i2c.c: 113: break;
  4417  000132  0012               	return	
  4418  000134                     i2l2758:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;my_i2c.c: 117: ic_ptr->status = 0x4;
  4422  000134  0100               	movlb	0	; () banked
  4423  000136  EE20 F00D          	lfsr	2,13
  4424  00013A  0100               	movlb	0	; () banked
  4425  00013C  51CC               	movf	_ic_ptr& (0+255),w,b
  4426  00013E  26D9               	addwf	fsr2l,f,c
  4427  000140  0100               	movlb	0	; () banked
  4428  000142  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4429  000144  22DA               	addwfc	fsr2h,f,c
  4430  000146  0E04               	movlw	4
  4431  000148  6EDF               	movwf	indf2,c
  4432                           
  4433                           ;my_i2c.c: 118: break;
  4434  00014A  0012               	return	
  4435  00014C                     i2l238:
  4436  00014C  BCC5               	btfsc	4037,6,c	;volatile
  4437  00014E  D7FE               	goto	i2l238
  4438                           
  4439                           ;my_i2c.c: 122: if(ic_ptr->outbufind < ic_ptr->outbuflen) {
  4440  000150  0100               	movlb	0	; () banked
  4441  000152  EE20 F01B          	lfsr	2,27
  4442  000156  0100               	movlb	0	; () banked
  4443  000158  51CC               	movf	_ic_ptr& (0+255),w,b
  4444  00015A  26D9               	addwf	fsr2l,f,c
  4445  00015C  0100               	movlb	0	; () banked
  4446  00015E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4447  000160  22DA               	addwfc	fsr2h,f,c
  4448  000162  50DF               	movf	indf2,w,c
  4449  000164  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4450  000166  0100               	movlb	0	; () banked
  4451  000168  EE20 F01A          	lfsr	2,26
  4452  00016C  0100               	movlb	0	; () banked
  4453  00016E  51CC               	movf	_ic_ptr& (0+255),w,b
  4454  000170  26D9               	addwf	fsr2l,f,c
  4455  000172  0100               	movlb	0	; () banked
  4456  000174  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4457  000176  22DA               	addwfc	fsr2h,f,c
  4458  000178  50DF               	movf	indf2,w,c
  4459  00017A  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4460  00017C  B0D8               	btfsc	status,0,c
  4461  00017E  D026               	goto	i2l2766
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;my_i2c.c: 123: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4465  000180  0100               	movlb	0	; () banked
  4466  000182  EE20 F01B          	lfsr	2,27
  4467  000186  0100               	movlb	0	; () banked
  4468  000188  51CC               	movf	_ic_ptr& (0+255),w,b
  4469  00018A  26D9               	addwf	fsr2l,f,c
  4470  00018C  0100               	movlb	0	; () banked
  4471  00018E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4472  000190  22DA               	addwfc	fsr2h,f,c
  4473  000192  50DF               	movf	indf2,w,c
  4474  000194  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4475  000196  502E               	movf	??_i2c_master_int_handler,w,c
  4476  000198  0D01               	mullw	1
  4477  00019A  0E10               	movlw	16
  4478  00019C  26F3               	addwf	prodl,f,c
  4479  00019E  0E00               	movlw	0
  4480  0001A0  22F4               	addwfc	prodh,f,c
  4481  0001A2  50F3               	movf	prodl,w,c
  4482  0001A4  0100               	movlb	0	; () banked
  4483  0001A6  25CC               	addwf	_ic_ptr& (0+255),w,b
  4484  0001A8  6ED9               	movwf	fsr2l,c
  4485  0001AA  50F4               	movf	prodh,w,c
  4486  0001AC  0100               	movlb	0	; () banked
  4487  0001AE  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4488  0001B0  6EDA               	movwf	fsr2h,c
  4489  0001B2  50DF               	movf	indf2,w,c
  4490  0001B4  6EC9               	movwf	4041,c	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;my_i2c.c: 124: ic_ptr->outbufind++;
  4494  0001B6  0100               	movlb	0	; () banked
  4495  0001B8  EE20 F01B          	lfsr	2,27
  4496  0001BC  0100               	movlb	0	; () banked
  4497  0001BE  51CC               	movf	_ic_ptr& (0+255),w,b
  4498  0001C0  26D9               	addwf	fsr2l,f,c
  4499  0001C2  0100               	movlb	0	; () banked
  4500  0001C4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4501  0001C6  22DA               	addwfc	fsr2h,f,c
  4502  0001C8  2ADF               	incf	indf2,f,c
  4503                           
  4504                           ;my_i2c.c: 125: }
  4505  0001CA  0012               	return	
  4506  0001CC                     i2l2766:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;my_i2c.c: 126: else if(ic_ptr->outbufind == ic_ptr->outbuflen) {
  4510  0001CC  0100               	movlb	0	; () banked
  4511  0001CE  EE20 F01B          	lfsr	2,27
  4512  0001D2  0100               	movlb	0	; () banked
  4513  0001D4  51CC               	movf	_ic_ptr& (0+255),w,b
  4514  0001D6  26D9               	addwf	fsr2l,f,c
  4515  0001D8  0100               	movlb	0	; () banked
  4516  0001DA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4517  0001DC  22DA               	addwfc	fsr2h,f,c
  4518  0001DE  0100               	movlb	0	; () banked
  4519  0001E0  EE10 F01A          	lfsr	1,26
  4520  0001E4  0100               	movlb	0	; () banked
  4521  0001E6  51CC               	movf	_ic_ptr& (0+255),w,b
  4522  0001E8  26E1               	addwf	fsr1l,f,c
  4523  0001EA  0100               	movlb	0	; () banked
  4524  0001EC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4525  0001EE  22E2               	addwfc	fsr1h,f,c
  4526  0001F0  50E7               	movf	indf1,w,c
  4527  0001F2  62DF               	cpfseq	indf2,c
  4528  0001F4  0012               	return	
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;my_i2c.c: 127: ic_ptr->status = 0x2;
  4532  0001F6  0100               	movlb	0	; () banked
  4533  0001F8  EE20 F00D          	lfsr	2,13
  4534  0001FC  0100               	movlb	0	; () banked
  4535  0001FE  51CC               	movf	_ic_ptr& (0+255),w,b
  4536  000200  26D9               	addwf	fsr2l,f,c
  4537  000202  0100               	movlb	0	; () banked
  4538  000204  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4539  000206  22DA               	addwfc	fsr2h,f,c
  4540  000208  0E02               	movlw	2
  4541  00020A  6EDF               	movwf	indf2,c
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;my_i2c.c: 128: SSP1CON2bits.PEN = 1;
  4545  00020C  84C5               	bsf	4037,2,c	;volatile
  4546  00020E  0012               	return	
  4547  000210                     i2l2772:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;my_i2c.c: 133: ic_ptr->status = 0x7;
  4551  000210  0100               	movlb	0	; () banked
  4552  000212  EE20 F00D          	lfsr	2,13
  4553  000216  0100               	movlb	0	; () banked
  4554  000218  51CC               	movf	_ic_ptr& (0+255),w,b
  4555  00021A  26D9               	addwf	fsr2l,f,c
  4556  00021C  0100               	movlb	0	; () banked
  4557  00021E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4558  000220  22DA               	addwfc	fsr2h,f,c
  4559  000222  0E07               	movlw	7
  4560  000224  6EDF               	movwf	indf2,c
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;my_i2c.c: 134: SSP1CON2bits.RCEN = 1;
  4564  000226  86C5               	bsf	4037,3,c	;volatile
  4565                           
  4566                           ;my_i2c.c: 135: break;
  4567  000228  0012               	return	
  4568  00022A                     i2l2776:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;my_i2c.c: 138: if(ic_ptr->bufind != 0xFF && ic_ptr->bufind < ic_ptr->buflen) {
  4572  00022A  0100               	movlb	0	; () banked
  4573  00022C  EE20 F00B          	lfsr	2,11
  4574  000230  0100               	movlb	0	; () banked
  4575  000232  51CC               	movf	_ic_ptr& (0+255),w,b
  4576  000234  26D9               	addwf	fsr2l,f,c
  4577  000236  0100               	movlb	0	; () banked
  4578  000238  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4579  00023A  22DA               	addwfc	fsr2h,f,c
  4580  00023C  50DF               	movf	indf2,w,c
  4581  00023E  0AFF               	xorlw	255
  4582  000240  B4D8               	btfsc	status,2,c
  4583  000242  D062               	goto	i2l2792
  4584                           
  4585                           ; BSR set to: 0
  4586  000244  0100               	movlb	0	; () banked
  4587  000246  EE20 F00B          	lfsr	2,11
  4588  00024A  0100               	movlb	0	; () banked
  4589  00024C  51CC               	movf	_ic_ptr& (0+255),w,b
  4590  00024E  26D9               	addwf	fsr2l,f,c
  4591  000250  0100               	movlb	0	; () banked
  4592  000252  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4593  000254  22DA               	addwfc	fsr2h,f,c
  4594  000256  50DF               	movf	indf2,w,c
  4595  000258  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4596  00025A  0100               	movlb	0	; () banked
  4597  00025C  EE20 F00A          	lfsr	2,10
  4598  000260  0100               	movlb	0	; () banked
  4599  000262  51CC               	movf	_ic_ptr& (0+255),w,b
  4600  000264  26D9               	addwf	fsr2l,f,c
  4601  000266  0100               	movlb	0	; () banked
  4602  000268  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4603  00026A  22DA               	addwfc	fsr2h,f,c
  4604  00026C  50DF               	movf	indf2,w,c
  4605  00026E  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4606  000270  B0D8               	btfsc	status,0,c
  4607  000272  D04A               	goto	i2l2792
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;my_i2c.c: 140: ic_ptr->buffer[ic_ptr->bufind] = SSP1BUF;
  4611  000274  0100               	movlb	0	; () banked
  4612  000276  EE20 F00B          	lfsr	2,11
  4613  00027A  0100               	movlb	0	; () banked
  4614  00027C  51CC               	movf	_ic_ptr& (0+255),w,b
  4615  00027E  26D9               	addwf	fsr2l,f,c
  4616  000280  0100               	movlb	0	; () banked
  4617  000282  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4618  000284  22DA               	addwfc	fsr2h,f,c
  4619  000286  50DF               	movf	indf2,w,c
  4620  000288  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4621  00028A  502E               	movf	??_i2c_master_int_handler,w,c
  4622  00028C  0D01               	mullw	1
  4623  00028E  50F3               	movf	prodl,w,c
  4624  000290  0100               	movlb	0	; () banked
  4625  000292  25CC               	addwf	_ic_ptr& (0+255),w,b
  4626  000294  6ED9               	movwf	fsr2l,c
  4627  000296  50F4               	movf	prodh,w,c
  4628  000298  0100               	movlb	0	; () banked
  4629  00029A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4630  00029C  6EDA               	movwf	fsr2h,c
  4631  00029E  CFC9 FFDF          	movff	4041,indf2	;volatile
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;my_i2c.c: 141: ic_ptr->bufind++;
  4635  0002A2  0100               	movlb	0	; () banked
  4636  0002A4  EE20 F00B          	lfsr	2,11
  4637  0002A8  0100               	movlb	0	; () banked
  4638  0002AA  51CC               	movf	_ic_ptr& (0+255),w,b
  4639  0002AC  26D9               	addwf	fsr2l,f,c
  4640  0002AE  0100               	movlb	0	; () banked
  4641  0002B0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4642  0002B2  22DA               	addwfc	fsr2h,f,c
  4643  0002B4  2ADF               	incf	indf2,f,c
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;my_i2c.c: 142: if(ic_ptr->bufind < ic_ptr->buflen) {
  4647  0002B6  0100               	movlb	0	; () banked
  4648  0002B8  EE20 F00B          	lfsr	2,11
  4649  0002BC  0100               	movlb	0	; () banked
  4650  0002BE  51CC               	movf	_ic_ptr& (0+255),w,b
  4651  0002C0  26D9               	addwf	fsr2l,f,c
  4652  0002C2  0100               	movlb	0	; () banked
  4653  0002C4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4654  0002C6  22DA               	addwfc	fsr2h,f,c
  4655  0002C8  50DF               	movf	indf2,w,c
  4656  0002CA  6E2E               	movwf	??_i2c_master_int_handler& (0+255),c
  4657  0002CC  0100               	movlb	0	; () banked
  4658  0002CE  EE20 F00A          	lfsr	2,10
  4659  0002D2  0100               	movlb	0	; () banked
  4660  0002D4  51CC               	movf	_ic_ptr& (0+255),w,b
  4661  0002D6  26D9               	addwf	fsr2l,f,c
  4662  0002D8  0100               	movlb	0	; () banked
  4663  0002DA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4664  0002DC  22DA               	addwfc	fsr2h,f,c
  4665  0002DE  50DF               	movf	indf2,w,c
  4666  0002E0  5C2E               	subwf	??_i2c_master_int_handler,w,c
  4667  0002E2  B0D8               	btfsc	status,0,c
  4668  0002E4  D00E               	goto	i2l247
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;my_i2c.c: 144: ic_ptr->status = 0x5;
  4672  0002E6  0100               	movlb	0	; () banked
  4673  0002E8  EE20 F00D          	lfsr	2,13
  4674  0002EC  0100               	movlb	0	; () banked
  4675  0002EE  51CC               	movf	_ic_ptr& (0+255),w,b
  4676  0002F0  26D9               	addwf	fsr2l,f,c
  4677  0002F2  0100               	movlb	0	; () banked
  4678  0002F4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4679  0002F6  22DA               	addwfc	fsr2h,f,c
  4680  0002F8  0E05               	movlw	5
  4681  0002FA  6EDF               	movwf	indf2,c
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;my_i2c.c: 145: SSP1CON2bits.ACKDT = 0;
  4685  0002FC  9AC5               	bcf	4037,5,c	;volatile
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;my_i2c.c: 146: SSP1CON2bits.ACKEN = 1;
  4689  0002FE  88C5               	bsf	4037,4,c	;volatile
  4690                           
  4691                           ;my_i2c.c: 147: }
  4692  000300  0012               	return	
  4693  000302                     i2l247:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;my_i2c.c: 148: else {
  4697                           ;my_i2c.c: 150: SSP1CON2bits.ACKDT = 1;
  4698  000302  8AC5               	bsf	4037,5,c	;volatile
  4699                           
  4700                           ;my_i2c.c: 151: SSP1CON2bits.ACKEN = 1;
  4701  000304  88C5               	bsf	4037,4,c	;volatile
  4702  000306  0012               	return	
  4703  000308                     i2l2792:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;my_i2c.c: 155: else if(ic_ptr->bufind == 0xFF) {
  4707  000308  0100               	movlb	0	; () banked
  4708  00030A  EE20 F00B          	lfsr	2,11
  4709  00030E  0100               	movlb	0	; () banked
  4710  000310  51CC               	movf	_ic_ptr& (0+255),w,b
  4711  000312  26D9               	addwf	fsr2l,f,c
  4712  000314  0100               	movlb	0	; () banked
  4713  000316  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4714  000318  22DA               	addwfc	fsr2h,f,c
  4715  00031A  0EFF               	movlw	255
  4716  00031C  62DF               	cpfseq	indf2,c
  4717  00031E  D00F               	goto	i2l2800
  4718  000320                     i2l251:
  4719  000320  BCC5               	btfsc	4037,6,c	;volatile
  4720  000322  D7FE               	goto	i2l251
  4721                           
  4722                           ;my_i2c.c: 157: ic_ptr->bufind = 0;
  4723  000324  0100               	movlb	0	; () banked
  4724  000326  EE20 F00B          	lfsr	2,11
  4725  00032A  0100               	movlb	0	; () banked
  4726  00032C  51CC               	movf	_ic_ptr& (0+255),w,b
  4727  00032E  26D9               	addwf	fsr2l,f,c
  4728  000330  0100               	movlb	0	; () banked
  4729  000332  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4730  000334  22DA               	addwfc	fsr2h,f,c
  4731  000336  0E00               	movlw	0
  4732  000338  6EDF               	movwf	indf2,c
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;my_i2c.c: 158: SSP1CON2bits.RCEN = 1;
  4736  00033A  86C5               	bsf	4037,3,c	;volatile
  4737                           
  4738                           ;my_i2c.c: 159: }
  4739  00033C  0012               	return	
  4740  00033E                     i2l2800:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;my_i2c.c: 160: else {
  4744                           ;my_i2c.c: 161: ic_ptr->status = 0x2;
  4745  00033E  0100               	movlb	0	; () banked
  4746  000340  EE20 F00D          	lfsr	2,13
  4747  000344  0100               	movlb	0	; () banked
  4748  000346  51CC               	movf	_ic_ptr& (0+255),w,b
  4749  000348  26D9               	addwf	fsr2l,f,c
  4750  00034A  0100               	movlb	0	; () banked
  4751  00034C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4752  00034E  22DA               	addwfc	fsr2h,f,c
  4753  000350  0E02               	movlw	2
  4754  000352  6EDF               	movwf	indf2,c
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;my_i2c.c: 162: SSP1CON2bits.PEN = 1;
  4758  000354  84C5               	bsf	4037,2,c	;volatile
  4759  000356  0012               	return	
  4760  000358                     i2l2806:
  4761  000358  0100               	movlb	0	; () banked
  4762  00035A  EE20 F00D          	lfsr	2,13
  4763  00035E  0100               	movlb	0	; () banked
  4764  000360  51CC               	movf	_ic_ptr& (0+255),w,b
  4765  000362  26D9               	addwf	fsr2l,f,c
  4766  000364  0100               	movlb	0	; () banked
  4767  000366  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4768  000368  22DA               	addwfc	fsr2h,f,c
  4769  00036A  50DF               	movf	indf2,w,c
  4770                           
  4771                           ; Switch size 1, requested type "space"
  4772                           ; Number of cases is 5, Range of values is 1 to 7
  4773                           ; switch strategies available:
  4774                           ; Name         Instructions Cycles
  4775                           ; simple_byte           16     9 (average)
  4776                           ;	Chosen strategy is simple_byte
  4777  00036C  0A01               	xorlw	1	; case 1
  4778  00036E  B4D8               	btfsc	status,2,c
  4779  000370  D6A5               	goto	i2l229
  4780  000372  0A03               	xorlw	3	; case 2
  4781  000374  B4D8               	btfsc	status,2,c
  4782  000376  D6DE               	goto	i2l2758
  4783  000378  0A01               	xorlw	1	; case 3
  4784  00037A  B4D8               	btfsc	status,2,c
  4785  00037C  D6E7               	goto	i2l238
  4786  00037E  0A06               	xorlw	6	; case 5
  4787  000380  B4D8               	btfsc	status,2,c
  4788  000382  D746               	goto	i2l2772
  4789  000384  0A02               	xorlw	2	; case 7
  4790  000386  A4D8               	btfss	status,2,c
  4791  000388  0012               	return	
  4792  00038A  D74F               	goto	i2l2776
  4793  00038C                     __end_of_i2c_master_int_handler:
  4794                           	opt stack 0
  4795                           pclatu	equ	0xFFB
  4796                           pclath	equ	0xFFA
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           fsr0h	equ	0xFEA
  4806                           fsr0l	equ	0xFE9
  4807                           wreg	equ	0xFE8
  4808                           indf1	equ	0xFE7
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           bsr	equ	0xFE0
  4812                           indf2	equ	0xFDF
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           fsr2h	equ	0xFDA
  4816                           fsr2l	equ	0xFD9
  4817                           status	equ	0xFD8
  4818                           
  4819 ;; *************** function _SleepIfOkay *****************
  4820 ;; Defined at:
  4821 ;;		line 226 in file "../src/messages.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    2
  4842 ;; This function calls:
  4843 ;;		_check_msg
  4844 ;;		_enter_sleep_mode
  4845 ;;		_in_high_int
  4846 ;;		_in_low_int
  4847 ;; This function is called by:
  4848 ;;		_InterruptHandlerHigh
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text31
  4853  000C3A                     __ptext31:
  4854                           	opt stack 0
  4855  000C3A                     _SleepIfOkay:
  4856                           	opt stack 19
  4857                           
  4858                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;incstack = 0
  4862  000C3A  6631               	tstfsz	_MQ_Main_Willing_to_block,c
  4863  000C3C  D001               	goto	i2l2820
  4864  000C3E  0012               	return	
  4865  000C40                     i2l2820:
  4866                           
  4867                           ;messages.c: 230: }
  4868                           ;messages.c: 233: if (in_low_int()) {
  4869  000C40  ECDE  F006         	call	_in_low_int	;wreg free
  4870  000C44  0100               	movlb	0	; () banked
  4871  000C46  5199               	movf	(?_in_low_int+1)& (0+255),w,b
  4872  000C48  0100               	movlb	0	; () banked
  4873  000C4A  1198               	iorwf	?_in_low_int& (0+255),w,b
  4874  000C4C  A4D8               	btfss	status,2,c
  4875  000C4E  0012               	return	
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;messages.c: 235: }
  4879                           ;messages.c: 238: if (!in_high_int()) {
  4880                           
  4881                           ; BSR set to: 0
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;messages.c: 234: return;
  4885  000C50  ECD9  F007         	call	_in_high_int	;wreg free
  4886  000C54  0100               	movlb	0	; () banked
  4887  000C56  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  4888  000C58  0100               	movlb	0	; () banked
  4889  000C5A  1196               	iorwf	?_in_high_int& (0+255),w,b
  4890  000C5C  B4D8               	btfsc	status,2,c
  4891  000C5E  0012               	return	
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;messages.c: 240: }
  4895                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  4896                           
  4897                           ; BSR set to: 0
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;messages.c: 239: return;
  4901  000C60  0101               	movlb	1	; () banked
  4902  000C62  0E01               	movlw	high _ToMainHigh_MQ
  4903  000C64  0100               	movlb	0	; () banked
  4904  000C66  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  4905  000C68  0101               	movlb	1	; () banked
  4906  000C6A  0E6C               	movlw	low _ToMainHigh_MQ
  4907  000C6C  0100               	movlb	0	; () banked
  4908  000C6E  6F96               	movwf	check_msg@qptr& (0+255),b
  4909  000C70  EC4B  F007         	call	_check_msg	;wreg free
  4910  000C74  0900               	iorlw	0
  4911  000C76  A4D8               	btfss	status,2,c
  4912  000C78  0012               	return	
  4913                           
  4914                           ;messages.c: 247: }
  4915                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  4916                           
  4917                           ;messages.c: 246: return;
  4918  000C7A  0100               	movlb	0	; () banked
  4919  000C7C  0E00               	movlw	high _ToMainLow_MQ
  4920  000C7E  0100               	movlb	0	; () banked
  4921  000C80  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  4922  000C82  0100               	movlb	0	; () banked
  4923  000C84  0E60               	movlw	low _ToMainLow_MQ
  4924  000C86  0100               	movlb	0	; () banked
  4925  000C88  6F96               	movwf	check_msg@qptr& (0+255),b
  4926  000C8A  EC4B  F007         	call	_check_msg	;wreg free
  4927  000C8E  0900               	iorlw	0
  4928  000C90  B4D8               	btfsc	status,2,c
  4929                           
  4930                           ;messages.c: 250: }
  4931                           ;messages.c: 251: enter_sleep_mode();
  4932                           
  4933                           ;messages.c: 249: return;
  4934  000C92  ECE5  F007         	call	_enter_sleep_mode	;wreg free
  4935  000C96  0012               	return	
  4936  000C98                     __end_of_SleepIfOkay:
  4937                           	opt stack 0
  4938                           pclatu	equ	0xFFB
  4939                           pclath	equ	0xFFA
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           prodh	equ	0xFF4
  4945                           prodl	equ	0xFF3
  4946                           intcon	equ	0xFF2
  4947                           postinc0	equ	0xFEE
  4948                           fsr0h	equ	0xFEA
  4949                           fsr0l	equ	0xFE9
  4950                           wreg	equ	0xFE8
  4951                           indf1	equ	0xFE7
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           bsr	equ	0xFE0
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _in_low_int *****************
  4963 ;; Defined at:
  4964 ;;		line 30 in file "../src/interrupts.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  2    2[BANK0 ] int 
  4971 ;; Registers used:
  4972 ;;		wreg, status,2, status,0, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4982 ;;Total ram usage:        2 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    1
  4985 ;; This function calls:
  4986 ;;		_in_high_int
  4987 ;; This function is called by:
  4988 ;;		_SleepIfOkay
  4989 ;;		_in_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text32
  4994  000DBC                     __ptext32:
  4995                           	opt stack 0
  4996  000DBC                     _in_low_int:
  4997                           	opt stack 19
  4998                           
  4999                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  5000                           
  5001                           ;incstack = 0
  5002  000DBC  ACF2               	btfss	intcon,6,c	;volatile
  5003  000DBE  D007               	goto	i2l2672
  5004                           
  5005                           ;interrupts.c: 32: return (0);
  5006  000DC0  0E00               	movlw	0
  5007  000DC2  0100               	movlb	0	; () banked
  5008  000DC4  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  5009  000DC6  0E00               	movlw	0
  5010  000DC8  0100               	movlb	0	; () banked
  5011  000DCA  6F98               	movwf	?_in_low_int& (0+255),b
  5012  000DCC  0012               	return	
  5013  000DCE                     i2l2672:
  5014  000DCE  ECD9  F007         	call	_in_high_int	;wreg free
  5015  000DD2  0100               	movlb	0	; () banked
  5016  000DD4  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  5017  000DD6  0100               	movlb	0	; () banked
  5018  000DD8  1196               	iorwf	?_in_high_int& (0+255),w,b
  5019  000DDA  B4D8               	btfsc	status,2,c
  5020  000DDC  D007               	goto	i2l2680
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;interrupts.c: 34: return (0);
  5024  000DDE  0E00               	movlw	0
  5025  000DE0  0100               	movlb	0	; () banked
  5026  000DE2  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  5027  000DE4  0E00               	movlw	0
  5028  000DE6  0100               	movlb	0	; () banked
  5029  000DE8  6F98               	movwf	?_in_low_int& (0+255),b
  5030  000DEA  0012               	return	
  5031  000DEC                     i2l2680:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;interrupts.c: 36: return (1);
  5035  000DEC  0E00               	movlw	0
  5036  000DEE  0100               	movlb	0	; () banked
  5037  000DF0  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  5038  000DF2  0E01               	movlw	1
  5039  000DF4  0100               	movlb	0	; () banked
  5040  000DF6  6F98               	movwf	?_in_low_int& (0+255),b
  5041  000DF8  0012               	return	
  5042  000DFA                     __end_of_in_low_int:
  5043                           	opt stack 0
  5044                           pclatu	equ	0xFFB
  5045                           pclath	equ	0xFFA
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           prodh	equ	0xFF4
  5051                           prodl	equ	0xFF3
  5052                           intcon	equ	0xFF2
  5053                           postinc0	equ	0xFEE
  5054                           fsr0h	equ	0xFEA
  5055                           fsr0l	equ	0xFE9
  5056                           wreg	equ	0xFE8
  5057                           indf1	equ	0xFE7
  5058                           fsr1h	equ	0xFE2
  5059                           fsr1l	equ	0xFE1
  5060                           bsr	equ	0xFE0
  5061                           indf2	equ	0xFDF
  5062                           postinc2	equ	0xFDE
  5063                           postdec2	equ	0xFDD
  5064                           fsr2h	equ	0xFDA
  5065                           fsr2l	equ	0xFD9
  5066                           status	equ	0xFD8
  5067                           
  5068 ;; *************** function _in_high_int *****************
  5069 ;; Defined at:
  5070 ;;		line 22 in file "../src/interrupts.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  2    0[BANK0 ] int 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;Total ram usage:        2 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_in_low_int
  5094 ;;		_SleepIfOkay
  5095 ;;		_in_main
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text33
  5100  000FB2                     __ptext33:
  5101                           	opt stack 0
  5102  000FB2                     _in_high_int:
  5103                           	opt stack 19
  5104                           
  5105                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;incstack = 0
  5109  000FB2  0E00               	movlw	0
  5110  000FB4  AEF2               	btfss	intcon,7,c	;volatile
  5111  000FB6  0E01               	movlw	1
  5112  000FB8  0100               	movlb	0	; () banked
  5113  000FBA  6F96               	movwf	?_in_high_int& (0+255),b
  5114  000FBC  0100               	movlb	0	; () banked
  5115  000FBE  6B97               	clrf	(?_in_high_int+1)& (0+255),b
  5116  000FC0  0012               	return	
  5117  000FC2                     __end_of_in_high_int:
  5118                           	opt stack 0
  5119                           pclatu	equ	0xFFB
  5120                           pclath	equ	0xFFA
  5121                           tblptru	equ	0xFF8
  5122                           tblptrh	equ	0xFF7
  5123                           tblptrl	equ	0xFF6
  5124                           tablat	equ	0xFF5
  5125                           prodh	equ	0xFF4
  5126                           prodl	equ	0xFF3
  5127                           intcon	equ	0xFF2
  5128                           postinc0	equ	0xFEE
  5129                           fsr0h	equ	0xFEA
  5130                           fsr0l	equ	0xFE9
  5131                           wreg	equ	0xFE8
  5132                           indf1	equ	0xFE7
  5133                           fsr1h	equ	0xFE2
  5134                           fsr1l	equ	0xFE1
  5135                           bsr	equ	0xFE0
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8
  5142                           
  5143 ;; *************** function _enter_sleep_mode *****************
  5144 ;; Defined at:
  5145 ;;		line 202 in file "../src/messages.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;		None               void
  5152 ;; Registers used:
  5153 ;;		None
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_SleepIfOkay
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text34
  5173  000FCA                     __ptext34:
  5174                           	opt stack 0
  5175  000FCA                     _enter_sleep_mode:
  5176                           	opt stack 20
  5177                           
  5178                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;incstack = 0
  5182  000FCA  8ED3               	bsf	4051,7,c	;volatile
  5183  000FCC  0003               	sleep		;# 
  5184  000FCE  0012               	return	
  5185  000FD0                     __end_of_enter_sleep_mode:
  5186                           	opt stack 0
  5187                           pclatu	equ	0xFFB
  5188                           pclath	equ	0xFFA
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           intcon	equ	0xFF2
  5196                           postinc0	equ	0xFEE
  5197                           fsr0h	equ	0xFEA
  5198                           fsr0l	equ	0xFE9
  5199                           wreg	equ	0xFE8
  5200                           indf1	equ	0xFE7
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           bsr	equ	0xFE0
  5204                           indf2	equ	0xFDF
  5205                           postinc2	equ	0xFDE
  5206                           postdec2	equ	0xFDD
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _check_msg *****************
  5212 ;; Defined at:
  5213 ;;		line 220 in file "../src/messages.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  5216 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      unsigned char 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;Total ram usage:        3 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_SleepIfOkay
  5238 ;;		_block_on_To_msgqueues
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text35
  5243  000E96                     __ptext35:
  5244                           	opt stack 0
  5245  000E96                     _check_msg:
  5246                           	opt stack 20
  5247                           
  5248                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  5249                           
  5250                           ;incstack = 0
  5251  000E96  0100               	movlb	0	; () banked
  5252  000E98  EE20 F035          	lfsr	2,53
  5253  000E9C  0100               	movlb	0	; () banked
  5254  000E9E  5196               	movf	check_msg@qptr& (0+255),w,b
  5255  000EA0  26D9               	addwf	fsr2l,f,c
  5256  000EA2  0100               	movlb	0	; () banked
  5257  000EA4  5197               	movf	(check_msg@qptr+1)& (0+255),w,b
  5258  000EA6  22DA               	addwfc	fsr2h,f,c
  5259  000EA8  50DF               	movf	indf2,w,c
  5260  000EAA  6E2E               	movwf	??_check_msg& (0+255),c
  5261  000EAC  502E               	movf	??_check_msg,w,c
  5262  000EAE  0D0D               	mullw	13
  5263  000EB0  50F3               	movf	prodl,w,c
  5264  000EB2  0100               	movlb	0	; () banked
  5265  000EB4  2596               	addwf	check_msg@qptr& (0+255),w,b
  5266  000EB6  6ED9               	movwf	fsr2l,c
  5267  000EB8  50F4               	movf	prodh,w,c
  5268  000EBA  0100               	movlb	0	; () banked
  5269  000EBC  2197               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  5270  000EBE  6EDA               	movwf	fsr2h,c
  5271  000EC0  50DF               	movf	indf2,w,c
  5272  000EC2  0012               	return	
  5273  000EC4                     __end_of_check_msg:
  5274                           	opt stack 0
  5275  0000                     pclatu	equ	0xFFB
  5276                           pclath	equ	0xFFA
  5277                           tblptru	equ	0xFF8
  5278                           tblptrh	equ	0xFF7
  5279                           tblptrl	equ	0xFF6
  5280                           tablat	equ	0xFF5
  5281                           prodh	equ	0xFF4
  5282                           prodl	equ	0xFF3
  5283                           intcon	equ	0xFF2
  5284                           postinc0	equ	0xFEE
  5285                           fsr0h	equ	0xFEA
  5286                           fsr0l	equ	0xFE9
  5287                           wreg	equ	0xFE8
  5288                           indf1	equ	0xFE7
  5289                           fsr1h	equ	0xFE2
  5290                           fsr1l	equ	0xFE1
  5291                           bsr	equ	0xFE0
  5292                           indf2	equ	0xFDF
  5293                           postinc2	equ	0xFDE
  5294                           postdec2	equ	0xFDD
  5295                           fsr2h	equ	0xFDA
  5296                           fsr2l	equ	0xFD9
  5297                           status	equ	0xFD8
  5298                           pclatu	equ	0xFFB
  5299                           pclath	equ	0xFFA
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           postinc0	equ	0xFEE
  5308                           fsr0h	equ	0xFEA
  5309                           fsr0l	equ	0xFE9
  5310                           wreg	equ	0xFE8
  5311                           indf1	equ	0xFE7
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           bsr	equ	0xFE0
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322                           	psect	rparam
  5323  0000                     pclatu	equ	0xFFB
  5324                           pclath	equ	0xFFA
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           prodh	equ	0xFF4
  5330                           prodl	equ	0xFF3
  5331                           intcon	equ	0xFF2
  5332                           postinc0	equ	0xFEE
  5333                           fsr0h	equ	0xFEA
  5334                           fsr0l	equ	0xFE9
  5335                           wreg	equ	0xFE8
  5336                           indf1	equ	0xFE7
  5337                           fsr1h	equ	0xFE2
  5338                           fsr1l	equ	0xFE1
  5339                           bsr	equ	0xFE0
  5340                           indf2	equ	0xFDF
  5341                           postinc2	equ	0xFDE
  5342                           postdec2	equ	0xFDD
  5343                           fsr2h	equ	0xFDA
  5344                           fsr2l	equ	0xFD9
  5345                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      50
    BANK0           160     54     112
    BANK1           256     52     214
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[31]), 
		 -> main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@ic(BANK1[31]), 
		 -> main@uc(BANK1[5]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 31
		 -> main@ic(BANK1[31]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 2
		 -> main@msg(BANK1[2]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 31
		 -> NULL(NULL[0]), main@ic(BANK1[31]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 31
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[31]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    recv_msg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), 

    send_msg@data	PTR void  size(2) Largest target is 31
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK1[31]), 
		 -> main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__get_buffer	PTR unsigned char  size(2) Largest target is 10
		 -> get_buffer@ret_buf(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_master_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _SleepIfOkay->_check_msg

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _main in BANK0

    _main->_Open1USART
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->_recv_msg
    _recv_msg->i2_memcpy
    _SleepIfOkay->_in_low_int
    _in_low_int->_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_get_buffer

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0    2494
                                             12 BANK1     40    40      0
                         _Open1USART
                  _enable_interrupts
                         _get_buffer
               _i2c_configure_master
                    _i2c_master_recv
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _wait_till_idle
 ---------------------------------------------------------------------------------
 (1) _wait_till_idle                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      5     3      2     251
                                             48 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_recv                                      2     1      1     158
                                             48 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_buffer                                          17    15      2     167
                                             48 BANK0      5     3      2
                                              0 BANK1     12    12      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     375
                                             48 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptHandlerLow                                 17    17      0    4787
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (4) _uart_recv_int_handler                                1     1      0    2350
                                             26 COMRAM     1     1      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (5) _Read1USART                                           1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _timer1_int_handler                                   2     2      0    2437
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (5) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _ToMainLow_sendmsg                                    4     1      3    2316
                                             22 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (6) _send_msg                                            12     6      6    1833
                                             10 COMRAM    12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6     459
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (5) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    4400
                                             34 BANK0     14    14      0
                        _SleepIfOkay
             _i2c_master_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   6     6      0    4078
                                             28 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    1611
                                             21 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (11) i2_send_msg                                         12     6      6     998
                                             45 COMRAM     1     1      0
                                             10 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (10) _FromMainHigh_recvmsg                                5     1      4    2152
                                             45 COMRAM     1     1      0
                                             24 BANK0      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (11) _recv_msg                                           14     7      7    1929
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     384
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (9) _i2c_master_int_handler                               1     1      0       0
                                             45 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     322
                          _check_msg
                   _enter_sleep_mode
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (10) _in_low_int                                          2     0      2       0
                                              2 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (11) _in_high_int                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _check_msg                                           3     1      2     322
                                             45 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _enable_interrupts
   _get_buffer
   _i2c_configure_master
   _i2c_master_recv
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _wait_till_idle

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _check_msg
     _enter_sleep_mode
     _in_high_int
     _in_low_int
       _in_high_int
   _i2c_master_int_handler
   _timer0_int_handler
     _FromMainHigh_recvmsg
       _recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     34      D6       8       83.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      70       5       70.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      32       1       52.6%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     178       6        0.0%
DATA                 0      0     178       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Feb 25 21:09:20 2015

       _MQ_Main_Willing_to_block 0031                      _SSPSTATbits 000FC7  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 0F14  
                   __CFG_CP0$OFF 000000                      get_buffer@i 01AC  
                            l440 0AD6                              l442 0AE2  
                            l443 0AE4                              l436 0ABE  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 0096                 ??_init_uart_recv 00C8  
                ReadTimer1@timer 0003                             l3000 0998  
                           l3004 09CA                             l3086 076E  
                           l2692 0C12                             l2934 0AC0  
                           l2926 0AAE                             l2960 03A2  
                           l2946 0AD8                             l2972 0486  
                           l2982 0F50                             l2968 040A  
                           l2988 0864                             _LATB 000F8A  
                           i1l47 0070                  _FromMainHigh_MQ 0100  
               ??_wait_till_idle 00C6                   Read1USART@data 0001  
                           _main 06F6                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9           __CFG_DSWDTOSC$T1OSCREF 000000  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 00B6  
                     i2_send_msg 060E    __size_of_i2c_configure_master 003A  
                 send_msg@length 000D      __size_of_timer0_int_handler 006E  
                  __CFG_PLLDIV$3 000000                            ?_main 0001  
                          i1l453 0F40                            i2l233 011C  
                          i2l251 0320                            i2l229 00BC  
                          i2l238 014C                            i2l247 0302  
    FromMainHigh_recvmsg@msgtype 00AE                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _TRISB 000F93  
                     i2memcpy@d1 0096                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0098                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                       _Read1USART 0F32  
                 __CFG_T1DIG$OFF 000000                            tablat 000FF5  
                          status 000FD8                 __end_ofi2_memcpy 0D3E  
                __initialization 0D7E                     __end_of_main 07AE  
                     _ReadTimer1 0F8E      __size_of_timer1_int_handler 002C  
     __size_of_ToMainLow_sendmsg 0024    __size_of_FromMainHigh_recvmsg 0034  
                 __CFG_OSC$HSPLL 000000                       _Open1USART 0A92  
                         ??_main 00CC                  send_msg@msgtype 000E  
                  __activetblptr 000002                  send_msg@tlength 0012  
      i2c_master_recv@slave_addr 00C6          ??_uart_recv_int_handler 001B  
                         i1l3048 0066                           i1l2562 0D50  
                         i1l2568 0D6C                           i1l2596 07E6  
                         i2l3040 0A54                           i1l2856 096E  
                         i2l3034 0A4A                           i2l2620 0550  
                 __CFG_WDTEN$OFF 000000                           i2l2800 033E  
                         i2l2820 0C40                           i2l2572 0D08  
                         i2l2636 060A                           i2l2652 065C  
                         i2l2806 0358                           i2l2680 0DEC  
                         i2l2672 0DCE                           i2l2754 00EE  
                         i2l2578 0D28                           i2l2772 0210  
                         i2l2766 01CC                           i2l2758 0134  
                         i2l2792 0308                           i2l2776 022A  
                         _RCREG1 000FAF                    ??_SleepIfOkay 002F  
                         _RCSTA1 000FAC                           _OSCCON 000FD3  
                         _SPBRG1 000FB0                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
                         _TXSTA1 000FAD                   __CFG_WPDIS$OFF 000000  
                    ?i2_send_msg 00A0                   __CFG_XINST$OFF 000000  
                _i2c_master_recv 0858                  _i2c_master_send 038C  
                         _ic_ptr 00CC                 __end_of_init_i2c 0BD6  
                         _memcpy 0D3E                           clear_0 0D84  
                         clear_1 0D90                           _uc_ptr 002F  
                         main@ic 01B7                           main@uc 01B2  
               __end_of_recv_msg 060E                 __end_of_send_msg 0858  
          timer0_int_handler@val 00B6                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00C8                get_buffer@ret_buf 01A2  
           __size_of_in_high_int 0010                      ?_Read1USART 0001  
                     __accesstop 0060          __end_of__initialization 0DB2  
     __end_of_ToMainHigh_sendmsg 0E96                  __CFG_IOL1WAY$ON 000000  
           __CFG_WPEND$PAGE_WPFP 000000      __end_of_init_timer1_lthread 0F7C  
            __end_of_SleepIfOkay 0C98                   __pcstackCOMRAM 0001  
                   __pidataBANK0 0FD0                      ?_ReadTimer1 0001  
             __size_of_check_msg 002E                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 00C6        timer0_int_handler@msgtype 00B4  
  __size_of_InterruptHandlerHigh 0A8A      __end_of_InterruptHandlerLow 00B6  
                      ?i2_memcpy 0096                    _ToMainHigh_MQ 016C  
               _enter_sleep_mode 0FCA              __size_ofi2_send_msg 00E8  
                  check_msg@qptr 0096             __size_of_init_queues 0056  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                     __pnvCOMRAM 002F          __end_of_i2c_master_recv 08F6  
        __end_of_i2c_master_send 04F0         ??_i2c_master_int_handler 002E  
              recv_msg@maxlength 00A2                  recv_msg@msgtype 00A3  
                recv_msg@tlength 00AA                 WriteTimer0@timer 0098  
                        ?_memcpy 0001                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 002E                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E                 Open1USART@config 00CB  
   __end_of_i2c_configure_master 0E34                       ??i2_memcpy 002E  
                     _get_buffer 098A                          _SPBRGH1 000F7F  
                        _SSP1BUF 000FC9                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
            __size_of_ReadTimer1 0012                __end_of_check_msg 0EC4  
                      ?_init_i2c 00C6                      _SleepIfOkay 0C3A  
            __size_of_Open1USART 0070                        ?_recv_msg 00A0  
                     _in_low_int 0DBC                          __Hparam 0000  
                      ?_send_msg 000B                          __Lparam 0000  
     __end_of_timer0_int_handler 0B70                 init_uart_recv@uc 00C6  
                __CFG_STVREN$OFF 000000                          __pcinit 0D7E  
                __size_of_memcpy 0040                       _init_queue 0BD6  
                        __ramtop 0F00                          __ptext0 06F6  
                        __ptext1 0F50                          __ptext2 0F14  
                        __ptext3 0F6A                          __ptext4 0C98  
                        __ptext5 0BD6                          __ptext6 0B70  
                        __ptext7 038C                          __ptext8 0858  
                        __ptext9 0DFA              __end_of_WriteTimer0 0FB2  
            __end_of_WriteTimer1 0F8E                          main@msg 01B0  
                 __pintcode_body 0A14     __end_of_FromMainHigh_recvmsg 0E68  
           end_of_initialization 0DB2   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 0007                          memcpy@n 0005  
                        memcpy@s 0009    __end_of_uart_recv_int_handler 098A  
                     ??_init_i2c 00C8                    __Lmediumconst 0000  
                        int_func 0A14          __size_of_init_uart_recv 001E  
               ?_i2c_master_recv 00C6                 ?_i2c_master_send 00C6  
                     ??_recv_msg 00A7                     ??i2_send_msg 002E  
                     ??_send_msg 0011  __size_of_i2c_master_int_handler 02D2  
     __end_of_timer1_int_handler 0EF0                        _RCSTAbits 000FAC  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 00AB  
        __size_of_wait_till_idle 001A                        _PORTBbits 000F81  
               __CFG_DSBOREN$OFF 000000                      ?_get_buffer 00C6  
               __CFG_CPUDIV$OSC1 000000                        _TRISBbits 000F93  
             __end_ofi2_send_msg 06F6                     ??_Read1USART 0001  
  FromMainHigh_recvmsg@maxlength 002E         timer1_int_handler@result 001B  
              __CFG_WPFP$PAGE_63 000000                      ?_in_low_int 0098  
           _i2c_configure_master 0DFA              __CFG_MSSP7B_EN$MSK7 000000  
       __end_of_enter_sleep_mode 0FD0                     ??_ReadTimer1 0003  
             _ToMainHigh_sendmsg 0E68                     ??_Open1USART 00C8  
                    ?_init_queue 00C6                        i2memcpy@d 009C  
                    _WriteTimer0 0FA0                      _WriteTimer1 0F7C  
                      i2memcpy@n 009A                        i2memcpy@s 009E  
             __end_of_Read1USART 0F50                   __end_of_memcpy 0D7E  
              _enable_interrupts 0FC2                 __CFG_DSWDTEN$OFF 000000  
            ?_ToMainHigh_sendmsg 00AB               ?_enable_interrupts 0001  
            start_initialization 0D7E           _i2c_master_int_handler 00BA  
                  ??_in_high_int 002E                __size_ofi2_memcpy 0050  
            ??_enable_interrupts 00C6               __end_of_ReadTimer1 0FA0  
   __end_of_InterruptHandlerHigh 0A92               __end_of_Open1USART 0B02  
                     init_i2c@ic 00C6             ??_ToMainHigh_sendmsg 002F  
          ?_i2c_configure_master 0001              __size_of_get_buffer 008A  
                    __pdataBANK0 00CE                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 0FCA                         ??_memcpy 0007  
           _FromMainHigh_recvmsg 0E34     __size_of_init_timer1_lthread 0012  
                    __pbssCOMRAM 0031                    ??_init_queues 00C9  
                  __pcstackBANK0 0096                    __pcstackBANK1 01A2  
            __size_of_in_low_int 003E         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 009E              __end_of_in_high_int 0FC2  
                   ?_SleepIfOkay 0001                     _ToMainLow_MQ 0060  
            __size_of_init_queue 0064                   _init_uart_recv 0F14  
                      _check_msg 0E96                        __pnvBANK0 00CC  
              __size_of_init_i2c 0066                     recv_msg@data 00A5  
                   recv_msg@qmsg 00AC                     recv_msg@slot 00A9  
                   recv_msg@qptr 00A0                __size_of_recv_msg 011E  
                      __pintcode 0008                   _wait_till_idle 0F50  
              __size_of_send_msg 00AA            ?_FromMainHigh_recvmsg 00AE  
                    __pintcodelo 0018                  Open1USART@spbrg 00C6  
              WriteTimer0@timer0 0096               _timer0_int_handler 0B02  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
          ToMainLow_sendmsg@data 0018              ?_timer0_int_handler 0001  
         __end_of_init_uart_recv 0F32              __end_of_init_queues 0CEE  
          i2c_master_recv@length 00C7                         _LATBbits 000F8A  
         ??_i2c_configure_master 00C6                       ?_check_msg 0096  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
         __end_of_wait_till_idle 0F6A                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 00AC                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                        main@F9238 00CE  
           ??_timer0_int_handler 002F            i2c_master_send@length 00CA  
     __size_of_enable_interrupts 0008               _timer1_int_handler 0EC4  
                   ??_get_buffer 00C8             _InterruptHandlerHigh 0008  
                       i2_memcpy 0CEE         FromMainHigh_recvmsg@data 00B0  
                    _in_high_int 0FB2                     send_msg@data 000F  
                   send_msg@qmsg 0015                     send_msg@slot 0014  
                   send_msg@qptr 000B              ?_timer1_int_handler 0001  
                ?_init_uart_recv 00C6            _uart_recv_int_handler 08F6  
                   ??_in_low_int 002E                         __Hrparam 0000  
                ?_wait_till_idle 0001                         __Lrparam 0000  
             __end_of_get_buffer 0A14                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 002E             ??_timer1_int_handler 001B  
             ??_enter_sleep_mode 002E         __size_of_i2c_master_recv 009E  
       __size_of_i2c_master_send 0164                     ??_init_queue 00C8  
                   ?_WriteTimer0 0096                     ?_WriteTimer1 0001  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
          ?_InterruptHandlerHigh 0001                i2send_msg@msgtype 00A3  
              i2send_msg@tlength 00A6          init_timer1_lthread@tptr 00C6  
                    _init_queues 0C98               __end_of_in_low_int 0DFA  
                       __ptext10 098A                         __ptext11 0FC2  
                       __ptext20 0D3E                         __ptext12 0A92  
                       __ptext21 0F8E                         __ptext30 00BA  
                       __ptext14 08F6                         __ptext31 0C3A  
                       __ptext23 0B02                         __ptext15 0F32  
                       __ptext32 0DBC                         __ptext24 0FA0  
                       __ptext16 0EC4                         __ptext33 0FB2  
                       __ptext25 0E68                         __ptext17 0F7C  
                       __ptext34 0FCA                         __ptext26 060E  
                       __ptext18 0EF0                         __ptext35 0E96  
                       __ptext27 0E34                         __ptext19 07AE  
                       __ptext28 04F0                         __ptext29 0CEE  
                   _SSP1CON2bits 000FC5         timer0_int_handler@length 00B2  
                       _init_i2c 0B70              _init_timer1_lthread 0F6A  
                  __size_of_main 00B8                main@t1thread_data 01AE  
                    ??_check_msg 002E               __end_of_init_queue 0C3A  
           __size_of_SleepIfOkay 005E                         _recv_msg 04F0  
                       _send_msg 07AE                   init_queue@qptr 00C6  
 __end_of_i2c_master_int_handler 038C              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 00C6                    _USART1_Status 0032  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 0001                         memcpy@s1 0003  
               i2send_msg@length 00A2                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
         ?_uart_recv_int_handler 0001                       _RCSTA1bits 000FAC  
    __size_of_ToMainHigh_sendmsg 002E                       _OSCCONbits 000FD3  
       ToMainHigh_sendmsg@length 00AE            ??_init_timer1_lthread 00C8  
         ??_InterruptHandlerHigh 00B8                _ToMainLow_sendmsg 0EF0  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 00C7  
              ??_i2c_master_send 00C8               i2c_master_send@msg 00C6  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 00A4            ??_InterruptHandlerLow 001D  
                 i2send_msg@qmsg 00A9                   i2send_msg@slot 00A8  
                 i2send_msg@qptr 00A0              ??_ToMainLow_sendmsg 001A  
